<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta name="robots" content="index,nofollow">



<title>Projects - MLton Standard ML Compiler (SML Compiler)</title>
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="all" href="common.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="screen" href="screen.css">
<link rel="stylesheet" type="text/css" charset="iso-8859-1" media="print" href="print.css">


<link rel="Start" href="Home">


</head>

<body lang="en" dir="ltr">

<table bgcolor = lightblue cellspacing = 0 style = "border: 0px;" width = 100%>
  <tr>
    <td style = "
		border: 0px;
		color: darkblue; 
		font-size: 150%;
		text-align: left;">
      <a class = mltona href="Home">MLton 20051202</a>
    <td style = "
		border: 0px;
		font-size: 150%;
		text-align: center;
		width: 50%;">
      Projects
    <td style = "
		border: 0px;
		text-align: right;">
      <table cellspacing = 0 style = "border: 0px">
        <tr style = "vertical-align: middle;">
      </table>
  <tr style = "background-color: white;">
    <td colspan = 3
	style = "
		border: 0px;
		font-size:70%;
		text-align: right;">
      <a href = "Home">Home</a>
      &nbsp;<a href = "Index">Index</a>
      &nbsp;
</table>
<div id="content" lang="en" dir="ltr">
We have lots of ideas for projects to improve MLton, many of which we do not have time to implement, or at least haven't started on yet. Here is a list of some of those improvements, ranging from the easy (1 week) to the difficult (several months).  If you have any interest in working on one of these, or some other improvement to MLton not listed here, please send mail to <a class="external" href="mailto:MLton@mlton.org"><img src="moin-email.png" alt="[MAILTO]" height="10" width="14">MLton@mlton.org</a>. 
    <ul>

    <li>
<p>
 Port to new platform: Windows (native, not Cygwin or MinGW), ... 
</p>
</li>
    <li>
<p>
 Source-level debugger 
</p>
</li>
    <li>
<p>
 Heap profiler 
</p>
</li>
    <li>
<p>
 Interfaces to libraries: OpenGL, ... 
</p>
</li>
    <li>
<p>
 Additional constant types: Real80, ... 
</p>
</li>
    <li>
<p>
 An IDE (possibly integrated with <a href="Eclipse">Eclipse</a>) 
</p>
</li>
    <li>
<p>
 Port MLRISC and use for code generation 
</p>
</li>
    <li>
<p>
 Optimizations 
</p>
</li>

        <ul>

        <li>
<p>
 Improved closure representation 
</p>
</li>

                <ul>

    Right now, MLton's closure conversion algorithm uses a simple flat closure to represent each function. 
                </ul>


        <li>
<p>
 Elimination of array bounds checks in loops 
</p>
</li>
        <li>
<p>
 Elimination of overflow checks on array index computations 
</p>
</li>
        <li>
<p>
 Common-subexpression elimination of repeated array subscripts 
</p>
</li>
        <li>
<p>
 Loop-invariant code motion, especially for tuple selects 
</p>
</li>
        <li>
<p>
 Auto-vectorization, for MMX/SSE/3DNow/AltiVec (see the <a class="external" href="http://gcc.gnu.org/projects/tree-ssa/vectorization.html"><img src="moin-www.png" alt="[WWW]" height="11" width="11">work done on GCC</a>) 
</p>
</li>

        </ul>


    <li>
<p>
 Analyses 
</p>
</li>

        <ul>

        <li>
<p>
 Uncaught exception analysis 
</p>
</li>
</ul>

</ul>

</div>



<p>
<hr>
Last edited on 2005-12-02 00:53:29 by <span title="ppp-71-139-183-221.dsl.snfc21.pacbell.net"><a href="StephenWeeks">StephenWeeks</a></span>.
</body></html>
