diff --git a/Controls/controls-lib.mlb b/Controls/controls-lib.mlb
new file mode 100644
index 0000000..90f2fa7
--- /dev/null
+++ b/Controls/controls-lib.mlb
@@ -0,0 +1,170 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l11 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = Option
+   end
+   local
+      open l4
+   in
+      structure gs_1 = List
+   end
+   local
+      open l11
+   in
+      structure gs_2 = Atom
+   end
+   local
+      open l4
+   in
+      structure gs_3 = Int
+   end
+   local
+      controls-sig.sml
+   in
+      signature gs_4 = CONTROLS
+   end
+   local
+      open l11
+   in
+      structure gs_5 = AtomTable
+   end
+   local
+      structure Atom = gs_2
+      structure AtomTable = gs_5
+      structure Int = gs_3
+      structure List = gs_1
+      control-reps.sml
+   in
+      structure gs_6 = ControlReps
+   end
+   local
+      structure Atom = gs_2
+      signature CONTROLS = gs_4
+      structure ControlReps = gs_6
+      structure Int = gs_3
+      structure List = gs_1
+      structure Option = gs_0
+      controls.sml
+   in
+      structure gs_7 = Controls
+   end
+   local
+      open l11
+   in
+      structure gs_8 = ListMergeSort
+   end
+   local
+      structure Atom = gs_2
+      structure Controls = gs_7
+      control-set-sig.sml
+   in
+      signature gs_9 = CONTROL_SET
+   end
+   local
+      structure AtomTable = gs_5
+      signature CONTROL_SET = gs_9
+      structure ControlReps = gs_6
+      structure Controls = gs_7
+      structure ListMergeSort = gs_8
+      structure Option = gs_0
+      control-set.sml
+   in
+      structure gs_10 = ControlSet
+   end
+   local
+      structure ControlSet = gs_10
+      structure Controls = gs_7
+      registry-sig.sml
+   in
+      signature gs_11 = CONTROL_REGISTRY
+   end
+   local
+      open l4
+   in
+      structure gs_12 = String
+   end
+   local
+      open l4
+   in
+      structure gs_13 = Real
+   end
+   local
+      open l4
+   in
+      structure gs_14 = Char
+   end
+   local
+      open l4
+   in
+      structure gs_15 = Bool
+   end
+   local
+      structure Controls = gs_7
+      control-util-sig.sml
+   in
+      signature gs_16 = CONTROL_UTIL
+   end
+   local
+      structure Bool = gs_15
+      signature CONTROL_UTIL = gs_16
+      structure Char = gs_14
+      structure Controls = gs_7
+      structure Int = gs_3
+      structure List = gs_1
+      structure Real = gs_13
+      structure String = gs_12
+      control-util.sml
+   in
+      structure gs_17 = ControlUtil
+   end
+   local
+      open l4
+   in
+      structure gs_18 = OS
+   end
+   local
+      structure Atom = gs_2
+      structure AtomTable = gs_5
+      signature CONTROL_REGISTRY = gs_11
+      structure ControlReps = gs_6
+      structure ControlSet = gs_10
+      structure Controls = gs_7
+      structure List = gs_1
+      structure ListMergeSort = gs_8
+      structure OS = gs_18
+      registry.sml
+   in
+      structure gs_19 = ControlRegistry
+   end
+in
+   signature CONTROLS = gs_4
+   signature CONTROL_REGISTRY = gs_11
+   signature CONTROL_SET = gs_9
+   signature CONTROL_UTIL = gs_16
+   structure ControlRegistry = gs_19
+   structure ControlSet = gs_10
+   structure ControlUtil = gs_17
+   structure Controls = gs_7
+end
+end
+
+end
diff --git a/HTML/html-attrs-fn.sml b/HTML/html-attrs-fn.sml
index fde0845..e5b5dd5 100644
--- a/HTML/html-attrs-fn.sml
+++ b/HTML/html-attrs-fn.sml
@@ -89,19 +89,24 @@ functor HTMLAttrsFn (Err : HTML_ERROR) : HTML_ATTRS =
 		fun error () = (
 		      Err.badAttrVal ctx (attrName, attrValToString attrVal);
 		      NONE)
-		fun cvt (AT_IMPLICIT, IMPLICIT) = SOME IMPLICIT
-		  | cvt (AT_INSTANCE, IMPLICIT) = SOME(NAME attrName)
-		  | cvt (AT_TEXT, v) = SOME v
-		  | cvt (AT_NUMBER, v) = SOME v
-		  | cvt (AT_NAMES names, (NAME s | STRING s)) = (
+		fun atNames (names, s) = (
 		      case (List.find (eqName s) names)
 		       of NONE => error()
 			| (SOME name) => SOME(NAME name)
 		      (* end case *))
-		  | cvt (AT_IMPLICIT, (NAME s | STRING s)) =
+		fun atImplicit (s) =
 		      if (s = attrName)
 			then SOME IMPLICIT
 			else error()
+
+		fun cvt (AT_IMPLICIT, IMPLICIT) = SOME IMPLICIT
+		  | cvt (AT_INSTANCE, IMPLICIT) = SOME(NAME attrName)
+		  | cvt (AT_TEXT, v) = SOME v
+		  | cvt (AT_NUMBER, v) = SOME v
+		  | cvt (AT_NAMES names, NAME s) = atNames (names, s)
+		  | cvt (AT_NAMES names, STRING s) = atNames (names, s)
+		  | cvt (AT_IMPLICIT, NAME s) = atImplicit (s)
+		  | cvt (AT_IMPLICIT, STRING s) = atImplicit (s)
 		  | cvt _ = error()
 		in
 		  case (HTbl.find attrTbl attrName)
@@ -138,7 +143,8 @@ functor HTMLAttrsFn (Err : HTML_ERROR) : HTML_ATTRS =
 	  val getFn = bindFindAttr (attrMap, attr)
 	  fun get attrVec = (case (getFn attrVec)
 		 of NONE => NONE
-		  | (SOME((STRING s) | (NAME s))) => SOME s
+		  | SOME (STRING s) => SOME s
+		  | SOME (NAME s) => SOME s
 		  | _ => (
 		      Err.missingAttrVal (getContext attrVec) attr;
 		      NONE)
@@ -162,31 +168,41 @@ functor HTMLAttrsFn (Err : HTML_ERROR) : HTML_ATTRS =
 	  end
     fun getNUMBER (attrMap, attr) = let
 	  val getFn = bindFindAttr (attrMap, attr)
-	  fun get attrVec = (case (getFn attrVec)
+	  fun get attrVec = let
+	  fun doitStringName s = (case (Int.fromString s)
+		 of NONE =>  (
+		      Err.badAttrVal (getContext attrVec) (attr, s);
+		      NONE)
+		  | someN => someN
+		(* end case *))
+          in
+             (case (getFn attrVec)
 		 of NONE => NONE
-		  | (SOME((STRING s) | (NAME s))) => (case (Int.fromString s)
-		       of NONE =>  (
-			    Err.badAttrVal (getContext attrVec) (attr, s);
-			    NONE)
-			| someN => someN
-		      (* end case *))
+		  | SOME (STRING s) => doitStringName s
+		  | SOME (NAME s) => doitStringName s
 		  | SOME IMPLICIT => raise Fail "getNUMBER: IMPLICIT unexpected"
 		(* end case *))
+          end
 	  in
 	    get
 	  end
     fun getChar (attrMap, attr) = let
 	  val getFn = bindFindAttr (attrMap, attr)
-	  fun get attrVec = (case (getFn attrVec)
-		 of NONE => NONE
-		  | (SOME((STRING s) | (NAME s))) =>
-		      if (size s = 1) then SOME(String.sub(s, 0))
+	  fun get attrVec = let
+	  fun doitStringName s =
+		if (size s = 1) then SOME(String.sub(s, 0))
 (** NOTE: we should probably accept &#xx; as a character value **)
-			else  (
-			Err.badAttrVal (getContext attrVec) (attr, s);
-			NONE)
+		  else  (
+		  Err.badAttrVal (getContext attrVec) (attr, s);
+		  NONE)
+          in
+             (case (getFn attrVec)
+		 of NONE => NONE
+		  | SOME (STRING s) => doitStringName s
+		  | SOME (NAME s) => doitStringName s
 		  | SOME IMPLICIT => raise Fail "getChar: IMPLICIT unexpected"
 		(* end case *))
+	  end
 	  in
 	    get
 	  end
diff --git a/HTML/html-elements-fn.sml b/HTML/html-elements-fn.sml
index 9495983..fade6d7 100644
--- a/HTML/html-elements-fn.sml
+++ b/HTML/html-elements-fn.sml
@@ -144,7 +144,8 @@ functor HTMLElementsFn (
    *   3) a string literal enclosed in ''
    *)
     fun scanAttrVal (ctx, attrName, ss) = let
-	  fun isNameChar (#"." | #"-") = true
+	  fun isNameChar #"." = true
+	    | isNameChar #"-" = true
 	    | isNameChar c = (Char.isAlphaNum c)
 	  in
 	    case SS.getc ss
diff --git a/HTML/html-gram.desc b/HTML/html-gram.desc
new file mode 100644
index 0000000..8a23ad2
--- /dev/null
+++ b/HTML/html-gram.desc
@@ -0,0 +1,6055 @@
+
+state 0:
+
+	Document : . StartHTML Head Body EndHTML 
+
+	START_HTML	shift 2
+
+	Document	goto 282
+	StartHTML	goto 1
+
+	.	reduce by rule 1
+
+
+state 1:
+
+	Document : StartHTML . Head Body EndHTML 
+
+	START_HEAD	shift 5
+
+	Head	goto 4
+	StartHEAD	goto 3
+
+	.	reduce by rule 6
+
+
+state 2:
+
+	StartHTML : START_HTML .  (reduce by rule 2)
+
+
+
+	.	reduce by rule 2
+
+
+state 3:
+
+	Head : StartHEAD . HeadContents EndHEAD 
+
+	TAG_BASE	shift 14
+	TAG_ISINDEX	shift 13
+	TAG_LINK	shift 12
+	TAG_META	shift 11
+	START_SCRIPT	shift 10
+	START_STYLE	shift 9
+
+	HeadContents	goto 8
+	HeadElements	goto 7
+	HeadElement	goto 6
+
+	.	reduce by rule 11
+
+
+state 4:
+
+	Document : StartHTML Head . Body EndHTML 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	START_BODY	shift 73
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	Body	goto 27
+	BodyContent0	goto 26
+	BodyElement	goto 25
+	BlockWOIndex	goto 24
+	Paragraph	goto 23
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 20
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	error
+
+
+state 5:
+
+	StartHEAD : START_HEAD .  (reduce by rule 7)
+
+
+
+	.	reduce by rule 7
+
+
+state 6:
+
+	HeadElements : HeadElement . HeadElements 
+
+	TAG_BASE	shift 14
+	TAG_ISINDEX	shift 13
+	TAG_LINK	shift 12
+	TAG_META	shift 11
+	START_SCRIPT	shift 10
+	START_STYLE	shift 9
+
+	HeadElements	goto 80
+	HeadElement	goto 6
+
+	.	reduce by rule 11
+
+
+state 7:
+
+	HeadContents : HeadElements . START_TITLE PCData END_TITLE HeadElements 
+
+	START_TITLE	shift 81
+
+
+	.	error
+
+
+state 8:
+
+	Head : StartHEAD HeadContents . EndHEAD 
+
+	END_HEAD	shift 83
+
+	EndHEAD	goto 82
+
+	.	reduce by rule 8
+
+
+state 9:
+
+	HeadElement : START_STYLE . PCData END_STYLE 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 86
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 10:
+
+	HeadElement : START_SCRIPT . PCData END_SCRIPT 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 87
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 11:
+
+	HeadElement : TAG_META .  (reduce by rule 13)
+
+
+
+	.	reduce by rule 13
+
+
+state 12:
+
+	HeadElement : TAG_LINK .  (reduce by rule 14)
+
+
+
+	.	reduce by rule 14
+
+
+state 13:
+
+	HeadElement : TAG_ISINDEX .  (reduce by rule 15)
+
+
+
+	.	reduce by rule 15
+
+
+state 14:
+
+	HeadElement : TAG_BASE .  (reduce by rule 16)
+
+
+
+	.	reduce by rule 16
+
+
+state 15:
+
+	TextWOScript : PCDataElem .  (reduce by rule 108)
+
+
+
+	.	reduce by rule 108
+
+
+state 16:
+
+	TextWOScript : Form .  (reduce by rule 112)
+
+
+
+	.	reduce by rule 112
+
+
+state 17:
+
+	TextWOScript : Special .  (reduce by rule 111)
+
+
+
+	.	reduce by rule 111
+
+
+state 18:
+
+	TextWOScript : Phrase .  (reduce by rule 110)
+
+
+
+	.	reduce by rule 110
+
+
+state 19:
+
+	TextWOScript : Font .  (reduce by rule 109)
+
+
+
+	.	reduce by rule 109
+
+
+state 20:
+
+	BodyContent0 : TextWOScript . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 94
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 21:
+
+	BlockWOIndex : Preformatted .  (reduce by rule 55)
+
+
+
+	.	reduce by rule 55
+
+
+state 22:
+
+	BlockWOIndex : List .  (reduce by rule 54)
+
+
+
+	.	reduce by rule 54
+
+
+state 23:
+
+	BodyContent0 : Paragraph . END_P BodyContent1 
+	BodyContent0 : Paragraph . BodyContent2 
+
+	START_ADDRESS	shift 78
+	START_BLOCKQUOTE	shift 74
+	START_CENTER	shift 71
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	TAG_ISINDEX	shift 96
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	END_P	shift 101
+	START_PRE	shift 44
+	START_TABLE	shift 36
+	START_UL	shift 32
+
+	BodyContent2	goto 100
+	BodyElement	goto 99
+	BlockWOIndex	goto 92
+	Block	goto 98
+	Paragraph	goto 97
+	List	goto 22
+	Preformatted	goto 21
+
+	.	reduce by rule 35
+
+
+state 24:
+
+	BodyContent0 : BlockWOIndex . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 102
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 25:
+
+	BodyContent0 : BodyElement . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 103
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 26:
+
+	Body : BodyContent0 . EndBODY 
+
+	END_BODY	shift 105
+
+	EndBODY	goto 104
+
+	.	reduce by rule 20
+
+
+state 27:
+
+	Document : StartHTML Head Body . EndHTML 
+
+	END_HTML	shift 107
+
+	EndHTML	goto 106
+
+	.	reduce by rule 3
+
+
+state 28:
+
+	PCDataElem : ENTITY_REF .  (reduce by rule 154)
+
+
+
+	.	reduce by rule 154
+
+
+state 29:
+
+	PCDataElem : CHAR_REF .  (reduce by rule 153)
+
+
+
+	.	reduce by rule 153
+
+
+state 30:
+
+	PCDataElem : PCDATA .  (reduce by rule 152)
+
+
+
+	.	reduce by rule 152
+
+
+state 31:
+
+	Phrase : START_VAR . TextList END_VAR 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 110
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 32:
+
+	List : START_UL . ListItemList END_UL 
+
+	START_LI	shift 113
+
+	ListItemList	goto 112
+	ListItem	goto 111
+
+	.	reduce by rule 70
+
+
+state 33:
+
+	Font : START_U . TextList END_U 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 114
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 34:
+
+	Font : START_TT . TextList END_TT 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 115
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 35:
+
+	Form : START_TEXTAREA . PCData END_TEXTAREA 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 116
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 36:
+
+	BlockWOIndex : START_TABLE . optCaption TableRowList END_TABLE 
+
+	START_CAPTION	shift 118
+
+	optCaption	goto 117
+
+	.	reduce by rule 93
+
+
+state 37:
+
+	Font : START_SUP . TextList END_SUP 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 119
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 38:
+
+	Font : START_SUB . TextList END_SUB 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 120
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 39:
+
+	Phrase : START_STRONG . TextList END_STRONG 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 121
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 40:
+
+	Font : START_STRIKE . TextList END_STRIKE 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 122
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 41:
+
+	Font : START_SMALL . TextList END_SMALL 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 123
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 42:
+
+	Form : START_SELECT . OptionList END_SELECT 
+
+	START_OPTION	shift 125
+
+	OptionList	goto 124
+
+	.	reduce by rule 145
+
+
+state 43:
+
+	Phrase : START_SAMP . TextList END_SAMP 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 126
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 44:
+
+	Preformatted : START_PRE . TextList END_PRE 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 127
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 45:
+
+	Special : TAG_PARAM .  (reduce by rule 139)
+
+
+
+	.	reduce by rule 139
+
+
+state 46:
+
+	Paragraph : START_P . TextList 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 128
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 47:
+
+	List : START_OL . ListItemList END_OL 
+
+	START_LI	shift 113
+
+	ListItemList	goto 129
+	ListItem	goto 111
+
+	.	reduce by rule 70
+
+
+state 48:
+
+	List : START_MENU . ListItemList END_MENU 
+
+	START_LI	shift 113
+
+	ListItemList	goto 130
+	ListItem	goto 111
+
+	.	reduce by rule 70
+
+
+state 49:
+
+	Special : START_MAP . AreaList END_MAP 
+
+	TAG_AREA	shift 132
+
+	AreaList	goto 131
+
+	.	reduce by rule 140
+
+
+state 50:
+
+	Phrase : START_KBD . TextList END_KBD 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 133
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 51:
+
+	Form : TAG_INPUT .  (reduce by rule 142)
+
+
+
+	.	reduce by rule 142
+
+
+state 52:
+
+	Special : TAG_IMG .  (reduce by rule 133)
+
+
+
+	.	reduce by rule 133
+
+
+state 53:
+
+	Font : START_I . TextList END_I 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 134
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 54:
+
+	BlockWOIndex : TAG_HR .  (reduce by rule 60)
+
+
+
+	.	reduce by rule 60
+
+
+state 55:
+
+	BodyElement : START_H6 . TextList END_H6 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 135
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 56:
+
+	BodyElement : START_H5 . TextList END_H5 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 136
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 57:
+
+	BodyElement : START_H4 . TextList END_H4 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 137
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 58:
+
+	BodyElement : START_H3 . TextList END_H3 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 138
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 59:
+
+	BodyElement : START_H2 . TextList END_H2 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 139
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 60:
+
+	BodyElement : START_H1 . TextList END_H1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 140
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 61:
+
+	BlockWOIndex : START_FORM . BodyContent END_FORM 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 142
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 62:
+
+	Special : START_BASEFONT . TextList END_BASEFONT 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 143
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 63:
+
+	Special : START_FONT . TextList END_FONT 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 144
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 64:
+
+	Phrase : START_EM . TextList END_EM 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 145
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 65:
+
+	List : START_DL . DLItemList END_DL 
+
+	START_DD	shift 149
+	START_DT	shift 148
+
+	DLItemList	goto 147
+	DLItem	goto 146
+
+	.	reduce by rule 73
+
+
+state 66:
+
+	BlockWOIndex : START_DIV . BodyContent END_DIV 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 150
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 67:
+
+	List : START_DIR . ListItemList END_DIR 
+
+	START_LI	shift 113
+
+	ListItemList	goto 151
+	ListItem	goto 111
+
+	.	reduce by rule 70
+
+
+state 68:
+
+	Phrase : START_DFN . TextList END_DFN 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 152
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 69:
+
+	Phrase : START_CODE . TextList END_CODE 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 153
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 70:
+
+	Phrase : START_CITE . TextList END_CITE 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 154
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 71:
+
+	BlockWOIndex : START_CENTER . BodyContent END_CENTER 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 155
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 72:
+
+	Special : TAG_BR .  (reduce by rule 137)
+
+
+
+	.	reduce by rule 137
+
+
+state 73:
+
+	BodyContent0 : START_BODY . BodyContent 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 156
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 74:
+
+	BlockWOIndex : START_BLOCKQUOTE . BodyContent END_BLOCKQUOTE 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 157
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 75:
+
+	Font : START_BIG . TextList END_BIG 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 158
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 76:
+
+	Font : START_B . TextList END_B 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 159
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 77:
+
+	Special : START_APPLET . TextList END_APPLET 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 160
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 78:
+
+	BodyElement : START_ADDRESS . AddressContent1 END_ADDRESS 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	AddressContent1	goto 163
+	Paragraph	goto 162
+	TextWOScript	goto 89
+	Text	goto 161
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 47
+
+
+state 79:
+
+	Special : START_A . TextList END_A 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 164
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 80:
+
+	HeadElements : HeadElement HeadElements .  (reduce by rule 12)
+
+
+
+	.	reduce by rule 12
+
+
+state 81:
+
+	HeadContents : HeadElements START_TITLE . PCData END_TITLE HeadElements 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 165
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 82:
+
+	Head : StartHEAD HeadContents EndHEAD .  (reduce by rule 5)
+
+
+
+	.	reduce by rule 5
+
+
+state 83:
+
+	EndHEAD : END_HEAD .  (reduce by rule 9)
+
+
+
+	.	reduce by rule 9
+
+
+state 84:
+
+	PCDataList : PCDataElem . PCDataList 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCDataList	goto 166
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 85:
+
+	PCData : PCDataList .  (reduce by rule 149)
+
+
+
+	.	reduce by rule 149
+
+
+state 86:
+
+	HeadElement : START_STYLE PCData . END_STYLE 
+
+	END_STYLE	shift 167
+
+
+	.	error
+
+
+state 87:
+
+	HeadElement : START_SCRIPT PCData . END_SCRIPT 
+
+	END_SCRIPT	shift 168
+
+
+	.	error
+
+
+state 88:
+
+	BodyContent1 : Text . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 169
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 89:
+
+	Text : TextWOScript .  (reduce by rule 113)
+
+
+
+	.	reduce by rule 113
+
+
+state 90:
+
+	BodyContent1 : Paragraph . END_P BodyContent1 
+	BodyContent1 : Paragraph . BodyContent2 
+
+	START_ADDRESS	shift 78
+	START_BLOCKQUOTE	shift 74
+	START_CENTER	shift 71
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	TAG_ISINDEX	shift 96
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	END_P	shift 171
+	START_PRE	shift 44
+	START_TABLE	shift 36
+	START_UL	shift 32
+
+	BodyContent2	goto 170
+	BodyElement	goto 99
+	BlockWOIndex	goto 92
+	Block	goto 98
+	Paragraph	goto 97
+	List	goto 22
+	Preformatted	goto 21
+
+	.	reduce by rule 35
+
+
+state 91:
+
+	BodyContent1 : Block . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 172
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 92:
+
+	Block : BlockWOIndex .  (reduce by rule 62)
+
+
+
+	.	reduce by rule 62
+
+
+state 93:
+
+	BodyContent1 : BodyElement . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 173
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 94:
+
+	BodyContent0 : TextWOScript BodyContent1 .  (reduce by rule 24)
+
+
+
+	.	reduce by rule 24
+
+
+state 95:
+
+	Text : START_SCRIPT . PCData END_SCRIPT 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 174
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 96:
+
+	Block : TAG_ISINDEX .  (reduce by rule 63)
+
+
+
+	.	reduce by rule 63
+
+
+state 97:
+
+	BodyContent2 : Paragraph . END_P BodyContent1 
+	BodyContent2 : Paragraph . BodyContent2 
+
+	START_ADDRESS	shift 78
+	START_BLOCKQUOTE	shift 74
+	START_CENTER	shift 71
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	TAG_ISINDEX	shift 96
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	END_P	shift 176
+	START_PRE	shift 44
+	START_TABLE	shift 36
+	START_UL	shift 32
+
+	BodyContent2	goto 175
+	BodyElement	goto 99
+	BlockWOIndex	goto 92
+	Block	goto 98
+	Paragraph	goto 97
+	List	goto 22
+	Preformatted	goto 21
+
+	.	reduce by rule 35
+
+
+state 98:
+
+	BodyContent2 : Block . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 177
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 99:
+
+	BodyContent2 : BodyElement . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 178
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 100:
+
+	BodyContent0 : Paragraph BodyContent2 .  (reduce by rule 28)
+
+
+
+	.	reduce by rule 28
+
+
+state 101:
+
+	BodyContent0 : Paragraph END_P . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 179
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 102:
+
+	BodyContent0 : BlockWOIndex BodyContent1 .  (reduce by rule 26)
+
+
+
+	.	reduce by rule 26
+
+
+state 103:
+
+	BodyContent0 : BodyElement BodyContent1 .  (reduce by rule 25)
+
+
+
+	.	reduce by rule 25
+
+
+state 104:
+
+	Body : BodyContent0 EndBODY .  (reduce by rule 19)
+
+
+
+	.	reduce by rule 19
+
+
+state 105:
+
+	EndBODY : END_BODY .  (reduce by rule 21)
+
+
+
+	.	reduce by rule 21
+
+
+state 106:
+
+	Document : StartHTML Head Body EndHTML .  (reduce by rule 0)
+
+
+
+	.	reduce by rule 0
+
+
+state 107:
+
+	EndHTML : END_HTML .  (reduce by rule 4)
+
+
+
+	.	reduce by rule 4
+
+
+state 108:
+
+	TextList' : Text . TextList' 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList'	goto 180
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 109:
+
+	TextList : TextList' .  (reduce by rule 105)
+
+
+
+	.	reduce by rule 105
+
+
+state 110:
+
+	Phrase : START_VAR TextList . END_VAR 
+
+	END_VAR	shift 181
+
+
+	.	error
+
+
+state 111:
+
+	ListItemList : ListItem . ListItemList 
+
+	START_LI	shift 113
+
+	ListItemList	goto 182
+	ListItem	goto 111
+
+	.	reduce by rule 70
+
+
+state 112:
+
+	List : START_UL ListItemList . END_UL 
+
+	END_UL	shift 183
+
+
+	.	error
+
+
+state 113:
+
+	ListItem : START_LI . Flow1 EndLI 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 185
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 114:
+
+	Font : START_U TextList . END_U 
+
+	END_U	shift 188
+
+
+	.	error
+
+
+state 115:
+
+	Font : START_TT TextList . END_TT 
+
+	END_TT	shift 189
+
+
+	.	error
+
+
+state 116:
+
+	Form : START_TEXTAREA PCData . END_TEXTAREA 
+
+	END_TEXTAREA	shift 190
+
+
+	.	error
+
+
+state 117:
+
+	BlockWOIndex : START_TABLE optCaption . TableRowList END_TABLE 
+
+	START_TR	shift 193
+
+	TableRowList	goto 192
+	TableRow	goto 191
+
+	.	error
+
+
+state 118:
+
+	optCaption : START_CAPTION . TextList END_CAPTION 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 194
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 119:
+
+	Font : START_SUP TextList . END_SUP 
+
+	END_SUP	shift 195
+
+
+	.	error
+
+
+state 120:
+
+	Font : START_SUB TextList . END_SUB 
+
+	END_SUB	shift 196
+
+
+	.	error
+
+
+state 121:
+
+	Phrase : START_STRONG TextList . END_STRONG 
+
+	END_STRONG	shift 197
+
+
+	.	error
+
+
+state 122:
+
+	Font : START_STRIKE TextList . END_STRIKE 
+
+	END_STRIKE	shift 198
+
+
+	.	error
+
+
+state 123:
+
+	Font : START_SMALL TextList . END_SMALL 
+
+	END_SMALL	shift 199
+
+
+	.	error
+
+
+state 124:
+
+	Form : START_SELECT OptionList . END_SELECT 
+
+	END_SELECT	shift 200
+
+
+	.	error
+
+
+state 125:
+
+	OptionList : START_OPTION . PCData EndOPTION OptionList 
+
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	PCData	goto 201
+	PCDataList	goto 85
+	PCDataElem	goto 84
+
+	.	reduce by rule 150
+
+
+state 126:
+
+	Phrase : START_SAMP TextList . END_SAMP 
+
+	END_SAMP	shift 202
+
+
+	.	error
+
+
+state 127:
+
+	Preformatted : START_PRE TextList . END_PRE 
+
+	END_PRE	shift 203
+
+
+	.	error
+
+
+state 128:
+
+	Paragraph : START_P TextList .  (reduce by rule 64)
+
+
+
+	.	reduce by rule 64
+
+
+state 129:
+
+	List : START_OL ListItemList . END_OL 
+
+	END_OL	shift 204
+
+
+	.	error
+
+
+state 130:
+
+	List : START_MENU ListItemList . END_MENU 
+
+	END_MENU	shift 205
+
+
+	.	error
+
+
+state 131:
+
+	Special : START_MAP AreaList . END_MAP 
+
+	END_MAP	shift 206
+
+
+	.	error
+
+
+state 132:
+
+	AreaList : TAG_AREA . AreaList 
+
+	TAG_AREA	shift 132
+
+	AreaList	goto 207
+
+	.	reduce by rule 140
+
+
+state 133:
+
+	Phrase : START_KBD TextList . END_KBD 
+
+	END_KBD	shift 208
+
+
+	.	error
+
+
+state 134:
+
+	Font : START_I TextList . END_I 
+
+	END_I	shift 209
+
+
+	.	error
+
+
+state 135:
+
+	BodyElement : START_H6 TextList . END_H6 
+
+	END_H6	shift 210
+
+
+	.	error
+
+
+state 136:
+
+	BodyElement : START_H5 TextList . END_H5 
+
+	END_H5	shift 211
+
+
+	.	error
+
+
+state 137:
+
+	BodyElement : START_H4 TextList . END_H4 
+
+	END_H4	shift 212
+
+
+	.	error
+
+
+state 138:
+
+	BodyElement : START_H3 TextList . END_H3 
+
+	END_H3	shift 213
+
+
+	.	error
+
+
+state 139:
+
+	BodyElement : START_H2 TextList . END_H2 
+
+	END_H2	shift 214
+
+
+	.	error
+
+
+state 140:
+
+	BodyElement : START_H1 TextList . END_H1 
+
+	END_H1	shift 215
+
+
+	.	error
+
+
+state 141:
+
+	BodyContent : BodyContent1 .  (reduce by rule 22)
+
+
+
+	.	reduce by rule 22
+
+
+state 142:
+
+	BlockWOIndex : START_FORM BodyContent . END_FORM 
+
+	END_FORM	shift 216
+
+
+	.	error
+
+
+state 143:
+
+	Special : START_BASEFONT TextList . END_BASEFONT 
+
+	END_BASEFONT	shift 217
+
+
+	.	error
+
+
+state 144:
+
+	Special : START_FONT TextList . END_FONT 
+
+	END_FONT	shift 218
+
+
+	.	error
+
+
+state 145:
+
+	Phrase : START_EM TextList . END_EM 
+
+	END_EM	shift 219
+
+
+	.	error
+
+
+state 146:
+
+	DLItemList : DLItem . DLItemList 
+
+	START_DD	shift 149
+	START_DT	shift 148
+
+	DLItemList	goto 220
+	DLItem	goto 146
+
+	.	reduce by rule 73
+
+
+state 147:
+
+	List : START_DL DLItemList . END_DL 
+
+	END_DL	shift 221
+
+
+	.	error
+
+
+state 148:
+
+	DLItem : START_DT . TextList EndDT 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	TextList	goto 222
+	TextList'	goto 109
+	TextWOScript	goto 89
+	Text	goto 108
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 106
+
+
+state 149:
+
+	DLItem : START_DD . Flow1 EndDD 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 223
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 150:
+
+	BlockWOIndex : START_DIV BodyContent . END_DIV 
+
+	END_DIV	shift 224
+
+
+	.	error
+
+
+state 151:
+
+	List : START_DIR ListItemList . END_DIR 
+
+	END_DIR	shift 225
+
+
+	.	error
+
+
+state 152:
+
+	Phrase : START_DFN TextList . END_DFN 
+
+	END_DFN	shift 226
+
+
+	.	error
+
+
+state 153:
+
+	Phrase : START_CODE TextList . END_CODE 
+
+	END_CODE	shift 227
+
+
+	.	error
+
+
+state 154:
+
+	Phrase : START_CITE TextList . END_CITE 
+
+	END_CITE	shift 228
+
+
+	.	error
+
+
+state 155:
+
+	BlockWOIndex : START_CENTER BodyContent . END_CENTER 
+
+	END_CENTER	shift 229
+
+
+	.	error
+
+
+state 156:
+
+	BodyContent0 : START_BODY BodyContent .  (reduce by rule 23)
+
+
+
+	.	reduce by rule 23
+
+
+state 157:
+
+	BlockWOIndex : START_BLOCKQUOTE BodyContent . END_BLOCKQUOTE 
+
+	END_BLOCKQUOTE	shift 230
+
+
+	.	error
+
+
+state 158:
+
+	Font : START_BIG TextList . END_BIG 
+
+	END_BIG	shift 231
+
+
+	.	error
+
+
+state 159:
+
+	Font : START_B TextList . END_B 
+
+	END_B	shift 232
+
+
+	.	error
+
+
+state 160:
+
+	Special : START_APPLET TextList . END_APPLET 
+
+	END_APPLET	shift 233
+
+
+	.	error
+
+
+state 161:
+
+	AddressContent1 : Text . AddressContent1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	AddressContent1	goto 234
+	Paragraph	goto 162
+	TextWOScript	goto 89
+	Text	goto 161
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 47
+
+
+state 162:
+
+	AddressContent1 : Paragraph . END_P AddressContent1 
+	AddressContent1 : Paragraph . AddressContent2 
+
+	START_P	shift 46
+	END_P	shift 237
+
+	AddressContent2	goto 236
+	Paragraph	goto 235
+
+	.	reduce by rule 51
+
+
+state 163:
+
+	BodyElement : START_ADDRESS AddressContent1 . END_ADDRESS 
+
+	END_ADDRESS	shift 238
+
+
+	.	error
+
+
+state 164:
+
+	Special : START_A TextList . END_A 
+
+	END_A	shift 239
+
+
+	.	error
+
+
+state 165:
+
+	HeadContents : HeadElements START_TITLE PCData . END_TITLE HeadElements 
+
+	END_TITLE	shift 240
+
+
+	.	error
+
+
+state 166:
+
+	PCDataList : PCDataElem PCDataList .  (reduce by rule 151)
+
+
+
+	.	reduce by rule 151
+
+
+state 167:
+
+	HeadElement : START_STYLE PCData END_STYLE .  (reduce by rule 17)
+
+
+
+	.	reduce by rule 17
+
+
+state 168:
+
+	HeadElement : START_SCRIPT PCData END_SCRIPT .  (reduce by rule 18)
+
+
+
+	.	reduce by rule 18
+
+
+state 169:
+
+	BodyContent1 : Text BodyContent1 .  (reduce by rule 30)
+
+
+
+	.	reduce by rule 30
+
+
+state 170:
+
+	BodyContent1 : Paragraph BodyContent2 .  (reduce by rule 34)
+
+
+
+	.	reduce by rule 34
+
+
+state 171:
+
+	BodyContent1 : Paragraph END_P . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 241
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 172:
+
+	BodyContent1 : Block BodyContent1 .  (reduce by rule 32)
+
+
+
+	.	reduce by rule 32
+
+
+state 173:
+
+	BodyContent1 : BodyElement BodyContent1 .  (reduce by rule 31)
+
+
+
+	.	reduce by rule 31
+
+
+state 174:
+
+	Text : START_SCRIPT PCData . END_SCRIPT 
+
+	END_SCRIPT	shift 242
+
+
+	.	error
+
+
+state 175:
+
+	BodyContent2 : Paragraph BodyContent2 .  (reduce by rule 39)
+
+
+
+	.	reduce by rule 39
+
+
+state 176:
+
+	BodyContent2 : Paragraph END_P . BodyContent1 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent1	goto 243
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 177:
+
+	BodyContent2 : Block BodyContent1 .  (reduce by rule 37)
+
+
+
+	.	reduce by rule 37
+
+
+state 178:
+
+	BodyContent2 : BodyElement BodyContent1 .  (reduce by rule 36)
+
+
+
+	.	reduce by rule 36
+
+
+state 179:
+
+	BodyContent0 : Paragraph END_P BodyContent1 .  (reduce by rule 27)
+
+
+
+	.	reduce by rule 27
+
+
+state 180:
+
+	TextList' : Text TextList' .  (reduce by rule 107)
+
+
+
+	.	reduce by rule 107
+
+
+state 181:
+
+	Phrase : START_VAR TextList END_VAR .  (reduce by rule 130)
+
+
+
+	.	reduce by rule 130
+
+
+state 182:
+
+	ListItemList : ListItem ListItemList .  (reduce by rule 71)
+
+
+
+	.	reduce by rule 71
+
+
+state 183:
+
+	List : START_UL ListItemList END_UL .  (reduce by rule 65)
+
+
+
+	.	reduce by rule 65
+
+
+state 184:
+
+	Flow1 : Text . Flow1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 244
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 185:
+
+	ListItem : START_LI Flow1 . EndLI 
+
+	END_LI	shift 246
+
+	EndLI	goto 245
+
+	.	reduce by rule 86
+
+
+state 186:
+
+	Flow1 : Paragraph . END_P Flow1 
+	Flow1 : Paragraph . Flow2 
+
+	START_BLOCKQUOTE	shift 74
+	START_CENTER	shift 71
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	TAG_ISINDEX	shift 96
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	END_P	shift 250
+	START_PRE	shift 44
+	START_TABLE	shift 36
+	START_UL	shift 32
+
+	BlockWOIndex	goto 92
+	Block	goto 249
+	Paragraph	goto 248
+	List	goto 22
+	Flow2	goto 247
+	Preformatted	goto 21
+
+	.	reduce by rule 82
+
+
+state 187:
+
+	Flow1 : Block . Flow1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 251
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 188:
+
+	Font : START_U TextList END_U .  (reduce by rule 118)
+
+
+
+	.	reduce by rule 118
+
+
+state 189:
+
+	Font : START_TT TextList END_TT .  (reduce by rule 115)
+
+
+
+	.	reduce by rule 115
+
+
+state 190:
+
+	Form : START_TEXTAREA PCData END_TEXTAREA .  (reduce by rule 144)
+
+
+
+	.	reduce by rule 144
+
+
+state 191:
+
+	TableRowList : TableRow .  (reduce by rule 95)
+	TableRowList : TableRow . TableRowList 
+
+	START_TR	shift 193
+
+	TableRowList	goto 252
+	TableRow	goto 191
+
+	.	reduce by rule 95
+
+
+state 192:
+
+	BlockWOIndex : START_TABLE optCaption TableRowList . END_TABLE 
+
+	END_TABLE	shift 253
+
+
+	.	error
+
+
+state 193:
+
+	TableRow : START_TR . TableCellList 
+	TableRow : START_TR . TableCellList END_TR 
+
+	START_TD	shift 257
+	START_TH	shift 256
+
+	TableCellList	goto 255
+	TableCell	goto 254
+
+	.	error
+
+
+state 194:
+
+	optCaption : START_CAPTION TextList . END_CAPTION 
+
+	END_CAPTION	shift 258
+
+
+	.	error
+
+
+state 195:
+
+	Font : START_SUP TextList END_SUP .  (reduce by rule 123)
+
+
+
+	.	reduce by rule 123
+
+
+state 196:
+
+	Font : START_SUB TextList END_SUB .  (reduce by rule 122)
+
+
+
+	.	reduce by rule 122
+
+
+state 197:
+
+	Phrase : START_STRONG TextList END_STRONG .  (reduce by rule 125)
+
+
+
+	.	reduce by rule 125
+
+
+state 198:
+
+	Font : START_STRIKE TextList END_STRIKE .  (reduce by rule 119)
+
+
+
+	.	reduce by rule 119
+
+
+state 199:
+
+	Font : START_SMALL TextList END_SMALL .  (reduce by rule 121)
+
+
+
+	.	reduce by rule 121
+
+
+state 200:
+
+	Form : START_SELECT OptionList END_SELECT .  (reduce by rule 143)
+
+
+
+	.	reduce by rule 143
+
+
+state 201:
+
+	OptionList : START_OPTION PCData . EndOPTION OptionList 
+
+	END_OPTION	shift 260
+
+	EndOPTION	goto 259
+
+	.	reduce by rule 147
+
+
+state 202:
+
+	Phrase : START_SAMP TextList END_SAMP .  (reduce by rule 128)
+
+
+
+	.	reduce by rule 128
+
+
+state 203:
+
+	Preformatted : START_PRE TextList END_PRE .  (reduce by rule 92)
+
+
+
+	.	reduce by rule 92
+
+
+state 204:
+
+	List : START_OL ListItemList END_OL .  (reduce by rule 66)
+
+
+
+	.	reduce by rule 66
+
+
+state 205:
+
+	List : START_MENU ListItemList END_MENU .  (reduce by rule 68)
+
+
+
+	.	reduce by rule 68
+
+
+state 206:
+
+	Special : START_MAP AreaList END_MAP .  (reduce by rule 138)
+
+
+
+	.	reduce by rule 138
+
+
+state 207:
+
+	AreaList : TAG_AREA AreaList .  (reduce by rule 141)
+
+
+
+	.	reduce by rule 141
+
+
+state 208:
+
+	Phrase : START_KBD TextList END_KBD .  (reduce by rule 129)
+
+
+
+	.	reduce by rule 129
+
+
+state 209:
+
+	Font : START_I TextList END_I .  (reduce by rule 116)
+
+
+
+	.	reduce by rule 116
+
+
+state 210:
+
+	BodyElement : START_H6 TextList END_H6 .  (reduce by rule 45)
+
+
+
+	.	reduce by rule 45
+
+
+state 211:
+
+	BodyElement : START_H5 TextList END_H5 .  (reduce by rule 44)
+
+
+
+	.	reduce by rule 44
+
+
+state 212:
+
+	BodyElement : START_H4 TextList END_H4 .  (reduce by rule 43)
+
+
+
+	.	reduce by rule 43
+
+
+state 213:
+
+	BodyElement : START_H3 TextList END_H3 .  (reduce by rule 42)
+
+
+
+	.	reduce by rule 42
+
+
+state 214:
+
+	BodyElement : START_H2 TextList END_H2 .  (reduce by rule 41)
+
+
+
+	.	reduce by rule 41
+
+
+state 215:
+
+	BodyElement : START_H1 TextList END_H1 .  (reduce by rule 40)
+
+
+
+	.	reduce by rule 40
+
+
+state 216:
+
+	BlockWOIndex : START_FORM BodyContent END_FORM .  (reduce by rule 59)
+
+
+
+	.	reduce by rule 59
+
+
+state 217:
+
+	Special : START_BASEFONT TextList END_BASEFONT .  (reduce by rule 136)
+
+
+
+	.	reduce by rule 136
+
+
+state 218:
+
+	Special : START_FONT TextList END_FONT .  (reduce by rule 135)
+
+
+
+	.	reduce by rule 135
+
+
+state 219:
+
+	Phrase : START_EM TextList END_EM .  (reduce by rule 124)
+
+
+
+	.	reduce by rule 124
+
+
+state 220:
+
+	DLItemList : DLItem DLItemList .  (reduce by rule 74)
+
+
+
+	.	reduce by rule 74
+
+
+state 221:
+
+	List : START_DL DLItemList END_DL .  (reduce by rule 69)
+
+
+
+	.	reduce by rule 69
+
+
+state 222:
+
+	DLItem : START_DT TextList . EndDT 
+
+	END_DT	shift 262
+
+	EndDT	goto 261
+
+	.	reduce by rule 88
+
+
+state 223:
+
+	DLItem : START_DD Flow1 . EndDD 
+
+	END_DD	shift 264
+
+	EndDD	goto 263
+
+	.	reduce by rule 90
+
+
+state 224:
+
+	BlockWOIndex : START_DIV BodyContent END_DIV .  (reduce by rule 56)
+
+
+
+	.	reduce by rule 56
+
+
+state 225:
+
+	List : START_DIR ListItemList END_DIR .  (reduce by rule 67)
+
+
+
+	.	reduce by rule 67
+
+
+state 226:
+
+	Phrase : START_DFN TextList END_DFN .  (reduce by rule 127)
+
+
+
+	.	reduce by rule 127
+
+
+state 227:
+
+	Phrase : START_CODE TextList END_CODE .  (reduce by rule 126)
+
+
+
+	.	reduce by rule 126
+
+
+state 228:
+
+	Phrase : START_CITE TextList END_CITE .  (reduce by rule 131)
+
+
+
+	.	reduce by rule 131
+
+
+state 229:
+
+	BlockWOIndex : START_CENTER BodyContent END_CENTER .  (reduce by rule 57)
+
+
+
+	.	reduce by rule 57
+
+
+state 230:
+
+	BlockWOIndex : START_BLOCKQUOTE BodyContent END_BLOCKQUOTE .  (reduce by rule 58)
+
+
+
+	.	reduce by rule 58
+
+
+state 231:
+
+	Font : START_BIG TextList END_BIG .  (reduce by rule 120)
+
+
+
+	.	reduce by rule 120
+
+
+state 232:
+
+	Font : START_B TextList END_B .  (reduce by rule 117)
+
+
+
+	.	reduce by rule 117
+
+
+state 233:
+
+	Special : START_APPLET TextList END_APPLET .  (reduce by rule 134)
+
+
+
+	.	reduce by rule 134
+
+
+state 234:
+
+	AddressContent1 : Text AddressContent1 .  (reduce by rule 48)
+
+
+
+	.	reduce by rule 48
+
+
+state 235:
+
+	AddressContent2 : Paragraph . END_P AddressContent1 
+	AddressContent2 : Paragraph . AddressContent2 
+
+	START_P	shift 46
+	END_P	shift 266
+
+	AddressContent2	goto 265
+	Paragraph	goto 235
+
+	.	reduce by rule 51
+
+
+state 236:
+
+	AddressContent1 : Paragraph AddressContent2 .  (reduce by rule 50)
+
+
+
+	.	reduce by rule 50
+
+
+state 237:
+
+	AddressContent1 : Paragraph END_P . AddressContent1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	AddressContent1	goto 267
+	Paragraph	goto 162
+	TextWOScript	goto 89
+	Text	goto 161
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 47
+
+
+state 238:
+
+	BodyElement : START_ADDRESS AddressContent1 END_ADDRESS .  (reduce by rule 46)
+
+
+
+	.	reduce by rule 46
+
+
+state 239:
+
+	Special : START_A TextList END_A .  (reduce by rule 132)
+
+
+
+	.	reduce by rule 132
+
+
+state 240:
+
+	HeadContents : HeadElements START_TITLE PCData END_TITLE . HeadElements 
+
+	TAG_BASE	shift 14
+	TAG_ISINDEX	shift 13
+	TAG_LINK	shift 12
+	TAG_META	shift 11
+	START_SCRIPT	shift 10
+	START_STYLE	shift 9
+
+	HeadElements	goto 268
+	HeadElement	goto 6
+
+	.	reduce by rule 11
+
+
+state 241:
+
+	BodyContent1 : Paragraph END_P BodyContent1 .  (reduce by rule 33)
+
+
+
+	.	reduce by rule 33
+
+
+state 242:
+
+	Text : START_SCRIPT PCData END_SCRIPT .  (reduce by rule 114)
+
+
+
+	.	reduce by rule 114
+
+
+state 243:
+
+	BodyContent2 : Paragraph END_P BodyContent1 .  (reduce by rule 38)
+
+
+
+	.	reduce by rule 38
+
+
+state 244:
+
+	Flow1 : Text Flow1 .  (reduce by rule 78)
+
+
+
+	.	reduce by rule 78
+
+
+state 245:
+
+	ListItem : START_LI Flow1 EndLI .  (reduce by rule 72)
+
+
+
+	.	reduce by rule 72
+
+
+state 246:
+
+	EndLI : END_LI .  (reduce by rule 87)
+
+
+
+	.	reduce by rule 87
+
+
+state 247:
+
+	Flow1 : Paragraph Flow2 .  (reduce by rule 81)
+
+
+
+	.	reduce by rule 81
+
+
+state 248:
+
+	Flow2 : Paragraph . END_P Flow1 
+	Flow2 : Paragraph . Flow2 
+
+	START_BLOCKQUOTE	shift 74
+	START_CENTER	shift 71
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	TAG_ISINDEX	shift 96
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	END_P	shift 270
+	START_PRE	shift 44
+	START_TABLE	shift 36
+	START_UL	shift 32
+
+	BlockWOIndex	goto 92
+	Block	goto 249
+	Paragraph	goto 248
+	List	goto 22
+	Flow2	goto 269
+	Preformatted	goto 21
+
+	.	reduce by rule 82
+
+
+state 249:
+
+	Flow2 : Block . Flow1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 271
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 250:
+
+	Flow1 : Paragraph END_P . Flow1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 272
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 251:
+
+	Flow1 : Block Flow1 .  (reduce by rule 79)
+
+
+
+	.	reduce by rule 79
+
+
+state 252:
+
+	TableRowList : TableRow TableRowList .  (reduce by rule 96)
+
+
+
+	.	reduce by rule 96
+
+
+state 253:
+
+	BlockWOIndex : START_TABLE optCaption TableRowList END_TABLE .  (reduce by rule 61)
+
+
+
+	.	reduce by rule 61
+
+
+state 254:
+
+	TableCellList : TableCell .  (reduce by rule 99)
+	TableCellList : TableCell . TableCellList 
+
+	START_TD	shift 257
+	START_TH	shift 256
+
+	TableCellList	goto 273
+	TableCell	goto 254
+
+	.	reduce by rule 99
+
+
+state 255:
+
+	TableRow : START_TR TableCellList .  (reduce by rule 97)
+	TableRow : START_TR TableCellList . END_TR 
+
+	END_TR	shift 274
+
+
+	.	reduce by rule 97
+
+
+state 256:
+
+	TableCell : START_TH . BodyContent END_TH 
+	TableCell : START_TH . BodyContent 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 275
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 257:
+
+	TableCell : START_TD . BodyContent END_TD 
+	TableCell : START_TD . BodyContent 
+
+	START_A	shift 79
+	START_ADDRESS	shift 78
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	START_H1	shift 60
+	START_H2	shift 59
+	START_H3	shift 58
+	START_H4	shift 57
+	START_H5	shift 56
+	START_H6	shift 55
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BodyContent	goto 276
+	BodyContent1	goto 141
+	BodyElement	goto 93
+	BlockWOIndex	goto 92
+	Block	goto 91
+	Paragraph	goto 90
+	List	goto 22
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 88
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 29
+
+
+state 258:
+
+	optCaption : START_CAPTION TextList END_CAPTION .  (reduce by rule 94)
+
+
+
+	.	reduce by rule 94
+
+
+state 259:
+
+	OptionList : START_OPTION PCData EndOPTION . OptionList 
+
+	START_OPTION	shift 125
+
+	OptionList	goto 277
+
+	.	reduce by rule 145
+
+
+state 260:
+
+	EndOPTION : END_OPTION .  (reduce by rule 148)
+
+
+
+	.	reduce by rule 148
+
+
+state 261:
+
+	DLItem : START_DT TextList EndDT .  (reduce by rule 75)
+
+
+
+	.	reduce by rule 75
+
+
+state 262:
+
+	EndDT : END_DT .  (reduce by rule 89)
+
+
+
+	.	reduce by rule 89
+
+
+state 263:
+
+	DLItem : START_DD Flow1 EndDD .  (reduce by rule 76)
+
+
+
+	.	reduce by rule 76
+
+
+state 264:
+
+	EndDD : END_DD .  (reduce by rule 91)
+
+
+
+	.	reduce by rule 91
+
+
+state 265:
+
+	AddressContent2 : Paragraph AddressContent2 .  (reduce by rule 53)
+
+
+
+	.	reduce by rule 53
+
+
+state 266:
+
+	AddressContent2 : Paragraph END_P . AddressContent1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	TAG_BR	shift 72
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	AddressContent1	goto 278
+	Paragraph	goto 162
+	TextWOScript	goto 89
+	Text	goto 161
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 47
+
+
+state 267:
+
+	AddressContent1 : Paragraph END_P AddressContent1 .  (reduce by rule 49)
+
+
+
+	.	reduce by rule 49
+
+
+state 268:
+
+	HeadContents : HeadElements START_TITLE PCData END_TITLE HeadElements .  (reduce by rule 10)
+
+
+
+	.	reduce by rule 10
+
+
+state 269:
+
+	Flow2 : Paragraph Flow2 .  (reduce by rule 85)
+
+
+
+	.	reduce by rule 85
+
+
+state 270:
+
+	Flow2 : Paragraph END_P . Flow1 
+
+	START_A	shift 79
+	START_APPLET	shift 77
+	START_B	shift 76
+	START_BIG	shift 75
+	START_BLOCKQUOTE	shift 74
+	TAG_BR	shift 72
+	START_CENTER	shift 71
+	START_CITE	shift 70
+	START_CODE	shift 69
+	START_DFN	shift 68
+	START_DIR	shift 67
+	START_DIV	shift 66
+	START_DL	shift 65
+	START_EM	shift 64
+	START_FONT	shift 63
+	START_BASEFONT	shift 62
+	START_FORM	shift 61
+	TAG_HR	shift 54
+	START_I	shift 53
+	TAG_IMG	shift 52
+	TAG_INPUT	shift 51
+	TAG_ISINDEX	shift 96
+	START_KBD	shift 50
+	START_MAP	shift 49
+	START_MENU	shift 48
+	START_OL	shift 47
+	START_P	shift 46
+	TAG_PARAM	shift 45
+	START_PRE	shift 44
+	START_SAMP	shift 43
+	START_SCRIPT	shift 95
+	START_SELECT	shift 42
+	START_SMALL	shift 41
+	START_STRIKE	shift 40
+	START_STRONG	shift 39
+	START_SUB	shift 38
+	START_SUP	shift 37
+	START_TABLE	shift 36
+	START_TEXTAREA	shift 35
+	START_TT	shift 34
+	START_U	shift 33
+	START_UL	shift 32
+	START_VAR	shift 31
+	PCDATA	shift 30
+	CHAR_REF	shift 29
+	ENTITY_REF	shift 28
+
+	BlockWOIndex	goto 92
+	Block	goto 187
+	Paragraph	goto 186
+	List	goto 22
+	Flow1	goto 279
+	Preformatted	goto 21
+	TextWOScript	goto 89
+	Text	goto 184
+	Font	goto 19
+	Phrase	goto 18
+	Special	goto 17
+	Form	goto 16
+	PCDataElem	goto 15
+
+	.	reduce by rule 77
+
+
+state 271:
+
+	Flow2 : Block Flow1 .  (reduce by rule 83)
+
+
+
+	.	reduce by rule 83
+
+
+state 272:
+
+	Flow1 : Paragraph END_P Flow1 .  (reduce by rule 80)
+
+
+
+	.	reduce by rule 80
+
+
+state 273:
+
+	TableCellList : TableCell TableCellList .  (reduce by rule 100)
+
+
+
+	.	reduce by rule 100
+
+
+state 274:
+
+	TableRow : START_TR TableCellList END_TR .  (reduce by rule 98)
+
+
+
+	.	reduce by rule 98
+
+
+state 275:
+
+	TableCell : START_TH BodyContent . END_TH 
+	TableCell : START_TH BodyContent .  (reduce by rule 102)
+
+	END_TH	shift 280
+
+
+	.	reduce by rule 102
+
+
+state 276:
+
+	TableCell : START_TD BodyContent . END_TD 
+	TableCell : START_TD BodyContent .  (reduce by rule 104)
+
+	END_TD	shift 281
+
+
+	.	reduce by rule 104
+
+
+state 277:
+
+	OptionList : START_OPTION PCData EndOPTION OptionList .  (reduce by rule 146)
+
+
+
+	.	reduce by rule 146
+
+
+state 278:
+
+	AddressContent2 : Paragraph END_P AddressContent1 .  (reduce by rule 52)
+
+
+
+	.	reduce by rule 52
+
+
+state 279:
+
+	Flow2 : Paragraph END_P Flow1 .  (reduce by rule 84)
+
+
+
+	.	reduce by rule 84
+
+
+state 280:
+
+	TableCell : START_TH BodyContent END_TH .  (reduce by rule 101)
+
+
+
+	.	reduce by rule 101
+
+
+state 281:
+
+	TableCell : START_TD BodyContent END_TD .  (reduce by rule 103)
+
+
+
+	.	reduce by rule 103
+
+
+state 282:
+
+
+	EOF	accept
+
+
+	.	error
+
+398 of 2987 action table entries left after compaction
+788 goto table entries
diff --git a/HTML/html-gram.sig b/HTML/html-gram.sig
new file mode 100644
index 0000000..c61b473
--- /dev/null
+++ b/HTML/html-gram.sig
@@ -0,0 +1,140 @@
+signature HTML_TOKENS =
+sig
+type ('a,'b) token
+type svalue
+val ENTITY_REF: (string) *  'a * 'a -> (svalue,'a) token
+val CHAR_REF: (string) *  'a * 'a -> (svalue,'a) token
+val PCDATA: (string) *  'a * 'a -> (svalue,'a) token
+val END_VAR:  'a * 'a -> (svalue,'a) token
+val START_VAR:  'a * 'a -> (svalue,'a) token
+val END_UL:  'a * 'a -> (svalue,'a) token
+val START_UL: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_U:  'a * 'a -> (svalue,'a) token
+val START_U:  'a * 'a -> (svalue,'a) token
+val END_TT:  'a * 'a -> (svalue,'a) token
+val START_TT:  'a * 'a -> (svalue,'a) token
+val END_TR:  'a * 'a -> (svalue,'a) token
+val START_TR: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_TITLE:  'a * 'a -> (svalue,'a) token
+val START_TITLE:  'a * 'a -> (svalue,'a) token
+val END_TH:  'a * 'a -> (svalue,'a) token
+val START_TH: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_TEXTAREA:  'a * 'a -> (svalue,'a) token
+val START_TEXTAREA: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_TD:  'a * 'a -> (svalue,'a) token
+val START_TD: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_TABLE:  'a * 'a -> (svalue,'a) token
+val START_TABLE: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_SUP:  'a * 'a -> (svalue,'a) token
+val START_SUP:  'a * 'a -> (svalue,'a) token
+val END_SUB:  'a * 'a -> (svalue,'a) token
+val START_SUB:  'a * 'a -> (svalue,'a) token
+val END_STYLE:  'a * 'a -> (svalue,'a) token
+val START_STYLE:  'a * 'a -> (svalue,'a) token
+val END_STRONG:  'a * 'a -> (svalue,'a) token
+val START_STRONG:  'a * 'a -> (svalue,'a) token
+val END_STRIKE:  'a * 'a -> (svalue,'a) token
+val START_STRIKE:  'a * 'a -> (svalue,'a) token
+val END_SMALL:  'a * 'a -> (svalue,'a) token
+val START_SMALL:  'a * 'a -> (svalue,'a) token
+val END_SELECT:  'a * 'a -> (svalue,'a) token
+val START_SELECT: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_SCRIPT:  'a * 'a -> (svalue,'a) token
+val START_SCRIPT:  'a * 'a -> (svalue,'a) token
+val END_SAMP:  'a * 'a -> (svalue,'a) token
+val START_SAMP:  'a * 'a -> (svalue,'a) token
+val END_PRE:  'a * 'a -> (svalue,'a) token
+val START_PRE: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_PARAM: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_P:  'a * 'a -> (svalue,'a) token
+val START_P: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_OPTION:  'a * 'a -> (svalue,'a) token
+val START_OPTION: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_OL:  'a * 'a -> (svalue,'a) token
+val START_OL: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_META: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_MENU:  'a * 'a -> (svalue,'a) token
+val START_MENU: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_MAP:  'a * 'a -> (svalue,'a) token
+val START_MAP: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_LINK: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_LI:  'a * 'a -> (svalue,'a) token
+val START_LI: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_KBD:  'a * 'a -> (svalue,'a) token
+val START_KBD:  'a * 'a -> (svalue,'a) token
+val TAG_ISINDEX: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_INPUT: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_IMG: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_I:  'a * 'a -> (svalue,'a) token
+val START_I:  'a * 'a -> (svalue,'a) token
+val END_HTML:  'a * 'a -> (svalue,'a) token
+val START_HTML:  'a * 'a -> (svalue,'a) token
+val TAG_HR: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_HEAD:  'a * 'a -> (svalue,'a) token
+val START_HEAD:  'a * 'a -> (svalue,'a) token
+val END_H6:  'a * 'a -> (svalue,'a) token
+val START_H6: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_H5:  'a * 'a -> (svalue,'a) token
+val START_H5: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_H4:  'a * 'a -> (svalue,'a) token
+val START_H4: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_H3:  'a * 'a -> (svalue,'a) token
+val START_H3: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_H2:  'a * 'a -> (svalue,'a) token
+val START_H2: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_H1:  'a * 'a -> (svalue,'a) token
+val START_H1: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_FORM:  'a * 'a -> (svalue,'a) token
+val START_FORM: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_BASEFONT:  'a * 'a -> (svalue,'a) token
+val START_BASEFONT: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_FONT:  'a * 'a -> (svalue,'a) token
+val START_FONT: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_EM:  'a * 'a -> (svalue,'a) token
+val START_EM:  'a * 'a -> (svalue,'a) token
+val END_DT:  'a * 'a -> (svalue,'a) token
+val START_DT:  'a * 'a -> (svalue,'a) token
+val END_DL:  'a * 'a -> (svalue,'a) token
+val START_DL: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_DIV:  'a * 'a -> (svalue,'a) token
+val START_DIV: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_DIR:  'a * 'a -> (svalue,'a) token
+val START_DIR: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_DFN:  'a * 'a -> (svalue,'a) token
+val START_DFN:  'a * 'a -> (svalue,'a) token
+val END_DD:  'a * 'a -> (svalue,'a) token
+val START_DD:  'a * 'a -> (svalue,'a) token
+val END_CODE:  'a * 'a -> (svalue,'a) token
+val START_CODE:  'a * 'a -> (svalue,'a) token
+val END_CITE:  'a * 'a -> (svalue,'a) token
+val START_CITE:  'a * 'a -> (svalue,'a) token
+val END_CENTER:  'a * 'a -> (svalue,'a) token
+val START_CENTER:  'a * 'a -> (svalue,'a) token
+val END_CAPTION:  'a * 'a -> (svalue,'a) token
+val START_CAPTION: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val TAG_BR: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_BODY:  'a * 'a -> (svalue,'a) token
+val START_BODY: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_BLOCKQUOTE:  'a * 'a -> (svalue,'a) token
+val START_BLOCKQUOTE:  'a * 'a -> (svalue,'a) token
+val END_BIG:  'a * 'a -> (svalue,'a) token
+val START_BIG:  'a * 'a -> (svalue,'a) token
+val TAG_BASE: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_B:  'a * 'a -> (svalue,'a) token
+val START_B:  'a * 'a -> (svalue,'a) token
+val TAG_AREA: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_APPLET:  'a * 'a -> (svalue,'a) token
+val START_APPLET: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val END_ADDRESS:  'a * 'a -> (svalue,'a) token
+val START_ADDRESS:  'a * 'a -> (svalue,'a) token
+val END_A:  'a * 'a -> (svalue,'a) token
+val START_A: (HTMLAttrVals.attrs) *  'a * 'a -> (svalue,'a) token
+val EOF:  'a * 'a -> (svalue,'a) token
+end
+signature HTML_LRVALS=
+sig
+structure Tokens : HTML_TOKENS
+structure ParserData:PARSER_DATA
+sharing type ParserData.Token.token = Tokens.token
+sharing type ParserData.svalue = Tokens.svalue
+end
diff --git a/HTML/html-gram.sml b/HTML/html-gram.sml
new file mode 100644
index 0000000..5d220fb
--- /dev/null
+++ b/HTML/html-gram.sml
@@ -0,0 +1,2477 @@
+
+
+  functor HTMLLrValsFn (
+    structure Token : TOKEN
+    structure HTMLAttrs : HTML_ATTRS) = 
+struct
+structure ParserData=
+struct
+structure Header = 
+struct
+(* html-gram
+ *
+ * COPYRIGHT (c) 1996 AT&T Research.
+ *
+ * This grammar parses HTML 3.2.  Note that it does not enforce exclusions
+ * (for the content of FORM, PRE, etc).  Exclusions should be enforced as
+ * a second pass over the parse tree.
+ *)
+
+fun textList [text] = text
+  | textList l = HTML.TextList l
+
+fun blockList [blk] = blk
+  | blockList l = HTML.BlockList l
+
+fun textBlock l = HTML.TextBlock(textList l)
+    
+(* The elements of a definition list (<DL>) are tags (<DT>) and items (<DD>).
+ * To avoid shift/reduce problems, we parse them and then group them.
+ *)
+datatype deflist_item
+  = DL_tag of HTML.text
+  | DL_item of HTML.block
+
+fun groupDefListContents [] = []
+  | groupDefListContents (h :: t) = let
+      fun gdlc (DL_tag tag, []) = ({dt=[tag], dd=HTML.BlockList[]}, [])
+	| gdlc (DL_tag tag, h :: t) = let
+	    val ({dt, dd}, r) = gdlc (h, t)
+	    in
+	      ({dt = tag :: dt, dd = dd}, r)
+	    end
+	| gdlc (DL_item blk, r) = ({dt=[],dd=blk}, groupDefListContents r)
+      in
+	op :: (gdlc (h, t))
+      end
+
+(* A list of Text, paragraphs and blocks requires grouping the Text items and
+ * making an implicit paragraph.  We cannot directly use TextList because of
+ * conflicts.
+ *)
+datatype blklist_item
+  = BL_text of HTML.text list
+  | BL_block of HTML.block list
+
+fun consText (txt, BL_text tl :: r) = BL_text(txt::tl) :: r
+  | consText (txt, l) = BL_text[txt] :: l
+
+fun consBlock (blk, BL_block bl :: r) = BL_block(blk::bl) :: r
+  | consBlock (blk, l) = BL_block[blk] :: l
+
+fun mkBlock blks = let
+      fun f (BL_text tl) = textBlock tl
+	| f (BL_block bl) = blockList bl
+      in
+	blockList(List.map f blks)
+      end
+
+fun mkBody blks = HTML.BODY{
+	background = NONE,
+	bgcolor = NONE,
+	text = NONE,
+	link = NONE,
+	vlink = NONE,
+	alink = NONE,
+	content = mkBlock blks
+      }
+
+
+end
+structure LrTable = Token.LrTable
+structure Token = Token
+local open LrTable in 
+val table=let val actionRows =
+"\
+\\001\000\001\000\000\000\000\000\
+\\001\000\002\000\081\000\004\000\080\000\006\000\079\000\009\000\078\000\
+\\012\000\077\000\014\000\076\000\016\000\075\000\018\000\074\000\
+\\021\000\073\000\023\000\072\000\025\000\071\000\029\000\070\000\
+\\031\000\069\000\033\000\068\000\035\000\067\000\039\000\066\000\
+\\041\000\065\000\043\000\064\000\045\000\063\000\047\000\062\000\
+\\049\000\061\000\051\000\060\000\053\000\059\000\055\000\058\000\
+\\057\000\057\000\061\000\056\000\064\000\055\000\066\000\054\000\
+\\067\000\053\000\069\000\052\000\074\000\051\000\076\000\050\000\
+\\079\000\049\000\083\000\048\000\085\000\047\000\086\000\046\000\
+\\088\000\045\000\092\000\044\000\094\000\043\000\096\000\042\000\
+\\098\000\041\000\102\000\040\000\104\000\039\000\106\000\038\000\
+\\110\000\037\000\118\000\036\000\120\000\035\000\122\000\034\000\
+\\124\000\033\000\126\000\032\000\127\000\031\000\128\000\030\000\000\000\
+\\001\000\003\000\241\000\000\000\
+\\001\000\005\000\240\000\000\000\
+\\001\000\007\000\235\000\000\000\
+\\001\000\010\000\234\000\000\000\
+\\001\000\013\000\233\000\000\000\
+\\001\000\015\000\232\000\000\000\
+\\001\000\020\000\004\001\000\000\
+\\001\000\022\000\231\000\000\000\
+\\001\000\024\000\230\000\000\000\
+\\001\000\026\000\229\000\000\000\
+\\001\000\030\000\228\000\000\000\
+\\001\000\032\000\227\000\000\000\
+\\001\000\034\000\226\000\000\000\
+\\001\000\036\000\223\000\000\000\
+\\001\000\040\000\221\000\000\000\
+\\001\000\042\000\220\000\000\000\
+\\001\000\044\000\219\000\000\000\
+\\001\000\046\000\218\000\000\000\
+\\001\000\048\000\217\000\000\000\
+\\001\000\050\000\216\000\000\000\
+\\001\000\052\000\215\000\000\000\
+\\001\000\054\000\214\000\000\000\
+\\001\000\056\000\213\000\000\000\
+\\001\000\058\000\212\000\000\000\
+\\001\000\065\000\211\000\000\000\
+\\001\000\070\000\210\000\000\000\
+\\001\000\075\000\208\000\000\000\
+\\001\000\077\000\207\000\000\000\
+\\001\000\080\000\206\000\000\000\
+\\001\000\087\000\205\000\000\000\
+\\001\000\089\000\204\000\000\000\
+\\001\000\091\000\170\000\000\000\
+\\001\000\091\000\244\000\000\000\
+\\001\000\093\000\202\000\000\000\
+\\001\000\095\000\201\000\000\000\
+\\001\000\097\000\200\000\000\000\
+\\001\000\099\000\199\000\000\000\
+\\001\000\101\000\169\000\000\000\
+\\001\000\103\000\198\000\000\000\
+\\001\000\105\000\197\000\000\000\
+\\001\000\107\000\255\000\000\000\
+\\001\000\108\000\003\001\112\000\002\001\000\000\
+\\001\000\111\000\192\000\000\000\
+\\001\000\114\000\083\000\000\000\
+\\001\000\115\000\242\000\000\000\
+\\001\000\116\000\195\000\000\000\
+\\001\000\119\000\191\000\000\000\
+\\001\000\121\000\190\000\000\000\
+\\001\000\123\000\185\000\000\000\
+\\001\000\125\000\183\000\000\000\
+\\029\001\000\000\
+\\030\001\062\000\004\000\000\000\
+\\031\001\000\000\
+\\032\001\063\000\109\000\000\000\
+\\033\001\000\000\
+\\034\001\000\000\
+\\035\001\059\000\007\000\000\000\
+\\036\001\000\000\
+\\037\001\060\000\085\000\000\000\
+\\038\001\000\000\
+\\039\001\000\000\
+\\040\001\011\000\016\000\068\000\015\000\073\000\014\000\078\000\013\000\
+\\090\000\012\000\100\000\011\000\000\000\
+\\041\001\000\000\
+\\042\001\000\000\
+\\043\001\000\000\
+\\044\001\000\000\
+\\045\001\000\000\
+\\046\001\000\000\
+\\047\001\000\000\
+\\048\001\000\000\
+\\049\001\017\000\107\000\000\000\
+\\050\001\000\000\
+\\051\001\000\000\
+\\052\001\000\000\
+\\053\001\000\000\
+\\054\001\000\000\
+\\055\001\000\000\
+\\056\001\000\000\
+\\057\001\000\000\
+\\058\001\002\000\081\000\004\000\080\000\006\000\079\000\009\000\078\000\
+\\012\000\077\000\014\000\076\000\018\000\074\000\021\000\073\000\
+\\023\000\072\000\025\000\071\000\029\000\070\000\031\000\069\000\
+\\033\000\068\000\035\000\067\000\039\000\066\000\041\000\065\000\
+\\043\000\064\000\045\000\063\000\047\000\062\000\049\000\061\000\
+\\051\000\060\000\053\000\059\000\055\000\058\000\057\000\057\000\
+\\061\000\056\000\064\000\055\000\066\000\054\000\067\000\053\000\
+\\068\000\098\000\069\000\052\000\074\000\051\000\076\000\050\000\
+\\079\000\049\000\083\000\048\000\085\000\047\000\086\000\046\000\
+\\088\000\045\000\090\000\097\000\092\000\044\000\094\000\043\000\
+\\096\000\042\000\098\000\041\000\102\000\040\000\104\000\039\000\
+\\106\000\038\000\110\000\037\000\118\000\036\000\120\000\035\000\
+\\122\000\034\000\124\000\033\000\126\000\032\000\127\000\031\000\
+\\128\000\030\000\000\000\
+\\059\001\000\000\
+\\060\001\000\000\
+\\061\001\000\000\
+\\062\001\000\000\
+\\063\001\000\000\
+\\064\001\004\000\080\000\014\000\076\000\021\000\073\000\031\000\069\000\
+\\033\000\068\000\035\000\067\000\045\000\063\000\047\000\062\000\
+\\049\000\061\000\051\000\060\000\053\000\059\000\055\000\058\000\
+\\057\000\057\000\061\000\056\000\068\000\098\000\076\000\050\000\
+\\079\000\049\000\083\000\048\000\084\000\103\000\086\000\046\000\
+\\106\000\038\000\122\000\034\000\000\000\
+\\064\001\004\000\080\000\014\000\076\000\021\000\073\000\031\000\069\000\
+\\033\000\068\000\035\000\067\000\045\000\063\000\047\000\062\000\
+\\049\000\061\000\051\000\060\000\053\000\059\000\055\000\058\000\
+\\057\000\057\000\061\000\056\000\068\000\098\000\076\000\050\000\
+\\079\000\049\000\083\000\048\000\084\000\173\000\086\000\046\000\
+\\106\000\038\000\122\000\034\000\000\000\
+\\064\001\004\000\080\000\014\000\076\000\021\000\073\000\031\000\069\000\
+\\033\000\068\000\035\000\067\000\045\000\063\000\047\000\062\000\
+\\049\000\061\000\051\000\060\000\053\000\059\000\055\000\058\000\
+\\057\000\057\000\061\000\056\000\068\000\098\000\076\000\050\000\
+\\079\000\049\000\083\000\048\000\084\000\178\000\086\000\046\000\
+\\106\000\038\000\122\000\034\000\000\000\
+\\065\001\000\000\
+\\066\001\000\000\
+\\067\001\000\000\
+\\068\001\000\000\
+\\069\001\000\000\
+\\070\001\000\000\
+\\071\001\000\000\
+\\072\001\000\000\
+\\073\001\000\000\
+\\074\001\000\000\
+\\075\001\000\000\
+\\076\001\002\000\081\000\006\000\079\000\009\000\078\000\012\000\077\000\
+\\018\000\074\000\023\000\072\000\025\000\071\000\029\000\070\000\
+\\039\000\066\000\041\000\065\000\043\000\064\000\064\000\055\000\
+\\066\000\054\000\067\000\053\000\069\000\052\000\074\000\051\000\
+\\083\000\048\000\085\000\047\000\088\000\045\000\090\000\097\000\
+\\092\000\044\000\094\000\043\000\096\000\042\000\098\000\041\000\
+\\102\000\040\000\104\000\039\000\110\000\037\000\118\000\036\000\
+\\120\000\035\000\124\000\033\000\126\000\032\000\127\000\031\000\
+\\128\000\030\000\000\000\
+\\077\001\000\000\
+\\078\001\000\000\
+\\079\001\000\000\
+\\080\001\083\000\048\000\084\000\239\000\000\000\
+\\080\001\083\000\048\000\084\000\012\001\000\000\
+\\081\001\000\000\
+\\082\001\000\000\
+\\083\001\000\000\
+\\084\001\000\000\
+\\085\001\000\000\
+\\086\001\000\000\
+\\087\001\000\000\
+\\088\001\000\000\
+\\089\001\000\000\
+\\090\001\000\000\
+\\091\001\000\000\
+\\092\001\000\000\
+\\093\001\000\000\
+\\094\001\000\000\
+\\095\001\000\000\
+\\096\001\000\000\
+\\097\001\000\000\
+\\098\001\000\000\
+\\099\001\071\000\115\000\000\000\
+\\100\001\000\000\
+\\101\001\000\000\
+\\102\001\027\000\151\000\037\000\150\000\000\000\
+\\103\001\000\000\
+\\104\001\000\000\
+\\105\001\000\000\
+\\106\001\002\000\081\000\006\000\079\000\009\000\078\000\012\000\077\000\
+\\014\000\076\000\018\000\074\000\021\000\073\000\023\000\072\000\
+\\025\000\071\000\029\000\070\000\031\000\069\000\033\000\068\000\
+\\035\000\067\000\039\000\066\000\041\000\065\000\043\000\064\000\
+\\045\000\063\000\061\000\056\000\064\000\055\000\066\000\054\000\
+\\067\000\053\000\068\000\098\000\069\000\052\000\074\000\051\000\
+\\076\000\050\000\079\000\049\000\083\000\048\000\085\000\047\000\
+\\086\000\046\000\088\000\045\000\090\000\097\000\092\000\044\000\
+\\094\000\043\000\096\000\042\000\098\000\041\000\102\000\040\000\
+\\104\000\039\000\106\000\038\000\110\000\037\000\118\000\036\000\
+\\120\000\035\000\122\000\034\000\124\000\033\000\126\000\032\000\
+\\127\000\031\000\128\000\030\000\000\000\
+\\107\001\000\000\
+\\108\001\000\000\
+\\109\001\000\000\
+\\110\001\000\000\
+\\111\001\014\000\076\000\021\000\073\000\031\000\069\000\033\000\068\000\
+\\035\000\067\000\045\000\063\000\061\000\056\000\068\000\098\000\
+\\076\000\050\000\079\000\049\000\083\000\048\000\084\000\252\000\
+\\086\000\046\000\106\000\038\000\122\000\034\000\000\000\
+\\111\001\014\000\076\000\021\000\073\000\031\000\069\000\033\000\068\000\
+\\035\000\067\000\045\000\063\000\061\000\056\000\068\000\098\000\
+\\076\000\050\000\079\000\049\000\083\000\048\000\084\000\016\001\
+\\086\000\046\000\106\000\038\000\122\000\034\000\000\000\
+\\112\001\000\000\
+\\113\001\000\000\
+\\114\001\000\000\
+\\115\001\072\000\248\000\000\000\
+\\116\001\000\000\
+\\117\001\038\000\008\001\000\000\
+\\118\001\000\000\
+\\119\001\028\000\010\001\000\000\
+\\120\001\000\000\
+\\121\001\000\000\
+\\122\001\019\000\120\000\000\000\
+\\123\001\000\000\
+\\124\001\116\000\195\000\000\000\
+\\125\001\000\000\
+\\126\001\117\000\020\001\000\000\
+\\127\001\000\000\
+\\128\001\108\000\003\001\112\000\002\001\000\000\
+\\129\001\000\000\
+\\130\001\000\000\
+\\131\001\113\000\026\001\000\000\
+\\132\001\000\000\
+\\133\001\109\000\027\001\000\000\
+\\134\001\000\000\
+\\135\001\002\000\081\000\006\000\079\000\009\000\078\000\012\000\077\000\
+\\018\000\074\000\023\000\072\000\025\000\071\000\029\000\070\000\
+\\039\000\066\000\041\000\065\000\043\000\064\000\064\000\055\000\
+\\066\000\054\000\067\000\053\000\069\000\052\000\074\000\051\000\
+\\085\000\047\000\088\000\045\000\090\000\097\000\092\000\044\000\
+\\094\000\043\000\096\000\042\000\098\000\041\000\102\000\040\000\
+\\104\000\039\000\110\000\037\000\118\000\036\000\120\000\035\000\
+\\124\000\033\000\126\000\032\000\127\000\031\000\128\000\030\000\000\000\
+\\136\001\000\000\
+\\137\001\000\000\
+\\138\001\000\000\
+\\139\001\000\000\
+\\140\001\000\000\
+\\141\001\000\000\
+\\142\001\000\000\
+\\143\001\000\000\
+\\144\001\000\000\
+\\145\001\000\000\
+\\146\001\000\000\
+\\147\001\000\000\
+\\148\001\000\000\
+\\149\001\000\000\
+\\150\001\000\000\
+\\151\001\000\000\
+\\152\001\000\000\
+\\153\001\000\000\
+\\154\001\000\000\
+\\155\001\000\000\
+\\156\001\000\000\
+\\157\001\000\000\
+\\158\001\000\000\
+\\159\001\000\000\
+\\160\001\000\000\
+\\161\001\000\000\
+\\162\001\000\000\
+\\163\001\000\000\
+\\164\001\000\000\
+\\165\001\000\000\
+\\166\001\000\000\
+\\167\001\000\000\
+\\168\001\000\000\
+\\169\001\008\000\134\000\000\000\
+\\170\001\000\000\
+\\171\001\000\000\
+\\172\001\000\000\
+\\173\001\000\000\
+\\174\001\081\000\127\000\000\000\
+\\175\001\000\000\
+\\176\001\082\000\006\001\000\000\
+\\177\001\000\000\
+\\178\001\000\000\
+\\179\001\126\000\032\000\127\000\031\000\128\000\030\000\000\000\
+\\180\001\000\000\
+\\181\001\000\000\
+\\182\001\000\000\
+\\183\001\000\000\
+\"
+val actionRowNumbers =
+"\053\000\058\000\054\000\063\000\
+\\001\000\059\000\063\000\045\000\
+\\060\000\206\000\206\000\065\000\
+\\066\000\067\000\068\000\164\000\
+\\168\000\167\000\166\000\165\000\
+\\081\000\110\000\109\000\087\000\
+\\081\000\081\000\072\000\055\000\
+\\210\000\209\000\208\000\162\000\
+\\125\000\162\000\162\000\206\000\
+\\149\000\162\000\162\000\162\000\
+\\162\000\162\000\201\000\162\000\
+\\162\000\195\000\162\000\125\000\
+\\125\000\196\000\162\000\198\000\
+\\189\000\162\000\115\000\162\000\
+\\162\000\162\000\162\000\162\000\
+\\162\000\081\000\162\000\162\000\
+\\162\000\128\000\081\000\125\000\
+\\162\000\162\000\162\000\081\000\
+\\193\000\081\000\081\000\162\000\
+\\162\000\162\000\101\000\162\000\
+\\064\000\206\000\057\000\061\000\
+\\206\000\205\000\039\000\033\000\
+\\081\000\169\000\088\000\081\000\
+\\117\000\081\000\076\000\206\000\
+\\118\000\089\000\081\000\081\000\
+\\080\000\081\000\078\000\077\000\
+\\071\000\073\000\052\000\056\000\
+\\162\000\161\000\051\000\125\000\
+\\050\000\132\000\049\000\048\000\
+\\044\000\047\000\162\000\041\000\
+\\040\000\038\000\037\000\036\000\
+\\035\000\206\000\032\000\031\000\
+\\119\000\030\000\029\000\028\000\
+\\196\000\027\000\026\000\025\000\
+\\024\000\023\000\022\000\021\000\
+\\020\000\074\000\019\000\018\000\
+\\017\000\016\000\128\000\015\000\
+\\162\000\132\000\014\000\013\000\
+\\012\000\011\000\010\000\009\000\
+\\075\000\007\000\006\000\005\000\
+\\004\000\101\000\105\000\003\000\
+\\002\000\046\000\207\000\069\000\
+\\070\000\082\000\086\000\081\000\
+\\084\000\083\000\034\000\093\000\
+\\081\000\091\000\090\000\079\000\
+\\163\000\186\000\126\000\120\000\
+\\132\000\142\000\137\000\132\000\
+\\174\000\171\000\200\000\151\000\
+\\042\000\043\000\008\000\179\000\
+\\178\000\181\000\175\000\177\000\
+\\199\000\203\000\184\000\148\000\
+\\121\000\123\000\194\000\197\000\
+\\185\000\172\000\099\000\098\000\
+\\097\000\096\000\095\000\094\000\
+\\114\000\192\000\191\000\180\000\
+\\129\000\124\000\144\000\146\000\
+\\111\000\122\000\183\000\182\000\
+\\187\000\112\000\113\000\176\000\
+\\173\000\190\000\102\000\106\000\
+\\104\000\101\000\100\000\188\000\
+\\063\000\085\000\170\000\092\000\
+\\133\000\127\000\143\000\136\000\
+\\138\000\132\000\132\000\134\000\
+\\152\000\116\000\155\000\153\000\
+\\081\000\081\000\150\000\201\000\
+\\204\000\130\000\145\000\131\000\
+\\147\000\108\000\101\000\103\000\
+\\062\000\141\000\132\000\139\000\
+\\135\000\156\000\154\000\158\000\
+\\160\000\202\000\107\000\140\000\
+\\157\000\159\000\000\000"
+val gotoT =
+"\
+\\001\000\026\001\002\000\001\000\000\000\
+\\004\000\004\000\005\000\003\000\000\000\
+\\000\000\
+\\007\000\008\000\008\000\007\000\009\000\006\000\000\000\
+\\010\000\027\000\014\000\026\000\017\000\025\000\020\000\024\000\
+\\022\000\023\000\023\000\022\000\033\000\021\000\041\000\020\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\008\000\080\000\009\000\006\000\000\000\
+\\000\000\
+\\006\000\082\000\000\000\
+\\050\000\086\000\051\000\085\000\052\000\084\000\000\000\
+\\050\000\087\000\051\000\085\000\052\000\084\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\015\000\094\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\016\000\100\000\017\000\099\000\020\000\092\000\021\000\098\000\
+\\022\000\097\000\023\000\022\000\033\000\021\000\000\000\
+\\015\000\102\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\015\000\103\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\012\000\104\000\000\000\
+\\003\000\106\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\039\000\110\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\024\000\112\000\025\000\111\000\000\000\
+\\039\000\114\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\115\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\050\000\116\000\051\000\085\000\052\000\084\000\000\000\
+\\034\000\117\000\000\000\
+\\039\000\119\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\120\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\121\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\122\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\123\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\048\000\124\000\000\000\
+\\039\000\126\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\127\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\039\000\128\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\024\000\129\000\025\000\111\000\000\000\
+\\024\000\130\000\025\000\111\000\000\000\
+\\046\000\131\000\000\000\
+\\039\000\133\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\039\000\134\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\039\000\135\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\136\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\137\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\138\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\139\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\140\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\013\000\142\000\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\039\000\143\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\144\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\145\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\026\000\147\000\027\000\146\000\000\000\
+\\013\000\150\000\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\024\000\151\000\025\000\111\000\000\000\
+\\039\000\152\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\153\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\154\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\013\000\155\000\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\013\000\156\000\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\013\000\157\000\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\039\000\158\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\159\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\160\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\018\000\163\000\022\000\162\000\041\000\089\000\042\000\161\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\039\000\164\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\050\000\165\000\051\000\085\000\052\000\084\000\000\000\
+\\000\000\
+\\000\000\
+\\051\000\166\000\052\000\084\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\015\000\169\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\016\000\170\000\017\000\099\000\020\000\092\000\021\000\098\000\
+\\022\000\097\000\023\000\022\000\033\000\021\000\000\000\
+\\015\000\172\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\015\000\173\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\050\000\174\000\051\000\085\000\052\000\084\000\000\000\
+\\000\000\
+\\016\000\175\000\017\000\099\000\020\000\092\000\021\000\098\000\
+\\022\000\097\000\023\000\022\000\033\000\021\000\000\000\
+\\015\000\177\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\015\000\178\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\015\000\179\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\040\000\180\000\041\000\089\000\042\000\108\000\043\000\019\000\
+\\044\000\018\000\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\024\000\182\000\025\000\111\000\000\000\
+\\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\185\000\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\035\000\192\000\036\000\191\000\000\000\
+\\039\000\194\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\050\000\201\000\051\000\085\000\052\000\084\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\046\000\207\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\026\000\220\000\027\000\146\000\000\000\
+\\000\000\
+\\039\000\222\000\040\000\109\000\041\000\089\000\042\000\108\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\223\000\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\018\000\234\000\022\000\162\000\041\000\089\000\042\000\161\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\019\000\236\000\022\000\235\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\015\000\241\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\015\000\243\000\017\000\093\000\020\000\092\000\021\000\091\000\
+\\022\000\090\000\023\000\022\000\033\000\021\000\041\000\089\000\
+\\042\000\088\000\043\000\019\000\044\000\018\000\045\000\017\000\
+\\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\244\000\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\030\000\245\000\000\000\
+\\020\000\092\000\021\000\249\000\022\000\248\000\023\000\022\000\
+\\029\000\247\000\033\000\021\000\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\251\000\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\035\000\252\000\036\000\191\000\000\000\
+\\000\000\
+\\037\000\255\000\038\000\254\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\049\000\003\001\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\031\000\005\001\000\000\
+\\032\000\007\001\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\019\000\009\001\022\000\235\000\000\000\
+\\000\000\
+\\018\000\011\001\022\000\162\000\041\000\089\000\042\000\161\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\008\000\012\001\009\000\006\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\020\000\092\000\021\000\249\000\022\000\248\000\023\000\022\000\
+\\029\000\013\001\033\000\021\000\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\015\001\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\016\001\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\037\000\017\001\038\000\254\000\000\000\
+\\000\000\
+\\013\000\019\001\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\013\000\020\001\015\000\141\000\017\000\093\000\020\000\092\000\
+\\021\000\091\000\022\000\090\000\023\000\022\000\033\000\021\000\
+\\041\000\089\000\042\000\088\000\043\000\019\000\044\000\018\000\
+\\045\000\017\000\047\000\016\000\052\000\015\000\000\000\
+\\000\000\
+\\048\000\021\001\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\018\000\022\001\022\000\162\000\041\000\089\000\042\000\161\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\020\000\092\000\021\000\187\000\022\000\186\000\023\000\022\000\
+\\028\000\023\001\033\000\021\000\041\000\089\000\042\000\184\000\
+\\043\000\019\000\044\000\018\000\045\000\017\000\047\000\016\000\
+\\052\000\015\000\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\\000\000\
+\"
+val numstates = 283
+val numrules = 155
+val s = ref "" and index = ref 0
+val string_to_int = fn () => 
+let val i = !index
+in index := i+2; Char.ord(String.sub(!s,i)) + Char.ord(String.sub(!s,i+1)) * 256
+end
+val string_to_list = fn s' =>
+    let val len = String.size s'
+        fun f () =
+           if !index < len then string_to_int() :: f()
+           else nil
+   in index := 0; s := s'; f ()
+   end
+val string_to_pairlist = fn (conv_key,conv_entry) =>
+     let fun f () =
+         case string_to_int()
+         of 0 => EMPTY
+          | n => PAIR(conv_key (n-1),conv_entry (string_to_int()),f())
+     in f
+     end
+val string_to_pairlist_default = fn (conv_key,conv_entry) =>
+    let val conv_row = string_to_pairlist(conv_key,conv_entry)
+    in fn () =>
+       let val default = conv_entry(string_to_int())
+           val row = conv_row()
+       in (row,default)
+       end
+   end
+val string_to_table = fn (convert_row,s') =>
+    let val len = String.size s'
+        fun f ()=
+           if !index < len then convert_row() :: f()
+           else nil
+     in (s := s'; index := 0; f ())
+     end
+local
+  val memo = Array.array(numstates+numrules,ERROR)
+  val _ =let fun g i=(Array.update(memo,i,REDUCE(i-numstates)); g(i+1))
+       fun f i =
+            if i=numstates then g i
+            else (Array.update(memo,i,SHIFT (STATE i)); f (i+1))
+          in f 0 handle General.Subscript => ()
+          end
+in
+val entry_to_action = fn 0 => ACCEPT | 1 => ERROR | j => Array.sub(memo,(j-2))
+end
+val gotoT=Array.fromList(string_to_table(string_to_pairlist(NT,STATE),gotoT))
+val actionRows=string_to_table(string_to_pairlist_default(T,entry_to_action),actionRows)
+val actionRowNumbers = string_to_list actionRowNumbers
+val actionT = let val actionRowLookUp=
+let val a=Array.fromList(actionRows) in fn i=>Array.sub(a,i) end
+in Array.fromList(List.map actionRowLookUp actionRowNumbers)
+end
+in LrTable.mkLrTable {actions=actionT,gotos=gotoT,numRules=numrules,
+numStates=numstates,initialState=STATE 0}
+end
+end
+local open Header in
+type pos = int
+type arg = int -> HTMLAttrs.context
+structure MlyValue = 
+struct
+datatype svalue = VOID | ntVOID of unit | ENTITY_REF of  (string)
+ | CHAR_REF of  (string) | PCDATA of  (string)
+ | START_UL of  (HTMLAttrVals.attrs)
+ | START_TR of  (HTMLAttrVals.attrs)
+ | START_TH of  (HTMLAttrVals.attrs)
+ | START_TEXTAREA of  (HTMLAttrVals.attrs)
+ | START_TD of  (HTMLAttrVals.attrs)
+ | START_TABLE of  (HTMLAttrVals.attrs)
+ | START_SELECT of  (HTMLAttrVals.attrs)
+ | START_PRE of  (HTMLAttrVals.attrs)
+ | TAG_PARAM of  (HTMLAttrVals.attrs)
+ | START_P of  (HTMLAttrVals.attrs)
+ | START_OPTION of  (HTMLAttrVals.attrs)
+ | START_OL of  (HTMLAttrVals.attrs)
+ | TAG_META of  (HTMLAttrVals.attrs)
+ | START_MENU of  (HTMLAttrVals.attrs)
+ | START_MAP of  (HTMLAttrVals.attrs)
+ | TAG_LINK of  (HTMLAttrVals.attrs)
+ | START_LI of  (HTMLAttrVals.attrs)
+ | TAG_ISINDEX of  (HTMLAttrVals.attrs)
+ | TAG_INPUT of  (HTMLAttrVals.attrs)
+ | TAG_IMG of  (HTMLAttrVals.attrs) | TAG_HR of  (HTMLAttrVals.attrs)
+ | START_H6 of  (HTMLAttrVals.attrs)
+ | START_H5 of  (HTMLAttrVals.attrs)
+ | START_H4 of  (HTMLAttrVals.attrs)
+ | START_H3 of  (HTMLAttrVals.attrs)
+ | START_H2 of  (HTMLAttrVals.attrs)
+ | START_H1 of  (HTMLAttrVals.attrs)
+ | START_FORM of  (HTMLAttrVals.attrs)
+ | START_BASEFONT of  (HTMLAttrVals.attrs)
+ | START_FONT of  (HTMLAttrVals.attrs)
+ | START_DL of  (HTMLAttrVals.attrs)
+ | START_DIV of  (HTMLAttrVals.attrs)
+ | START_DIR of  (HTMLAttrVals.attrs)
+ | START_CAPTION of  (HTMLAttrVals.attrs)
+ | TAG_BR of  (HTMLAttrVals.attrs)
+ | START_BODY of  (HTMLAttrVals.attrs)
+ | TAG_BASE of  (HTMLAttrVals.attrs)
+ | TAG_AREA of  (HTMLAttrVals.attrs)
+ | START_APPLET of  (HTMLAttrVals.attrs)
+ | START_A of  (HTMLAttrVals.attrs) | PCDataElem of  (HTML.pcdata)
+ | PCDataList of  (HTML.pcdata list) | PCData of  (HTML.pcdata)
+ | OptionList of  (HTML.select_option list) | Form of  (HTML.text)
+ | AreaList of  (HTML.area list) | Special of  (HTML.text)
+ | Phrase of  (HTML.text) | Font of  (HTML.text)
+ | Text of  (HTML.text) | TextWOScript of  (HTML.text)
+ | TextList' of  (HTML.text list) | TextList of  (HTML.text)
+ | TableCell of  (HTML.table_cell)
+ | TableCellList of  (HTML.table_cell list) | TableRow of  (HTML.tr)
+ | TableRowList of  (HTML.tr list)
+ | optCaption of  (HTML.caption option)
+ | Preformatted of  (HTML.block) | Flow2 of  (blklist_item list)
+ | Flow1 of  (blklist_item list) | DLItem of  (deflist_item)
+ | DLItemList of  (deflist_item list) | ListItem of  (HTML.list_item)
+ | ListItemList of  (HTML.list_item list) | List of  (HTML.block)
+ | Paragraph of  (HTML.block) | Block of  (HTML.block)
+ | BlockWOIndex of  (HTML.block)
+ | AddressContent2 of  (blklist_item list)
+ | AddressContent1 of  (blklist_item list)
+ | BodyElement of  (HTML.block) | BodyContent2 of  (blklist_item list)
+ | BodyContent1 of  (blklist_item list) | BodyContent0 of  (HTML.body)
+ | BodyContent of  (HTML.block) | Body of  (HTML.body)
+ | HeadElement of  (HTML.head_content)
+ | HeadElements of  (HTML.head_content list)
+ | HeadContents of  (HTML.head_content list)
+ | Head of  (HTML.head_content list)
+ | StartHTML of  (HTML.cdata option) | Document of  (HTML.html)
+end
+type svalue = MlyValue.svalue
+type result = HTML.html
+end
+structure EC=
+struct
+open LrTable
+infix 5 $$
+fun x $$ y = y::x
+val is_keyword =
+fn _ => false
+val preferred_change : (term list * term list) list = 
+nil
+val noShift = 
+fn (T 0) => true | _ => false
+val showTerminal =
+fn (T 0) => "EOF"
+  | (T 1) => "START_A"
+  | (T 2) => "END_A"
+  | (T 3) => "START_ADDRESS"
+  | (T 4) => "END_ADDRESS"
+  | (T 5) => "START_APPLET"
+  | (T 6) => "END_APPLET"
+  | (T 7) => "TAG_AREA"
+  | (T 8) => "START_B"
+  | (T 9) => "END_B"
+  | (T 10) => "TAG_BASE"
+  | (T 11) => "START_BIG"
+  | (T 12) => "END_BIG"
+  | (T 13) => "START_BLOCKQUOTE"
+  | (T 14) => "END_BLOCKQUOTE"
+  | (T 15) => "START_BODY"
+  | (T 16) => "END_BODY"
+  | (T 17) => "TAG_BR"
+  | (T 18) => "START_CAPTION"
+  | (T 19) => "END_CAPTION"
+  | (T 20) => "START_CENTER"
+  | (T 21) => "END_CENTER"
+  | (T 22) => "START_CITE"
+  | (T 23) => "END_CITE"
+  | (T 24) => "START_CODE"
+  | (T 25) => "END_CODE"
+  | (T 26) => "START_DD"
+  | (T 27) => "END_DD"
+  | (T 28) => "START_DFN"
+  | (T 29) => "END_DFN"
+  | (T 30) => "START_DIR"
+  | (T 31) => "END_DIR"
+  | (T 32) => "START_DIV"
+  | (T 33) => "END_DIV"
+  | (T 34) => "START_DL"
+  | (T 35) => "END_DL"
+  | (T 36) => "START_DT"
+  | (T 37) => "END_DT"
+  | (T 38) => "START_EM"
+  | (T 39) => "END_EM"
+  | (T 40) => "START_FONT"
+  | (T 41) => "END_FONT"
+  | (T 42) => "START_BASEFONT"
+  | (T 43) => "END_BASEFONT"
+  | (T 44) => "START_FORM"
+  | (T 45) => "END_FORM"
+  | (T 46) => "START_H1"
+  | (T 47) => "END_H1"
+  | (T 48) => "START_H2"
+  | (T 49) => "END_H2"
+  | (T 50) => "START_H3"
+  | (T 51) => "END_H3"
+  | (T 52) => "START_H4"
+  | (T 53) => "END_H4"
+  | (T 54) => "START_H5"
+  | (T 55) => "END_H5"
+  | (T 56) => "START_H6"
+  | (T 57) => "END_H6"
+  | (T 58) => "START_HEAD"
+  | (T 59) => "END_HEAD"
+  | (T 60) => "TAG_HR"
+  | (T 61) => "START_HTML"
+  | (T 62) => "END_HTML"
+  | (T 63) => "START_I"
+  | (T 64) => "END_I"
+  | (T 65) => "TAG_IMG"
+  | (T 66) => "TAG_INPUT"
+  | (T 67) => "TAG_ISINDEX"
+  | (T 68) => "START_KBD"
+  | (T 69) => "END_KBD"
+  | (T 70) => "START_LI"
+  | (T 71) => "END_LI"
+  | (T 72) => "TAG_LINK"
+  | (T 73) => "START_MAP"
+  | (T 74) => "END_MAP"
+  | (T 75) => "START_MENU"
+  | (T 76) => "END_MENU"
+  | (T 77) => "TAG_META"
+  | (T 78) => "START_OL"
+  | (T 79) => "END_OL"
+  | (T 80) => "START_OPTION"
+  | (T 81) => "END_OPTION"
+  | (T 82) => "START_P"
+  | (T 83) => "END_P"
+  | (T 84) => "TAG_PARAM"
+  | (T 85) => "START_PRE"
+  | (T 86) => "END_PRE"
+  | (T 87) => "START_SAMP"
+  | (T 88) => "END_SAMP"
+  | (T 89) => "START_SCRIPT"
+  | (T 90) => "END_SCRIPT"
+  | (T 91) => "START_SELECT"
+  | (T 92) => "END_SELECT"
+  | (T 93) => "START_SMALL"
+  | (T 94) => "END_SMALL"
+  | (T 95) => "START_STRIKE"
+  | (T 96) => "END_STRIKE"
+  | (T 97) => "START_STRONG"
+  | (T 98) => "END_STRONG"
+  | (T 99) => "START_STYLE"
+  | (T 100) => "END_STYLE"
+  | (T 101) => "START_SUB"
+  | (T 102) => "END_SUB"
+  | (T 103) => "START_SUP"
+  | (T 104) => "END_SUP"
+  | (T 105) => "START_TABLE"
+  | (T 106) => "END_TABLE"
+  | (T 107) => "START_TD"
+  | (T 108) => "END_TD"
+  | (T 109) => "START_TEXTAREA"
+  | (T 110) => "END_TEXTAREA"
+  | (T 111) => "START_TH"
+  | (T 112) => "END_TH"
+  | (T 113) => "START_TITLE"
+  | (T 114) => "END_TITLE"
+  | (T 115) => "START_TR"
+  | (T 116) => "END_TR"
+  | (T 117) => "START_TT"
+  | (T 118) => "END_TT"
+  | (T 119) => "START_U"
+  | (T 120) => "END_U"
+  | (T 121) => "START_UL"
+  | (T 122) => "END_UL"
+  | (T 123) => "START_VAR"
+  | (T 124) => "END_VAR"
+  | (T 125) => "PCDATA"
+  | (T 126) => "CHAR_REF"
+  | (T 127) => "ENTITY_REF"
+  | _ => "bogus-term"
+local open Header in
+val errtermvalue=
+fn (T 1) => MlyValue.START_A(([])) | 
+(T 5) => MlyValue.START_APPLET((
+[
+    ("CODE", HTMLAttrs.NAME ""),
+    ("WIDTH", HTMLAttrs.NAME ""),
+    ("HEIGHT", HTMLAttrs.NAME "")
+  ]
+)) | 
+(T 7) => MlyValue.TAG_AREA(([("ALT", HTMLAttrs.NAME "")])) | 
+(T 10) => MlyValue.TAG_BASE(([("URL", HTMLAttrs.NAME "")])) | 
+(T 15) => MlyValue.START_BODY(([])) | 
+(T 17) => MlyValue.TAG_BR(([])) | 
+(T 18) => MlyValue.START_CAPTION(([])) | 
+(T 30) => MlyValue.START_DIR(([])) | 
+(T 32) => MlyValue.START_DIV(([])) | 
+(T 34) => MlyValue.START_DL(([])) | 
+(T 40) => MlyValue.START_FONT(([])) | 
+(T 42) => MlyValue.START_BASEFONT(([])) | 
+(T 44) => MlyValue.START_FORM(([])) | 
+(T 46) => MlyValue.START_H1(([])) | 
+(T 48) => MlyValue.START_H2(([])) | 
+(T 50) => MlyValue.START_H3(([])) | 
+(T 52) => MlyValue.START_H4(([])) | 
+(T 54) => MlyValue.START_H5(([])) | 
+(T 56) => MlyValue.START_H6(([])) | 
+(T 60) => MlyValue.TAG_HR(([])) | 
+(T 65) => MlyValue.TAG_IMG(([("SRC", HTMLAttrs.NAME "")])) | 
+(T 66) => MlyValue.TAG_INPUT(([])) | 
+(T 67) => MlyValue.TAG_ISINDEX(([])) | 
+(T 72) => MlyValue.TAG_LINK(([])) | 
+(T 73) => MlyValue.START_MAP(([])) | 
+(T 75) => MlyValue.START_MENU(([])) | 
+(T 77) => MlyValue.TAG_META(([("CONTENT", HTMLAttrs.NAME "")])) | 
+(T 78) => MlyValue.START_OL(([])) | 
+(T 80) => MlyValue.START_OPTION(([])) | 
+(T 82) => MlyValue.START_P(([])) | 
+(T 84) => MlyValue.TAG_PARAM(([("NAME", HTMLAttrs.NAME "")])) | 
+(T 85) => MlyValue.START_PRE(([])) | 
+(T 91) => MlyValue.START_SELECT(([("NAME", HTMLAttrs.NAME "")])) | 
+(T 105) => MlyValue.START_TABLE(([])) | 
+(T 107) => MlyValue.START_TD(([])) | 
+(T 109) => MlyValue.START_TEXTAREA((
+[
+    ("NAME", HTMLAttrs.NAME ""),
+    ("ROWS", HTMLAttrs.NAME "0"),
+    ("COLS", HTMLAttrs.NAME "0")
+  ]
+)) | 
+(T 111) => MlyValue.START_TH(([])) | 
+(T 115) => MlyValue.START_TR(([])) | 
+(T 121) => MlyValue.START_UL(([])) | 
+_ => MlyValue.VOID
+end
+val terms : term list = nil
+ $$ (T 124) $$ (T 123) $$ (T 122) $$ (T 120) $$ (T 119) $$ (T 118) $$ 
+(T 117) $$ (T 116) $$ (T 114) $$ (T 113) $$ (T 112) $$ (T 110) $$ (T 
+108) $$ (T 106) $$ (T 104) $$ (T 103) $$ (T 102) $$ (T 101) $$ (T 100)
+ $$ (T 99) $$ (T 98) $$ (T 97) $$ (T 96) $$ (T 95) $$ (T 94) $$ (T 93)
+ $$ (T 92) $$ (T 90) $$ (T 89) $$ (T 88) $$ (T 87) $$ (T 86) $$ (T 83)
+ $$ (T 81) $$ (T 79) $$ (T 76) $$ (T 74) $$ (T 71) $$ (T 69) $$ (T 68)
+ $$ (T 64) $$ (T 63) $$ (T 62) $$ (T 61) $$ (T 59) $$ (T 58) $$ (T 57)
+ $$ (T 55) $$ (T 53) $$ (T 51) $$ (T 49) $$ (T 47) $$ (T 45) $$ (T 43)
+ $$ (T 41) $$ (T 39) $$ (T 38) $$ (T 37) $$ (T 36) $$ (T 35) $$ (T 33)
+ $$ (T 31) $$ (T 29) $$ (T 28) $$ (T 27) $$ (T 26) $$ (T 25) $$ (T 24)
+ $$ (T 23) $$ (T 22) $$ (T 21) $$ (T 20) $$ (T 19) $$ (T 16) $$ (T 14)
+ $$ (T 13) $$ (T 12) $$ (T 11) $$ (T 9) $$ (T 8) $$ (T 6) $$ (T 4) $$ 
+(T 3) $$ (T 2) $$ (T 0)end
+structure Actions =
+struct 
+exception mlyAction of int
+local open Header in
+val actions = 
+fn (i392,defaultPos,stack,
+    (ctx):arg) =>
+case (i392,stack)
+of  ( 0, ( ( _, ( _, _, EndHTML1right)) :: ( _, ( MlyValue.Body Body,
+ _, _)) :: ( _, ( MlyValue.Head Head, _, _)) :: ( _, ( 
+MlyValue.StartHTML StartHTML, StartHTML1left, _)) :: rest671)) => let
+ val  result = MlyValue.Document (
+HTML.HTML{version=StartHTML, head=Head, body=Body})
+ in ( LrTable.NT 0, ( result, StartHTML1left, EndHTML1right), rest671)
+
+end
+|  ( 1, ( rest671)) => let val  result = MlyValue.StartHTML (NONE)
+ in ( LrTable.NT 1, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 2, ( ( _, ( _, START_HTML1left, START_HTML1right)) :: rest671))
+ => let val  result = MlyValue.StartHTML (NONE)
+ in ( LrTable.NT 1, ( result, START_HTML1left, START_HTML1right), 
+rest671)
+end
+|  ( 3, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 2, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 4, ( ( _, ( _, END_HTML1left, END_HTML1right)) :: rest671)) =>
+ let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 2, ( result, END_HTML1left, END_HTML1right), rest671)
+
+end
+|  ( 5, ( ( _, ( _, _, EndHEAD1right)) :: ( _, ( MlyValue.HeadContents
+ HeadContents, _, _)) :: ( _, ( _, StartHEAD1left, _)) :: rest671)) =>
+ let val  result = MlyValue.Head (HeadContents)
+ in ( LrTable.NT 3, ( result, StartHEAD1left, EndHEAD1right), rest671)
+
+end
+|  ( 6, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 4, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 7, ( ( _, ( _, START_HEAD1left, START_HEAD1right)) :: rest671))
+ => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 4, ( result, START_HEAD1left, START_HEAD1right), 
+rest671)
+end
+|  ( 8, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 5, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 9, ( ( _, ( _, END_HEAD1left, END_HEAD1right)) :: rest671)) =>
+ let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 5, ( result, END_HEAD1left, END_HEAD1right), rest671)
+
+end
+|  ( 10, ( ( _, ( MlyValue.HeadElements HeadElements2, _, 
+HeadElements2right)) :: _ :: ( _, ( MlyValue.PCData PCData, _, _)) ::
+ _ :: ( _, ( MlyValue.HeadElements HeadElements1, HeadElements1left, _
+)) :: rest671)) => let val  result = MlyValue.HeadContents (
+HeadElements1 @ (HTML.Head_TITLE PCData :: HeadElements2))
+ in ( LrTable.NT 6, ( result, HeadElements1left, HeadElements2right), 
+rest671)
+end
+|  ( 11, ( rest671)) => let val  result = MlyValue.HeadElements ([])
+ in ( LrTable.NT 7, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 12, ( ( _, ( MlyValue.HeadElements HeadElements, _, 
+HeadElements1right)) :: ( _, ( MlyValue.HeadElement HeadElement, 
+HeadElement1left, _)) :: rest671)) => let val  result = 
+MlyValue.HeadElements (HeadElement :: HeadElements)
+ in ( LrTable.NT 7, ( result, HeadElement1left, HeadElements1right), 
+rest671)
+end
+|  ( 13, ( ( _, ( MlyValue.TAG_META TAG_META, (TAG_METAleft as 
+TAG_META1left), TAG_META1right)) :: rest671)) => let val  result = 
+MlyValue.HeadElement (HTMLAttrs.mkMETA(ctx TAG_METAleft, TAG_META))
+ in ( LrTable.NT 8, ( result, TAG_META1left, TAG_META1right), rest671)
+
+end
+|  ( 14, ( ( _, ( MlyValue.TAG_LINK TAG_LINK, (TAG_LINKleft as 
+TAG_LINK1left), TAG_LINK1right)) :: rest671)) => let val  result = 
+MlyValue.HeadElement (HTMLAttrs.mkLINK(ctx TAG_LINKleft, TAG_LINK))
+ in ( LrTable.NT 8, ( result, TAG_LINK1left, TAG_LINK1right), rest671)
+
+end
+|  ( 15, ( ( _, ( MlyValue.TAG_ISINDEX TAG_ISINDEX, (TAG_ISINDEXleft
+ as TAG_ISINDEX1left), TAG_ISINDEX1right)) :: rest671)) => let val  
+result = MlyValue.HeadElement (
+let val stuff =
+		    HTMLAttrs.mkISINDEX (ctx TAG_ISINDEXleft, TAG_ISINDEX)
+		  in HTML.Head_ISINDEX stuff end
+		
+)
+ in ( LrTable.NT 8, ( result, TAG_ISINDEX1left, TAG_ISINDEX1right), 
+rest671)
+end
+|  ( 16, ( ( _, ( MlyValue.TAG_BASE TAG_BASE, (TAG_BASEleft as 
+TAG_BASE1left), TAG_BASE1right)) :: rest671)) => let val  result = 
+MlyValue.HeadElement (HTMLAttrs.mkBASE(ctx TAG_BASEleft, TAG_BASE))
+ in ( LrTable.NT 8, ( result, TAG_BASE1left, TAG_BASE1right), rest671)
+
+end
+|  ( 17, ( ( _, ( _, _, END_STYLE1right)) :: ( _, ( MlyValue.PCData 
+PCData, _, _)) :: ( _, ( _, START_STYLE1left, _)) :: rest671)) => let
+ val  result = MlyValue.HeadElement (HTML.Head_STYLE(PCData))
+ in ( LrTable.NT 8, ( result, START_STYLE1left, END_STYLE1right), 
+rest671)
+end
+|  ( 18, ( ( _, ( _, _, END_SCRIPT1right)) :: ( _, ( MlyValue.PCData 
+PCData, _, _)) :: ( _, ( _, START_SCRIPT1left, _)) :: rest671)) => let
+ val  result = MlyValue.HeadElement (HTML.Head_SCRIPT(PCData))
+ in ( LrTable.NT 8, ( result, START_SCRIPT1left, END_SCRIPT1right), 
+rest671)
+end
+|  ( 19, ( ( _, ( _, _, EndBODY1right)) :: ( _, ( 
+MlyValue.BodyContent0 BodyContent0, BodyContent01left, _)) :: rest671)
+) => let val  result = MlyValue.Body (BodyContent0)
+ in ( LrTable.NT 9, ( result, BodyContent01left, EndBODY1right), 
+rest671)
+end
+|  ( 20, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 11, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 21, ( ( _, ( _, END_BODY1left, END_BODY1right)) :: rest671)) =>
+ let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 11, ( result, END_BODY1left, END_BODY1right), rest671
+)
+end
+|  ( 22, ( ( _, ( MlyValue.BodyContent1 BodyContent1, 
+BodyContent11left, BodyContent11right)) :: rest671)) => let val  
+result = MlyValue.BodyContent (mkBlock BodyContent1)
+ in ( LrTable.NT 12, ( result, BodyContent11left, BodyContent11right),
+ rest671)
+end
+|  ( 23, ( ( _, ( MlyValue.BodyContent BodyContent, _, 
+BodyContent1right)) :: ( _, ( MlyValue.START_BODY START_BODY, (
+START_BODYleft as START_BODY1left), _)) :: rest671)) => let val  
+result = MlyValue.BodyContent0 (
+HTMLAttrs.mkBODY(ctx START_BODYleft, START_BODY, BodyContent))
+ in ( LrTable.NT 13, ( result, START_BODY1left, BodyContent1right), 
+rest671)
+end
+|  ( 24, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.TextWOScript TextWOScript, 
+TextWOScript1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent0 (mkBody(consText(TextWOScript, BodyContent1)))
+ in ( LrTable.NT 13, ( result, TextWOScript1left, BodyContent11right),
+ rest671)
+end
+|  ( 25, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.BodyElement BodyElement, 
+BodyElement1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent0 (mkBody(consBlock(BodyElement, BodyContent1)))
+ in ( LrTable.NT 13, ( result, BodyElement1left, BodyContent11right), 
+rest671)
+end
+|  ( 26, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.BlockWOIndex BlockWOIndex, 
+BlockWOIndex1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent0 (mkBody(consBlock(BlockWOIndex, BodyContent1)))
+ in ( LrTable.NT 13, ( result, BlockWOIndex1left, BodyContent11right),
+ rest671)
+end
+|  ( 27, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: _ :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent0 (mkBody(consBlock(Paragraph, BodyContent1)))
+ in ( LrTable.NT 13, ( result, Paragraph1left, BodyContent11right), 
+rest671)
+end
+|  ( 28, ( ( _, ( MlyValue.BodyContent2 BodyContent2, _, 
+BodyContent21right)) :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent0 (mkBody(consBlock(Paragraph, BodyContent2)))
+ in ( LrTable.NT 13, ( result, Paragraph1left, BodyContent21right), 
+rest671)
+end
+|  ( 29, ( rest671)) => let val  result = MlyValue.BodyContent1 ([])
+ in ( LrTable.NT 14, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 30, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.Text Text, Text1left, _)) :: 
+rest671)) => let val  result = MlyValue.BodyContent1 (
+consText(Text, BodyContent1))
+ in ( LrTable.NT 14, ( result, Text1left, BodyContent11right), rest671
+)
+end
+|  ( 31, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.BodyElement BodyElement, 
+BodyElement1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent1 (consBlock(BodyElement, BodyContent1))
+ in ( LrTable.NT 14, ( result, BodyElement1left, BodyContent11right), 
+rest671)
+end
+|  ( 32, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.Block Block, Block1left, _))
+ :: rest671)) => let val  result = MlyValue.BodyContent1 (
+consBlock(Block, BodyContent1))
+ in ( LrTable.NT 14, ( result, Block1left, BodyContent11right), 
+rest671)
+end
+|  ( 33, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: _ :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent1 (consBlock(Paragraph, BodyContent1))
+ in ( LrTable.NT 14, ( result, Paragraph1left, BodyContent11right), 
+rest671)
+end
+|  ( 34, ( ( _, ( MlyValue.BodyContent2 BodyContent2, _, 
+BodyContent21right)) :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent1 (consBlock(Paragraph, BodyContent2))
+ in ( LrTable.NT 14, ( result, Paragraph1left, BodyContent21right), 
+rest671)
+end
+|  ( 35, ( rest671)) => let val  result = MlyValue.BodyContent2 ([])
+ in ( LrTable.NT 15, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 36, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.BodyElement BodyElement, 
+BodyElement1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent2 (consBlock(BodyElement, BodyContent1))
+ in ( LrTable.NT 15, ( result, BodyElement1left, BodyContent11right), 
+rest671)
+end
+|  ( 37, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: ( _, ( MlyValue.Block Block, Block1left, _))
+ :: rest671)) => let val  result = MlyValue.BodyContent2 (
+consBlock(Block, BodyContent1))
+ in ( LrTable.NT 15, ( result, Block1left, BodyContent11right), 
+rest671)
+end
+|  ( 38, ( ( _, ( MlyValue.BodyContent1 BodyContent1, _, 
+BodyContent11right)) :: _ :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent2 (consBlock(Paragraph, BodyContent1))
+ in ( LrTable.NT 15, ( result, Paragraph1left, BodyContent11right), 
+rest671)
+end
+|  ( 39, ( ( _, ( MlyValue.BodyContent2 BodyContent2, _, 
+BodyContent21right)) :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyContent2 (consBlock(Paragraph, BodyContent2))
+ in ( LrTable.NT 15, ( result, Paragraph1left, BodyContent21right), 
+rest671)
+end
+|  ( 40, ( ( _, ( _, _, END_H11right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H1 START_H1, (START_H1left
+ as START_H11left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(1, ctx START_H1left, START_H1, TextList))
+ in ( LrTable.NT 16, ( result, START_H11left, END_H11right), rest671)
+
+end
+|  ( 41, ( ( _, ( _, _, END_H21right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H2 START_H2, (START_H2left
+ as START_H21left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(2, ctx START_H2left, START_H2, TextList))
+ in ( LrTable.NT 16, ( result, START_H21left, END_H21right), rest671)
+
+end
+|  ( 42, ( ( _, ( _, _, END_H31right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H3 START_H3, (START_H3left
+ as START_H31left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(3, ctx START_H3left, START_H3, TextList))
+ in ( LrTable.NT 16, ( result, START_H31left, END_H31right), rest671)
+
+end
+|  ( 43, ( ( _, ( _, _, END_H41right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H4 START_H4, (START_H4left
+ as START_H41left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(4, ctx START_H4left, START_H4, TextList))
+ in ( LrTable.NT 16, ( result, START_H41left, END_H41right), rest671)
+
+end
+|  ( 44, ( ( _, ( _, _, END_H51right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H5 START_H5, (START_H5left
+ as START_H51left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(5, ctx START_H5left, START_H5, TextList))
+ in ( LrTable.NT 16, ( result, START_H51left, END_H51right), rest671)
+
+end
+|  ( 45, ( ( _, ( _, _, END_H61right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_H6 START_H6, (START_H6left
+ as START_H61left), _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (
+HTMLAttrs.mkHn(6, ctx START_H6left, START_H6, TextList))
+ in ( LrTable.NT 16, ( result, START_H61left, END_H61right), rest671)
+
+end
+|  ( 46, ( ( _, ( _, _, END_ADDRESS1right)) :: ( _, ( 
+MlyValue.AddressContent1 AddressContent1, _, _)) :: ( _, ( _, 
+START_ADDRESS1left, _)) :: rest671)) => let val  result = 
+MlyValue.BodyElement (HTML.ADDRESS(mkBlock AddressContent1))
+ in ( LrTable.NT 16, ( result, START_ADDRESS1left, END_ADDRESS1right),
+ rest671)
+end
+|  ( 47, ( rest671)) => let val  result = MlyValue.AddressContent1 ([]
+)
+ in ( LrTable.NT 17, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 48, ( ( _, ( MlyValue.AddressContent1 AddressContent1, _, 
+AddressContent11right)) :: ( _, ( MlyValue.Text Text, Text1left, _))
+ :: rest671)) => let val  result = MlyValue.AddressContent1 (
+consText(Text, AddressContent1))
+ in ( LrTable.NT 17, ( result, Text1left, AddressContent11right), 
+rest671)
+end
+|  ( 49, ( ( _, ( MlyValue.AddressContent1 AddressContent1, _, 
+AddressContent11right)) :: _ :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.AddressContent1 (consBlock(Paragraph, AddressContent1))
+ in ( LrTable.NT 17, ( result, Paragraph1left, AddressContent11right),
+ rest671)
+end
+|  ( 50, ( ( _, ( MlyValue.AddressContent2 AddressContent2, _, 
+AddressContent21right)) :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.AddressContent1 (consBlock(Paragraph, AddressContent2))
+ in ( LrTable.NT 17, ( result, Paragraph1left, AddressContent21right),
+ rest671)
+end
+|  ( 51, ( rest671)) => let val  result = MlyValue.AddressContent2 ([]
+)
+ in ( LrTable.NT 18, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 52, ( ( _, ( MlyValue.AddressContent1 AddressContent1, _, 
+AddressContent11right)) :: _ :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.AddressContent2 (consBlock(Paragraph, AddressContent1))
+ in ( LrTable.NT 18, ( result, Paragraph1left, AddressContent11right),
+ rest671)
+end
+|  ( 53, ( ( _, ( MlyValue.AddressContent2 AddressContent2, _, 
+AddressContent21right)) :: ( _, ( MlyValue.Paragraph Paragraph, 
+Paragraph1left, _)) :: rest671)) => let val  result = 
+MlyValue.AddressContent2 (consBlock(Paragraph, AddressContent2))
+ in ( LrTable.NT 18, ( result, Paragraph1left, AddressContent21right),
+ rest671)
+end
+|  ( 54, ( ( _, ( MlyValue.List List, List1left, List1right)) :: 
+rest671)) => let val  result = MlyValue.BlockWOIndex (List)
+ in ( LrTable.NT 19, ( result, List1left, List1right), rest671)
+end
+|  ( 55, ( ( _, ( MlyValue.Preformatted Preformatted, 
+Preformatted1left, Preformatted1right)) :: rest671)) => let val  
+result = MlyValue.BlockWOIndex (Preformatted)
+ in ( LrTable.NT 19, ( result, Preformatted1left, Preformatted1right),
+ rest671)
+end
+|  ( 56, ( ( _, ( _, _, END_DIV1right)) :: ( _, ( MlyValue.BodyContent
+ BodyContent, _, _)) :: ( _, ( MlyValue.START_DIV START_DIV, (
+START_DIVleft as START_DIV1left), _)) :: rest671)) => let val  result
+ = MlyValue.BlockWOIndex (
+HTMLAttrs.mkDIV(ctx START_DIVleft, START_DIV, BodyContent))
+ in ( LrTable.NT 19, ( result, START_DIV1left, END_DIV1right), rest671
+)
+end
+|  ( 57, ( ( _, ( _, _, END_CENTER1right)) :: ( _, ( 
+MlyValue.BodyContent BodyContent, _, _)) :: ( _, ( _, 
+START_CENTER1left, _)) :: rest671)) => let val  result = 
+MlyValue.BlockWOIndex (HTML.CENTER BodyContent)
+ in ( LrTable.NT 19, ( result, START_CENTER1left, END_CENTER1right), 
+rest671)
+end
+|  ( 58, ( ( _, ( _, _, END_BLOCKQUOTE1right)) :: ( _, ( 
+MlyValue.BodyContent BodyContent, _, _)) :: ( _, ( _, 
+START_BLOCKQUOTE1left, _)) :: rest671)) => let val  result = 
+MlyValue.BlockWOIndex (HTML.BLOCKQUOTE BodyContent)
+ in ( LrTable.NT 19, ( result, START_BLOCKQUOTE1left, 
+END_BLOCKQUOTE1right), rest671)
+end
+|  ( 59, ( ( _, ( _, _, END_FORM1right)) :: ( _, ( 
+MlyValue.BodyContent BodyContent, _, _)) :: ( _, ( MlyValue.START_FORM
+ START_FORM, (START_FORMleft as START_FORM1left), _)) :: rest671)) =>
+ let val  result = MlyValue.BlockWOIndex (
+HTMLAttrs.mkFORM(ctx START_FORMleft, START_FORM, BodyContent))
+ in ( LrTable.NT 19, ( result, START_FORM1left, END_FORM1right), 
+rest671)
+end
+|  ( 60, ( ( _, ( MlyValue.TAG_HR TAG_HR, (TAG_HRleft as TAG_HR1left),
+ TAG_HR1right)) :: rest671)) => let val  result = 
+MlyValue.BlockWOIndex (HTMLAttrs.mkHR(ctx TAG_HRleft, TAG_HR))
+ in ( LrTable.NT 19, ( result, TAG_HR1left, TAG_HR1right), rest671)
+
+end
+|  ( 61, ( ( _, ( _, _, END_TABLE1right)) :: ( _, ( 
+MlyValue.TableRowList TableRowList, _, _)) :: ( _, ( 
+MlyValue.optCaption optCaption, _, _)) :: ( _, ( MlyValue.START_TABLE 
+START_TABLE, (START_TABLEleft as START_TABLE1left), _)) :: rest671))
+ => let val  result = MlyValue.BlockWOIndex (
+HTMLAttrs.mkTABLE(
+		    ctx START_TABLEleft, START_TABLE,
+		    {caption = optCaption, body = TableRowList})
+		
+)
+ in ( LrTable.NT 19, ( result, START_TABLE1left, END_TABLE1right), 
+rest671)
+end
+|  ( 62, ( ( _, ( MlyValue.BlockWOIndex BlockWOIndex, 
+BlockWOIndex1left, BlockWOIndex1right)) :: rest671)) => let val  
+result = MlyValue.Block (BlockWOIndex)
+ in ( LrTable.NT 20, ( result, BlockWOIndex1left, BlockWOIndex1right),
+ rest671)
+end
+|  ( 63, ( ( _, ( MlyValue.TAG_ISINDEX TAG_ISINDEX, (TAG_ISINDEXleft
+ as TAG_ISINDEX1left), TAG_ISINDEX1right)) :: rest671)) => let val  
+result = MlyValue.Block (
+let val stuff =
+		    HTMLAttrs.mkISINDEX (ctx TAG_ISINDEXleft, TAG_ISINDEX)
+		  in HTML.ISINDEX stuff end
+		
+)
+ in ( LrTable.NT 20, ( result, TAG_ISINDEX1left, TAG_ISINDEX1right), 
+rest671)
+end
+|  ( 64, ( ( _, ( MlyValue.TextList TextList, _, TextList1right)) :: (
+ _, ( MlyValue.START_P START_P, (START_Pleft as START_P1left), _)) :: 
+rest671)) => let val  result = MlyValue.Paragraph (
+HTMLAttrs.mkP(ctx START_Pleft, START_P, TextList))
+ in ( LrTable.NT 21, ( result, START_P1left, TextList1right), rest671)
+
+end
+|  ( 65, ( ( _, ( _, _, END_UL1right)) :: ( _, ( MlyValue.ListItemList
+ ListItemList, _, _)) :: ( _, ( MlyValue.START_UL START_UL, (
+START_ULleft as START_UL1left), _)) :: rest671)) => let val  result = 
+MlyValue.List (
+HTMLAttrs.mkUL(ctx START_ULleft, START_UL, ListItemList))
+ in ( LrTable.NT 22, ( result, START_UL1left, END_UL1right), rest671)
+
+end
+|  ( 66, ( ( _, ( _, _, END_OL1right)) :: ( _, ( MlyValue.ListItemList
+ ListItemList, _, _)) :: ( _, ( MlyValue.START_OL START_OL, (
+START_OLleft as START_OL1left), _)) :: rest671)) => let val  result = 
+MlyValue.List (
+HTMLAttrs.mkOL(ctx START_OLleft, START_OL, ListItemList))
+ in ( LrTable.NT 22, ( result, START_OL1left, END_OL1right), rest671)
+
+end
+|  ( 67, ( ( _, ( _, _, END_DIR1right)) :: ( _, ( 
+MlyValue.ListItemList ListItemList, _, _)) :: ( _, ( 
+MlyValue.START_DIR START_DIR, (START_DIRleft as START_DIR1left), _))
+ :: rest671)) => let val  result = MlyValue.List (
+HTMLAttrs.mkDIR(ctx START_DIRleft, START_DIR, ListItemList))
+ in ( LrTable.NT 22, ( result, START_DIR1left, END_DIR1right), rest671
+)
+end
+|  ( 68, ( ( _, ( _, _, END_MENU1right)) :: ( _, ( 
+MlyValue.ListItemList ListItemList, _, _)) :: ( _, ( 
+MlyValue.START_MENU START_MENU, (START_MENUleft as START_MENU1left), _
+)) :: rest671)) => let val  result = MlyValue.List (
+HTMLAttrs.mkMENU(ctx START_MENUleft, START_MENU, ListItemList))
+ in ( LrTable.NT 22, ( result, START_MENU1left, END_MENU1right), 
+rest671)
+end
+|  ( 69, ( ( _, ( _, _, END_DL1right)) :: ( _, ( MlyValue.DLItemList 
+DLItemList, _, _)) :: ( _, ( MlyValue.START_DL START_DL, (START_DLleft
+ as START_DL1left), _)) :: rest671)) => let val  result = 
+MlyValue.List (
+HTMLAttrs.mkDL(
+		  ctx START_DLleft, START_DL,
+		  groupDefListContents DLItemList)
+		
+)
+ in ( LrTable.NT 22, ( result, START_DL1left, END_DL1right), rest671)
+
+end
+|  ( 70, ( rest671)) => let val  result = MlyValue.ListItemList ([])
+ in ( LrTable.NT 23, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 71, ( ( _, ( MlyValue.ListItemList ListItemList, _, 
+ListItemList1right)) :: ( _, ( MlyValue.ListItem ListItem, 
+ListItem1left, _)) :: rest671)) => let val  result = 
+MlyValue.ListItemList (ListItem :: ListItemList)
+ in ( LrTable.NT 23, ( result, ListItem1left, ListItemList1right), 
+rest671)
+end
+|  ( 72, ( ( _, ( _, _, EndLI1right)) :: ( _, ( MlyValue.Flow1 Flow1,
+ _, _)) :: ( _, ( MlyValue.START_LI START_LI, (START_LIleft as 
+START_LI1left), _)) :: rest671)) => let val  result = 
+MlyValue.ListItem (
+HTMLAttrs.mkLI(ctx START_LIleft, START_LI, mkBlock Flow1))
+ in ( LrTable.NT 24, ( result, START_LI1left, EndLI1right), rest671)
+
+end
+|  ( 73, ( rest671)) => let val  result = MlyValue.DLItemList ([])
+ in ( LrTable.NT 25, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 74, ( ( _, ( MlyValue.DLItemList DLItemList, _, DLItemList1right)
+) :: ( _, ( MlyValue.DLItem DLItem, DLItem1left, _)) :: rest671)) =>
+ let val  result = MlyValue.DLItemList (DLItem :: DLItemList)
+ in ( LrTable.NT 25, ( result, DLItem1left, DLItemList1right), rest671
+)
+end
+|  ( 75, ( ( _, ( _, _, EndDT1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_DT1left, _)) :: rest671)) => let
+ val  result = MlyValue.DLItem (DL_tag TextList)
+ in ( LrTable.NT 26, ( result, START_DT1left, EndDT1right), rest671)
+
+end
+|  ( 76, ( ( _, ( _, _, EndDD1right)) :: ( _, ( MlyValue.Flow1 Flow1,
+ _, _)) :: ( _, ( _, START_DD1left, _)) :: rest671)) => let val  
+result = MlyValue.DLItem (DL_item(mkBlock Flow1))
+ in ( LrTable.NT 26, ( result, START_DD1left, EndDD1right), rest671)
+
+end
+|  ( 77, ( rest671)) => let val  result = MlyValue.Flow1 ([])
+ in ( LrTable.NT 27, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 78, ( ( _, ( MlyValue.Flow1 Flow1, _, Flow11right)) :: ( _, ( 
+MlyValue.Text Text, Text1left, _)) :: rest671)) => let val  result = 
+MlyValue.Flow1 (consText(Text, Flow1))
+ in ( LrTable.NT 27, ( result, Text1left, Flow11right), rest671)
+end
+|  ( 79, ( ( _, ( MlyValue.Flow1 Flow1, _, Flow11right)) :: ( _, ( 
+MlyValue.Block Block, Block1left, _)) :: rest671)) => let val  result
+ = MlyValue.Flow1 (consBlock(Block, Flow1))
+ in ( LrTable.NT 27, ( result, Block1left, Flow11right), rest671)
+end
+|  ( 80, ( ( _, ( MlyValue.Flow1 Flow1, _, Flow11right)) :: _ :: ( _, 
+( MlyValue.Paragraph Paragraph, Paragraph1left, _)) :: rest671)) =>
+ let val  result = MlyValue.Flow1 (consBlock(Paragraph, Flow1))
+ in ( LrTable.NT 27, ( result, Paragraph1left, Flow11right), rest671)
+
+end
+|  ( 81, ( ( _, ( MlyValue.Flow2 Flow2, _, Flow21right)) :: ( _, ( 
+MlyValue.Paragraph Paragraph, Paragraph1left, _)) :: rest671)) => let
+ val  result = MlyValue.Flow1 (consBlock(Paragraph, Flow2))
+ in ( LrTable.NT 27, ( result, Paragraph1left, Flow21right), rest671)
+
+end
+|  ( 82, ( rest671)) => let val  result = MlyValue.Flow2 ([])
+ in ( LrTable.NT 28, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 83, ( ( _, ( MlyValue.Flow1 Flow1, _, Flow11right)) :: ( _, ( 
+MlyValue.Block Block, Block1left, _)) :: rest671)) => let val  result
+ = MlyValue.Flow2 (consBlock(Block, Flow1))
+ in ( LrTable.NT 28, ( result, Block1left, Flow11right), rest671)
+end
+|  ( 84, ( ( _, ( MlyValue.Flow1 Flow1, _, Flow11right)) :: _ :: ( _, 
+( MlyValue.Paragraph Paragraph, Paragraph1left, _)) :: rest671)) =>
+ let val  result = MlyValue.Flow2 (consBlock(Paragraph, Flow1))
+ in ( LrTable.NT 28, ( result, Paragraph1left, Flow11right), rest671)
+
+end
+|  ( 85, ( ( _, ( MlyValue.Flow2 Flow2, _, Flow21right)) :: ( _, ( 
+MlyValue.Paragraph Paragraph, Paragraph1left, _)) :: rest671)) => let
+ val  result = MlyValue.Flow2 (consBlock(Paragraph, Flow2))
+ in ( LrTable.NT 28, ( result, Paragraph1left, Flow21right), rest671)
+
+end
+|  ( 86, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 29, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 87, ( ( _, ( _, END_LI1left, END_LI1right)) :: rest671)) => let
+ val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 29, ( result, END_LI1left, END_LI1right), rest671)
+
+end
+|  ( 88, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 30, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 89, ( ( _, ( _, END_DT1left, END_DT1right)) :: rest671)) => let
+ val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 30, ( result, END_DT1left, END_DT1right), rest671)
+
+end
+|  ( 90, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 31, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 91, ( ( _, ( _, END_DD1left, END_DD1right)) :: rest671)) => let
+ val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 31, ( result, END_DD1left, END_DD1right), rest671)
+
+end
+|  ( 92, ( ( _, ( _, _, END_PRE1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_PRE START_PRE, (
+START_PREleft as START_PRE1left), _)) :: rest671)) => let val  result
+ = MlyValue.Preformatted (
+HTMLAttrs.mkPRE(ctx START_PREleft, START_PRE, TextList))
+ in ( LrTable.NT 32, ( result, START_PRE1left, END_PRE1right), rest671
+)
+end
+|  ( 93, ( rest671)) => let val  result = MlyValue.optCaption (NONE)
+ in ( LrTable.NT 33, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 94, ( ( _, ( _, _, END_CAPTION1right)) :: ( _, ( 
+MlyValue.TextList TextList, _, _)) :: ( _, ( MlyValue.START_CAPTION 
+START_CAPTION, (START_CAPTIONleft as START_CAPTION1left), _)) :: 
+rest671)) => let val  result = MlyValue.optCaption (
+SOME(HTMLAttrs.mkCAPTION(
+		  ctx START_CAPTIONleft, START_CAPTION, TextList))
+)
+ in ( LrTable.NT 33, ( result, START_CAPTION1left, END_CAPTION1right),
+ rest671)
+end
+|  ( 95, ( ( _, ( MlyValue.TableRow TableRow, TableRow1left, 
+TableRow1right)) :: rest671)) => let val  result = 
+MlyValue.TableRowList ([TableRow])
+ in ( LrTable.NT 34, ( result, TableRow1left, TableRow1right), rest671
+)
+end
+|  ( 96, ( ( _, ( MlyValue.TableRowList TableRowList, _, 
+TableRowList1right)) :: ( _, ( MlyValue.TableRow TableRow, 
+TableRow1left, _)) :: rest671)) => let val  result = 
+MlyValue.TableRowList (TableRow :: TableRowList)
+ in ( LrTable.NT 34, ( result, TableRow1left, TableRowList1right), 
+rest671)
+end
+|  ( 97, ( ( _, ( MlyValue.TableCellList TableCellList, _, 
+TableCellList1right)) :: ( _, ( MlyValue.START_TR START_TR, (
+START_TRleft as START_TR1left), _)) :: rest671)) => let val  result = 
+MlyValue.TableRow (
+HTMLAttrs.mkTR(ctx START_TRleft, START_TR, TableCellList))
+ in ( LrTable.NT 35, ( result, START_TR1left, TableCellList1right), 
+rest671)
+end
+|  ( 98, ( ( _, ( _, _, END_TR1right)) :: ( _, ( 
+MlyValue.TableCellList TableCellList, _, _)) :: ( _, ( 
+MlyValue.START_TR START_TR, (START_TRleft as START_TR1left), _)) :: 
+rest671)) => let val  result = MlyValue.TableRow (
+HTMLAttrs.mkTR(ctx START_TRleft, START_TR, TableCellList))
+ in ( LrTable.NT 35, ( result, START_TR1left, END_TR1right), rest671)
+
+end
+|  ( 99, ( ( _, ( MlyValue.TableCell TableCell, TableCell1left, 
+TableCell1right)) :: rest671)) => let val  result = 
+MlyValue.TableCellList ([TableCell])
+ in ( LrTable.NT 36, ( result, TableCell1left, TableCell1right), 
+rest671)
+end
+|  ( 100, ( ( _, ( MlyValue.TableCellList TableCellList, _, 
+TableCellList1right)) :: ( _, ( MlyValue.TableCell TableCell, 
+TableCell1left, _)) :: rest671)) => let val  result = 
+MlyValue.TableCellList (TableCell :: TableCellList)
+ in ( LrTable.NT 36, ( result, TableCell1left, TableCellList1right), 
+rest671)
+end
+|  ( 101, ( ( _, ( _, _, END_TH1right)) :: ( _, ( MlyValue.BodyContent
+ BodyContent, _, _)) :: ( _, ( MlyValue.START_TH START_TH, (
+START_THleft as START_TH1left), _)) :: rest671)) => let val  result = 
+MlyValue.TableCell (
+HTMLAttrs.mkTH(ctx START_THleft, START_TH, BodyContent))
+ in ( LrTable.NT 37, ( result, START_TH1left, END_TH1right), rest671)
+
+end
+|  ( 102, ( ( _, ( MlyValue.BodyContent BodyContent, _, 
+BodyContent1right)) :: ( _, ( MlyValue.START_TH START_TH, (
+START_THleft as START_TH1left), _)) :: rest671)) => let val  result = 
+MlyValue.TableCell (
+HTMLAttrs.mkTH(ctx START_THleft, START_TH, BodyContent))
+ in ( LrTable.NT 37, ( result, START_TH1left, BodyContent1right), 
+rest671)
+end
+|  ( 103, ( ( _, ( _, _, END_TD1right)) :: ( _, ( MlyValue.BodyContent
+ BodyContent, _, _)) :: ( _, ( MlyValue.START_TD START_TD, (
+START_TDleft as START_TD1left), _)) :: rest671)) => let val  result = 
+MlyValue.TableCell (
+HTMLAttrs.mkTD(ctx START_TDleft, START_TD, BodyContent))
+ in ( LrTable.NT 37, ( result, START_TD1left, END_TD1right), rest671)
+
+end
+|  ( 104, ( ( _, ( MlyValue.BodyContent BodyContent, _, 
+BodyContent1right)) :: ( _, ( MlyValue.START_TD START_TD, (
+START_TDleft as START_TD1left), _)) :: rest671)) => let val  result = 
+MlyValue.TableCell (
+HTMLAttrs.mkTD(ctx START_TDleft, START_TD, BodyContent))
+ in ( LrTable.NT 37, ( result, START_TD1left, BodyContent1right), 
+rest671)
+end
+|  ( 105, ( ( _, ( MlyValue.TextList' TextList', TextList'1left, 
+TextList'1right)) :: rest671)) => let val  result = MlyValue.TextList
+ (textList TextList')
+ in ( LrTable.NT 38, ( result, TextList'1left, TextList'1right), 
+rest671)
+end
+|  ( 106, ( rest671)) => let val  result = MlyValue.TextList' ([])
+ in ( LrTable.NT 39, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 107, ( ( _, ( MlyValue.TextList' TextList', _, TextList'1right))
+ :: ( _, ( MlyValue.Text Text, Text1left, _)) :: rest671)) => let val 
+ result = MlyValue.TextList' (Text :: TextList')
+ in ( LrTable.NT 39, ( result, Text1left, TextList'1right), rest671)
+
+end
+|  ( 108, ( ( _, ( MlyValue.PCDataElem PCDataElem, PCDataElem1left, 
+PCDataElem1right)) :: rest671)) => let val  result = 
+MlyValue.TextWOScript (HTML.PCDATA PCDataElem)
+ in ( LrTable.NT 40, ( result, PCDataElem1left, PCDataElem1right), 
+rest671)
+end
+|  ( 109, ( ( _, ( MlyValue.Font Font, Font1left, Font1right)) :: 
+rest671)) => let val  result = MlyValue.TextWOScript (Font)
+ in ( LrTable.NT 40, ( result, Font1left, Font1right), rest671)
+end
+|  ( 110, ( ( _, ( MlyValue.Phrase Phrase, Phrase1left, Phrase1right))
+ :: rest671)) => let val  result = MlyValue.TextWOScript (Phrase)
+ in ( LrTable.NT 40, ( result, Phrase1left, Phrase1right), rest671)
+
+end
+|  ( 111, ( ( _, ( MlyValue.Special Special, Special1left, 
+Special1right)) :: rest671)) => let val  result = 
+MlyValue.TextWOScript (Special)
+ in ( LrTable.NT 40, ( result, Special1left, Special1right), rest671)
+
+end
+|  ( 112, ( ( _, ( MlyValue.Form Form, Form1left, Form1right)) :: 
+rest671)) => let val  result = MlyValue.TextWOScript (Form)
+ in ( LrTable.NT 40, ( result, Form1left, Form1right), rest671)
+end
+|  ( 113, ( ( _, ( MlyValue.TextWOScript TextWOScript, 
+TextWOScript1left, TextWOScript1right)) :: rest671)) => let val  
+result = MlyValue.Text (TextWOScript)
+ in ( LrTable.NT 41, ( result, TextWOScript1left, TextWOScript1right),
+ rest671)
+end
+|  ( 114, ( ( _, ( _, _, END_SCRIPT1right)) :: ( _, ( MlyValue.PCData 
+PCData, _, _)) :: ( _, ( _, START_SCRIPT1left, _)) :: rest671)) => let
+ val  result = MlyValue.Text (HTML.SCRIPT PCData)
+ in ( LrTable.NT 41, ( result, START_SCRIPT1left, END_SCRIPT1right), 
+rest671)
+end
+|  ( 115, ( ( _, ( _, _, END_TT1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_TT1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.TT(TextList))
+ in ( LrTable.NT 42, ( result, START_TT1left, END_TT1right), rest671)
+
+end
+|  ( 116, ( ( _, ( _, _, END_I1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_I1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.I(TextList))
+ in ( LrTable.NT 42, ( result, START_I1left, END_I1right), rest671)
+
+end
+|  ( 117, ( ( _, ( _, _, END_B1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_B1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.B(TextList))
+ in ( LrTable.NT 42, ( result, START_B1left, END_B1right), rest671)
+
+end
+|  ( 118, ( ( _, ( _, _, END_U1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_U1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.U(TextList))
+ in ( LrTable.NT 42, ( result, START_U1left, END_U1right), rest671)
+
+end
+|  ( 119, ( ( _, ( _, _, END_STRIKE1right)) :: ( _, ( 
+MlyValue.TextList TextList, _, _)) :: ( _, ( _, START_STRIKE1left, _))
+ :: rest671)) => let val  result = MlyValue.Font (
+HTML.STRIKE(TextList))
+ in ( LrTable.NT 42, ( result, START_STRIKE1left, END_STRIKE1right), 
+rest671)
+end
+|  ( 120, ( ( _, ( _, _, END_BIG1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_BIG1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.BIG(TextList))
+ in ( LrTable.NT 42, ( result, START_BIG1left, END_BIG1right), rest671
+)
+end
+|  ( 121, ( ( _, ( _, _, END_SMALL1right)) :: ( _, ( MlyValue.TextList
+ TextList, _, _)) :: ( _, ( _, START_SMALL1left, _)) :: rest671)) =>
+ let val  result = MlyValue.Font (HTML.SMALL(TextList))
+ in ( LrTable.NT 42, ( result, START_SMALL1left, END_SMALL1right), 
+rest671)
+end
+|  ( 122, ( ( _, ( _, _, END_SUB1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_SUB1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.SUB(TextList))
+ in ( LrTable.NT 42, ( result, START_SUB1left, END_SUB1right), rest671
+)
+end
+|  ( 123, ( ( _, ( _, _, END_SUP1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_SUP1left, _)) :: rest671)) => let
+ val  result = MlyValue.Font (HTML.SUP(TextList))
+ in ( LrTable.NT 42, ( result, START_SUP1left, END_SUP1right), rest671
+)
+end
+|  ( 124, ( ( _, ( _, _, END_EM1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_EM1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.EM(TextList))
+ in ( LrTable.NT 43, ( result, START_EM1left, END_EM1right), rest671)
+
+end
+|  ( 125, ( ( _, ( _, _, END_STRONG1right)) :: ( _, ( 
+MlyValue.TextList TextList, _, _)) :: ( _, ( _, START_STRONG1left, _))
+ :: rest671)) => let val  result = MlyValue.Phrase (
+HTML.STRONG(TextList))
+ in ( LrTable.NT 43, ( result, START_STRONG1left, END_STRONG1right), 
+rest671)
+end
+|  ( 126, ( ( _, ( _, _, END_CODE1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_CODE1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.CODE(TextList))
+ in ( LrTable.NT 43, ( result, START_CODE1left, END_CODE1right), 
+rest671)
+end
+|  ( 127, ( ( _, ( _, _, END_DFN1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_DFN1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.DFN(TextList))
+ in ( LrTable.NT 43, ( result, START_DFN1left, END_DFN1right), rest671
+)
+end
+|  ( 128, ( ( _, ( _, _, END_SAMP1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_SAMP1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.SAMP(TextList))
+ in ( LrTable.NT 43, ( result, START_SAMP1left, END_SAMP1right), 
+rest671)
+end
+|  ( 129, ( ( _, ( _, _, END_KBD1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_KBD1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.KBD(TextList))
+ in ( LrTable.NT 43, ( result, START_KBD1left, END_KBD1right), rest671
+)
+end
+|  ( 130, ( ( _, ( _, _, END_VAR1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_VAR1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.VAR(TextList))
+ in ( LrTable.NT 43, ( result, START_VAR1left, END_VAR1right), rest671
+)
+end
+|  ( 131, ( ( _, ( _, _, END_CITE1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( _, START_CITE1left, _)) :: rest671)) => let
+ val  result = MlyValue.Phrase (HTML.CITE(TextList))
+ in ( LrTable.NT 43, ( result, START_CITE1left, END_CITE1right), 
+rest671)
+end
+|  ( 132, ( ( _, ( _, _, END_A1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_A START_A, (START_Aleft as 
+START_A1left), _)) :: rest671)) => let val  result = MlyValue.Special
+ (HTMLAttrs.mkA(ctx START_Aleft, START_A, TextList))
+ in ( LrTable.NT 44, ( result, START_A1left, END_A1right), rest671)
+
+end
+|  ( 133, ( ( _, ( MlyValue.TAG_IMG TAG_IMG, (TAG_IMGleft as 
+TAG_IMG1left), TAG_IMG1right)) :: rest671)) => let val  result = 
+MlyValue.Special (HTMLAttrs.mkIMG(ctx TAG_IMGleft, TAG_IMG))
+ in ( LrTable.NT 44, ( result, TAG_IMG1left, TAG_IMG1right), rest671)
+
+end
+|  ( 134, ( ( _, ( _, _, END_APPLET1right)) :: ( _, ( 
+MlyValue.TextList TextList, _, _)) :: ( _, ( MlyValue.START_APPLET 
+START_APPLET, (START_APPLETleft as START_APPLET1left), _)) :: rest671)
+) => let val  result = MlyValue.Special (
+HTMLAttrs.mkAPPLET(ctx START_APPLETleft, START_APPLET, TextList))
+ in ( LrTable.NT 44, ( result, START_APPLET1left, END_APPLET1right), 
+rest671)
+end
+|  ( 135, ( ( _, ( _, _, END_FONT1right)) :: ( _, ( MlyValue.TextList 
+TextList, _, _)) :: ( _, ( MlyValue.START_FONT START_FONT, (
+START_FONTleft as START_FONT1left), _)) :: rest671)) => let val  
+result = MlyValue.Special (
+HTMLAttrs.mkFONT(ctx START_FONTleft, START_FONT, TextList))
+ in ( LrTable.NT 44, ( result, START_FONT1left, END_FONT1right), 
+rest671)
+end
+|  ( 136, ( ( _, ( _, _, END_BASEFONT1right)) :: ( _, ( 
+MlyValue.TextList TextList, _, _)) :: ( _, ( MlyValue.START_BASEFONT 
+START_BASEFONT, (START_BASEFONTleft as START_BASEFONT1left), _)) :: 
+rest671)) => let val  result = MlyValue.Special (
+HTMLAttrs.mkBASEFONT(
+		  ctx START_BASEFONTleft, START_BASEFONT, TextList)
+		
+)
+ in ( LrTable.NT 44, ( result, START_BASEFONT1left, END_BASEFONT1right
+), rest671)
+end
+|  ( 137, ( ( _, ( MlyValue.TAG_BR TAG_BR, (TAG_BRleft as TAG_BR1left)
+, TAG_BR1right)) :: rest671)) => let val  result = MlyValue.Special (
+HTMLAttrs.mkBR(ctx TAG_BRleft, TAG_BR))
+ in ( LrTable.NT 44, ( result, TAG_BR1left, TAG_BR1right), rest671)
+
+end
+|  ( 138, ( ( _, ( _, _, END_MAP1right)) :: ( _, ( MlyValue.AreaList 
+AreaList, _, _)) :: ( _, ( MlyValue.START_MAP START_MAP, (
+START_MAPleft as START_MAP1left), _)) :: rest671)) => let val  result
+ = MlyValue.Special (
+HTMLAttrs.mkMAP(ctx START_MAPleft, START_MAP, AreaList))
+ in ( LrTable.NT 44, ( result, START_MAP1left, END_MAP1right), rest671
+)
+end
+|  ( 139, ( ( _, ( MlyValue.TAG_PARAM TAG_PARAM, (TAG_PARAMleft as 
+TAG_PARAM1left), TAG_PARAM1right)) :: rest671)) => let val  result = 
+MlyValue.Special (HTMLAttrs.mkPARAM(ctx TAG_PARAMleft, TAG_PARAM))
+ in ( LrTable.NT 44, ( result, TAG_PARAM1left, TAG_PARAM1right), 
+rest671)
+end
+|  ( 140, ( rest671)) => let val  result = MlyValue.AreaList ([])
+ in ( LrTable.NT 45, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 141, ( ( _, ( MlyValue.AreaList AreaList, _, AreaList1right)) :: 
+( _, ( MlyValue.TAG_AREA TAG_AREA, (TAG_AREAleft as TAG_AREA1left), _)
+) :: rest671)) => let val  result = MlyValue.AreaList (
+HTMLAttrs.mkAREA(ctx TAG_AREAleft, TAG_AREA) :: AreaList)
+ in ( LrTable.NT 45, ( result, TAG_AREA1left, AreaList1right), rest671
+)
+end
+|  ( 142, ( ( _, ( MlyValue.TAG_INPUT TAG_INPUT, (TAG_INPUTleft as 
+TAG_INPUT1left), TAG_INPUT1right)) :: rest671)) => let val  result = 
+MlyValue.Form (HTMLAttrs.mkINPUT(ctx TAG_INPUTleft, TAG_INPUT))
+ in ( LrTable.NT 46, ( result, TAG_INPUT1left, TAG_INPUT1right), 
+rest671)
+end
+|  ( 143, ( ( _, ( _, _, END_SELECT1right)) :: ( _, ( 
+MlyValue.OptionList OptionList, _, _)) :: ( _, ( MlyValue.START_SELECT
+ START_SELECT, (START_SELECTleft as START_SELECT1left), _)) :: rest671
+)) => let val  result = MlyValue.Form (
+HTMLAttrs.mkSELECT(ctx START_SELECTleft, START_SELECT, OptionList))
+ in ( LrTable.NT 46, ( result, START_SELECT1left, END_SELECT1right), 
+rest671)
+end
+|  ( 144, ( ( _, ( _, _, END_TEXTAREA1right)) :: ( _, ( 
+MlyValue.PCData PCData, _, _)) :: ( _, ( MlyValue.START_TEXTAREA 
+START_TEXTAREA, (START_TEXTAREAleft as START_TEXTAREA1left), _)) :: 
+rest671)) => let val  result = MlyValue.Form (
+HTMLAttrs.mkTEXTAREA(
+		  ctx START_TEXTAREAleft, START_TEXTAREA,
+		  PCData)
+		
+)
+ in ( LrTable.NT 46, ( result, START_TEXTAREA1left, END_TEXTAREA1right
+), rest671)
+end
+|  ( 145, ( rest671)) => let val  result = MlyValue.OptionList ([])
+ in ( LrTable.NT 47, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 146, ( ( _, ( MlyValue.OptionList OptionList, _, OptionList1right
+)) :: _ :: ( _, ( MlyValue.PCData PCData, _, _)) :: ( _, ( 
+MlyValue.START_OPTION START_OPTION, (START_OPTIONleft as 
+START_OPTION1left), _)) :: rest671)) => let val  result = 
+MlyValue.OptionList (
+HTMLAttrs.mkOPTION(ctx START_OPTIONleft, START_OPTION, PCData)
+		  :: OptionList
+		
+)
+ in ( LrTable.NT 47, ( result, START_OPTION1left, OptionList1right), 
+rest671)
+end
+|  ( 147, ( rest671)) => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 48, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 148, ( ( _, ( _, END_OPTION1left, END_OPTION1right)) :: rest671))
+ => let val  result = MlyValue.ntVOID ()
+ in ( LrTable.NT 48, ( result, END_OPTION1left, END_OPTION1right), 
+rest671)
+end
+|  ( 149, ( ( _, ( MlyValue.PCDataList PCDataList, PCDataList1left, 
+PCDataList1right)) :: rest671)) => let val  result = MlyValue.PCData (
+concat PCDataList)
+ in ( LrTable.NT 49, ( result, PCDataList1left, PCDataList1right), 
+rest671)
+end
+|  ( 150, ( rest671)) => let val  result = MlyValue.PCDataList ([])
+ in ( LrTable.NT 50, ( result, defaultPos, defaultPos), rest671)
+end
+|  ( 151, ( ( _, ( MlyValue.PCDataList PCDataList, _, PCDataList1right
+)) :: ( _, ( MlyValue.PCDataElem PCDataElem, PCDataElem1left, _)) :: 
+rest671)) => let val  result = MlyValue.PCDataList (
+PCDataElem :: PCDataList)
+ in ( LrTable.NT 50, ( result, PCDataElem1left, PCDataList1right), 
+rest671)
+end
+|  ( 152, ( ( _, ( MlyValue.PCDATA PCDATA, PCDATA1left, PCDATA1right))
+ :: rest671)) => let val  result = MlyValue.PCDataElem (PCDATA)
+ in ( LrTable.NT 51, ( result, PCDATA1left, PCDATA1right), rest671)
+
+end
+|  ( 153, ( ( _, ( MlyValue.CHAR_REF CHAR_REF, CHAR_REF1left, 
+CHAR_REF1right)) :: rest671)) => let val  result = MlyValue.PCDataElem
+ (CHAR_REF)
+ in ( LrTable.NT 51, ( result, CHAR_REF1left, CHAR_REF1right), rest671
+)
+end
+|  ( 154, ( ( _, ( MlyValue.ENTITY_REF ENTITY_REF, ENTITY_REF1left, 
+ENTITY_REF1right)) :: rest671)) => let val  result = 
+MlyValue.PCDataElem (ENTITY_REF)
+ in ( LrTable.NT 51, ( result, ENTITY_REF1left, ENTITY_REF1right), 
+rest671)
+end
+| _ => raise (mlyAction i392)
+end
+val void = MlyValue.VOID
+val extract = fn a => (fn MlyValue.Document x => x
+| _ => let exception ParseInternal
+	in raise ParseInternal end) a 
+end
+end
+structure Tokens : HTML_TOKENS =
+struct
+type svalue = ParserData.svalue
+type ('a,'b) token = ('a,'b) Token.token
+fun EOF (p1,p2) = Token.TOKEN (ParserData.LrTable.T 0,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_A (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 1,(
+ParserData.MlyValue.START_A i,p1,p2))
+fun END_A (p1,p2) = Token.TOKEN (ParserData.LrTable.T 2,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_ADDRESS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 3,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_ADDRESS (p1,p2) = Token.TOKEN (ParserData.LrTable.T 4,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_APPLET (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 5,(
+ParserData.MlyValue.START_APPLET i,p1,p2))
+fun END_APPLET (p1,p2) = Token.TOKEN (ParserData.LrTable.T 6,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_AREA (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 7,(
+ParserData.MlyValue.TAG_AREA i,p1,p2))
+fun START_B (p1,p2) = Token.TOKEN (ParserData.LrTable.T 8,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_B (p1,p2) = Token.TOKEN (ParserData.LrTable.T 9,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_BASE (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 10,(
+ParserData.MlyValue.TAG_BASE i,p1,p2))
+fun START_BIG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 11,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_BIG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 12,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_BLOCKQUOTE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 13,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_BLOCKQUOTE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 14,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_BODY (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 15,(
+ParserData.MlyValue.START_BODY i,p1,p2))
+fun END_BODY (p1,p2) = Token.TOKEN (ParserData.LrTable.T 16,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_BR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 17,(
+ParserData.MlyValue.TAG_BR i,p1,p2))
+fun START_CAPTION (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 18,(
+ParserData.MlyValue.START_CAPTION i,p1,p2))
+fun END_CAPTION (p1,p2) = Token.TOKEN (ParserData.LrTable.T 19,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_CENTER (p1,p2) = Token.TOKEN (ParserData.LrTable.T 20,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_CENTER (p1,p2) = Token.TOKEN (ParserData.LrTable.T 21,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_CITE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 22,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_CITE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 23,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_CODE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 24,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_CODE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 25,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 26,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_DD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 27,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DFN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 28,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_DFN (p1,p2) = Token.TOKEN (ParserData.LrTable.T 29,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DIR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 30,(
+ParserData.MlyValue.START_DIR i,p1,p2))
+fun END_DIR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 31,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DIV (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 32,(
+ParserData.MlyValue.START_DIV i,p1,p2))
+fun END_DIV (p1,p2) = Token.TOKEN (ParserData.LrTable.T 33,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DL (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 34,(
+ParserData.MlyValue.START_DL i,p1,p2))
+fun END_DL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 35,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_DT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 36,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_DT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 37,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_EM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 38,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_EM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 39,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_FONT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 40,(
+ParserData.MlyValue.START_FONT i,p1,p2))
+fun END_FONT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 41,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_BASEFONT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 42,(
+ParserData.MlyValue.START_BASEFONT i,p1,p2))
+fun END_BASEFONT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 43,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_FORM (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 44,(
+ParserData.MlyValue.START_FORM i,p1,p2))
+fun END_FORM (p1,p2) = Token.TOKEN (ParserData.LrTable.T 45,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H1 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 46,(
+ParserData.MlyValue.START_H1 i,p1,p2))
+fun END_H1 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 47,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H2 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 48,(
+ParserData.MlyValue.START_H2 i,p1,p2))
+fun END_H2 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 49,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H3 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 50,(
+ParserData.MlyValue.START_H3 i,p1,p2))
+fun END_H3 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 51,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H4 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 52,(
+ParserData.MlyValue.START_H4 i,p1,p2))
+fun END_H4 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 53,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H5 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 54,(
+ParserData.MlyValue.START_H5 i,p1,p2))
+fun END_H5 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 55,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_H6 (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 56,(
+ParserData.MlyValue.START_H6 i,p1,p2))
+fun END_H6 (p1,p2) = Token.TOKEN (ParserData.LrTable.T 57,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_HEAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 58,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_HEAD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 59,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_HR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 60,(
+ParserData.MlyValue.TAG_HR i,p1,p2))
+fun START_HTML (p1,p2) = Token.TOKEN (ParserData.LrTable.T 61,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_HTML (p1,p2) = Token.TOKEN (ParserData.LrTable.T 62,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_I (p1,p2) = Token.TOKEN (ParserData.LrTable.T 63,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_I (p1,p2) = Token.TOKEN (ParserData.LrTable.T 64,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_IMG (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 65,(
+ParserData.MlyValue.TAG_IMG i,p1,p2))
+fun TAG_INPUT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 66,(
+ParserData.MlyValue.TAG_INPUT i,p1,p2))
+fun TAG_ISINDEX (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 67,(
+ParserData.MlyValue.TAG_ISINDEX i,p1,p2))
+fun START_KBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 68,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_KBD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 69,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_LI (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 70,(
+ParserData.MlyValue.START_LI i,p1,p2))
+fun END_LI (p1,p2) = Token.TOKEN (ParserData.LrTable.T 71,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_LINK (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 72,(
+ParserData.MlyValue.TAG_LINK i,p1,p2))
+fun START_MAP (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 73,(
+ParserData.MlyValue.START_MAP i,p1,p2))
+fun END_MAP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 74,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_MENU (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 75,(
+ParserData.MlyValue.START_MENU i,p1,p2))
+fun END_MENU (p1,p2) = Token.TOKEN (ParserData.LrTable.T 76,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_META (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 77,(
+ParserData.MlyValue.TAG_META i,p1,p2))
+fun START_OL (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 78,(
+ParserData.MlyValue.START_OL i,p1,p2))
+fun END_OL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 79,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_OPTION (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 80,(
+ParserData.MlyValue.START_OPTION i,p1,p2))
+fun END_OPTION (p1,p2) = Token.TOKEN (ParserData.LrTable.T 81,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_P (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 82,(
+ParserData.MlyValue.START_P i,p1,p2))
+fun END_P (p1,p2) = Token.TOKEN (ParserData.LrTable.T 83,(
+ParserData.MlyValue.VOID,p1,p2))
+fun TAG_PARAM (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 84,(
+ParserData.MlyValue.TAG_PARAM i,p1,p2))
+fun START_PRE (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 85,(
+ParserData.MlyValue.START_PRE i,p1,p2))
+fun END_PRE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 86,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SAMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 87,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_SAMP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 88,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SCRIPT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 89,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_SCRIPT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 90,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SELECT (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 91,(
+ParserData.MlyValue.START_SELECT i,p1,p2))
+fun END_SELECT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 92,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SMALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 93,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_SMALL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 94,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_STRIKE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 95,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_STRIKE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 96,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_STRONG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 97,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_STRONG (p1,p2) = Token.TOKEN (ParserData.LrTable.T 98,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_STYLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 99,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_STYLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 100,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 101,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_SUB (p1,p2) = Token.TOKEN (ParserData.LrTable.T 102,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_SUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 103,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_SUP (p1,p2) = Token.TOKEN (ParserData.LrTable.T 104,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TABLE (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 105,(
+ParserData.MlyValue.START_TABLE i,p1,p2))
+fun END_TABLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 106,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TD (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 107,(
+ParserData.MlyValue.START_TD i,p1,p2))
+fun END_TD (p1,p2) = Token.TOKEN (ParserData.LrTable.T 108,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TEXTAREA (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 109,(
+ParserData.MlyValue.START_TEXTAREA i,p1,p2))
+fun END_TEXTAREA (p1,p2) = Token.TOKEN (ParserData.LrTable.T 110,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TH (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 111,(
+ParserData.MlyValue.START_TH i,p1,p2))
+fun END_TH (p1,p2) = Token.TOKEN (ParserData.LrTable.T 112,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TITLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 113,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_TITLE (p1,p2) = Token.TOKEN (ParserData.LrTable.T 114,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TR (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 115,(
+ParserData.MlyValue.START_TR i,p1,p2))
+fun END_TR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 116,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_TT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 117,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_TT (p1,p2) = Token.TOKEN (ParserData.LrTable.T 118,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_U (p1,p2) = Token.TOKEN (ParserData.LrTable.T 119,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_U (p1,p2) = Token.TOKEN (ParserData.LrTable.T 120,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_UL (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 121,(
+ParserData.MlyValue.START_UL i,p1,p2))
+fun END_UL (p1,p2) = Token.TOKEN (ParserData.LrTable.T 122,(
+ParserData.MlyValue.VOID,p1,p2))
+fun START_VAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 123,(
+ParserData.MlyValue.VOID,p1,p2))
+fun END_VAR (p1,p2) = Token.TOKEN (ParserData.LrTable.T 124,(
+ParserData.MlyValue.VOID,p1,p2))
+fun PCDATA (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 125,(
+ParserData.MlyValue.PCDATA i,p1,p2))
+fun CHAR_REF (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 126,(
+ParserData.MlyValue.CHAR_REF i,p1,p2))
+fun ENTITY_REF (i,p1,p2) = Token.TOKEN (ParserData.LrTable.T 127,(
+ParserData.MlyValue.ENTITY_REF i,p1,p2))
+end
+end
diff --git a/HTML/html-lex.sml b/HTML/html-lex.sml
new file mode 100644
index 0000000..331d859
--- /dev/null
+++ b/HTML/html-lex.sml
@@ -0,0 +1,670 @@
+functor HTMLLexFn (
+  structure Tokens : HTML_TOKENS
+  structure Err : HTML_ERROR
+  structure HTMLAttrs : HTML_ATTRS)=
+   struct
+    structure UserDeclarations =
+      struct
+(* html-lex
+ *
+ * COPYRIGHT (c) 1995 AT&T Bell Laboratories.
+ * COPYRIGHT (c) 1996 AT&T Research.
+ *
+ * A scanner for HTML.
+ *
+ * TODO:
+ *    Recognize the DOCTYPE element
+ *	<!DOCTYPE HTML PUBLIC "...">
+ *    Clean-up the scanning of start tags (do we need Err?).
+ *    Whitespace in PRE elements should be preserved, but how?
+ *)
+
+structure T = Tokens
+structure Elems = HTMLElementsFn (
+  structure Tokens = Tokens
+  structure Err = Err
+  structure HTMLAttrs = HTMLAttrs)
+
+type pos = int
+type svalue = T.svalue
+type arg = (((string * int * int) -> unit) * string option)
+type ('a, 'b) token = ('a, 'b) T.token
+type lexresult= (svalue, pos) token
+
+fun eof _ = Tokens.EOF(0, 0)
+
+(* a buffer for collecting a string piecewise *)
+val buffer = ref ([] : string list)
+fun addStr s = (buffer := s :: !buffer)
+fun getStr () = (String.concat(List.rev(! buffer)) before (buffer := []))
+
+end (* end of user routines *)
+exception LexError (* raised if illegal leaf action tried *)
+structure Internal =
+	struct
+
+datatype yyfinstate = N of int
+type statedata = {fin : yyfinstate list, trans: string}
+(* transition & final state table *)
+val tab = let
+val s = [ 
+ (0, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (1, 
+"\009\009\009\009\009\009\009\009\009\028\029\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\028\009\009\009\009\009\020\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\011\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\
+\\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009\009"
+),
+ (3, 
+"\030\030\030\030\030\030\030\030\030\030\033\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\031\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\
+\\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030\030"
+),
+ (5, 
+"\034\034\034\034\034\034\034\034\034\038\039\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\038\034\034\034\034\034\034\034\034\034\034\034\034\036\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\035\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\
+\\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034\034"
+),
+ (7, 
+"\040\040\040\040\040\040\040\040\040\051\053\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\051\040\048\040\040\040\040\045\040\040\040\040\040\041\041\040\
+\\041\041\041\041\041\041\041\041\041\041\040\040\040\044\043\040\
+\\040\041\041\041\041\041\041\041\041\041\041\041\041\041\041\041\
+\\041\041\041\041\041\041\041\041\041\041\041\040\040\040\040\040\
+\\040\041\041\041\041\041\041\041\041\041\041\041\041\041\041\041\
+\\041\041\041\041\041\041\041\041\041\041\041\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\
+\\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040"
+),
+ (9, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\000\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (11, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\013\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
+\\012\012\012\012\012\012\012\012\012\012\012\000\000\000\000\000\
+\\000\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
+\\012\012\012\012\012\012\012\012\012\012\012\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (12, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\012\012\000\
+\\012\012\012\012\012\012\012\012\012\012\000\000\000\000\000\000\
+\\000\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
+\\012\012\012\012\012\012\012\012\012\012\012\000\000\000\000\000\
+\\000\012\012\012\012\012\012\012\012\012\012\012\012\012\012\012\
+\\012\012\012\012\012\012\012\012\012\012\012\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (13, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\
+\\014\014\014\014\014\014\014\014\014\014\014\000\000\000\000\000\
+\\000\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\
+\\014\014\014\014\014\014\014\014\014\014\014\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (14, 
+"\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\016\000\000\000\000\000\000\000\000\000\000\000\000\014\014\000\
+\\014\014\014\014\014\014\014\014\014\014\000\000\000\000\015\000\
+\\000\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\
+\\014\014\014\014\014\014\014\014\014\014\014\000\000\000\000\000\
+\\000\014\014\014\014\014\014\014\014\014\014\014\014\014\014\014\
+\\014\014\014\014\014\014\014\014\014\014\014\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (16, 
+"\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\015\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (17, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\018\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (18, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\019\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (20, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\023\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\000\010\010\010\
+\\010\021\021\021\021\021\021\021\021\021\021\021\021\021\021\021\
+\\021\021\021\021\021\021\021\021\021\021\021\010\010\010\010\010\
+\\010\021\021\021\021\021\021\021\021\021\021\021\021\021\021\021\
+\\021\021\021\021\021\021\021\021\021\021\021\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (21, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\021\021\010\
+\\021\021\021\021\021\021\021\021\021\021\010\022\000\010\010\010\
+\\010\021\021\021\021\021\021\021\021\021\021\021\021\021\021\021\
+\\021\021\021\021\021\021\021\021\021\021\021\010\010\010\010\010\
+\\010\021\021\021\021\021\021\021\021\021\021\021\021\021\021\021\
+\\021\021\021\021\021\021\021\021\021\021\021\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (23, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\026\026\026\026\026\026\026\026\026\026\010\010\000\010\010\010\
+\\010\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\
+\\024\024\024\024\024\024\024\024\024\024\024\010\010\010\010\010\
+\\010\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\
+\\024\024\024\024\024\024\024\024\024\024\024\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (24, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\025\000\010\010\010\
+\\010\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\
+\\024\024\024\024\024\024\024\024\024\024\024\010\010\010\010\010\
+\\010\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\
+\\024\024\024\024\024\024\024\024\024\024\024\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (26, 
+"\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\026\026\026\026\026\026\026\026\026\026\010\027\000\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\
+\\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010\010"
+),
+ (31, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\032\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (36, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\037\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (41, 
+"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\042\042\000\
+\\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\000\
+\\000\042\042\042\042\042\042\042\042\042\042\042\042\042\042\042\
+\\042\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
+\\000\042\042\042\042\042\042\042\042\042\042\042\042\042\042\042\
+\\042\042\042\042\042\042\042\042\042\042\042\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+ (45, 
+"\046\046\046\046\046\046\046\046\046\046\000\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\047\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\
+\\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046\046"
+),
+ (48, 
+"\049\049\049\049\049\049\049\049\049\049\000\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\050\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\
+\\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049\049"
+),
+ (51, 
+"\000\000\000\000\000\000\000\000\000\052\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\052\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
+\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
+),
+(0, "")]
+fun f x = x 
+val s = List.map f (List.rev (tl (List.rev s))) 
+exception LexHackingError 
+fun look ((j,x)::r, i: int) = if i = j then x else look(r, i) 
+  | look ([], i) = raise LexHackingError
+fun g {fin=x, trans=i} = {fin=x, trans=look(s,i)} 
+in Vector.fromList(List.map g 
+[{fin = [], trans = 0},
+{fin = [], trans = 1},
+{fin = [], trans = 1},
+{fin = [], trans = 3},
+{fin = [], trans = 3},
+{fin = [], trans = 5},
+{fin = [], trans = 5},
+{fin = [], trans = 7},
+{fin = [], trans = 7},
+{fin = [(N 79),(N 81)], trans = 9},
+{fin = [(N 79)], trans = 9},
+{fin = [(N 81)], trans = 11},
+{fin = [(N 3)], trans = 12},
+{fin = [], trans = 13},
+{fin = [], trans = 14},
+{fin = [(N 32)], trans = 0},
+{fin = [], trans = 16},
+{fin = [], trans = 17},
+{fin = [], trans = 18},
+{fin = [(N 37)], trans = 0},
+{fin = [(N 79),(N 81)], trans = 20},
+{fin = [(N 79)], trans = 21},
+{fin = [(N 72),(N 79)], trans = 9},
+{fin = [(N 79)], trans = 23},
+{fin = [(N 79)], trans = 24},
+{fin = [(N 61),(N 79)], trans = 9},
+{fin = [(N 79)], trans = 26},
+{fin = [(N 67),(N 79)], trans = 9},
+{fin = [(N 76),(N 79),(N 81)], trans = 9},
+{fin = [(N 74),(N 79)], trans = 9},
+{fin = [(N 44)], trans = 0},
+{fin = [(N 44)], trans = 31},
+{fin = [(N 40)], trans = 0},
+{fin = [(N 42)], trans = 0},
+{fin = [(N 55)], trans = 0},
+{fin = [(N 49),(N 55)], trans = 0},
+{fin = [(N 55)], trans = 36},
+{fin = [(N 47)], trans = 0},
+{fin = [(N 53),(N 55)], trans = 0},
+{fin = [(N 51)], trans = 0},
+{fin = [(N 25)], trans = 0},
+{fin = [(N 13),(N 25)], trans = 41},
+{fin = [(N 13)], trans = 41},
+{fin = [(N 5),(N 25)], trans = 0},
+{fin = [(N 15),(N 25)], trans = 0},
+{fin = [(N 25)], trans = 45},
+{fin = [], trans = 45},
+{fin = [(N 23)], trans = 0},
+{fin = [(N 25)], trans = 48},
+{fin = [], trans = 48},
+{fin = [(N 19)], trans = 0},
+{fin = [(N 10),(N 25)], trans = 51},
+{fin = [(N 10)], trans = 51},
+{fin = [(N 7)], trans = 0}])
+end
+structure StartStates =
+	struct
+	datatype yystartstate = STARTSTATE of int
+
+(* start state definitions *)
+
+val COM1 = STARTSTATE 3;
+val COM2 = STARTSTATE 5;
+val INITIAL = STARTSTATE 1;
+val STAG = STARTSTATE 7;
+
+end
+type result = UserDeclarations.lexresult
+	exception LexerError (* raised if illegal leaf action tried *)
+end
+
+fun makeLexer yyinput =
+let	val yygone0=1
+	val yylineno = ref 0
+
+	val yyb = ref "\n" 		(* buffer *)
+	val yybl = ref 1		(*buffer length *)
+	val yybufpos = ref 1		(* location of next character to use *)
+	val yygone = ref yygone0	(* position in file of beginning of buffer *)
+	val yydone = ref false		(* eof found yet? *)
+	val yybegin = ref 1		(*Current 'start state' for lexer *)
+
+	val YYBEGIN = fn (Internal.StartStates.STARTSTATE x) =>
+		 yybegin := x
+
+fun lex (yyarg as (errorFn, file)) =
+let fun continue() : Internal.result = 
+  let fun scan (s,AcceptingLeaves : Internal.yyfinstate list list,l,i0) =
+	let fun action (i,nil) = raise LexError
+	| action (i,nil::l) = action (i-1,l)
+	| action (i,(node::acts)::l) =
+		case node of
+		    Internal.N yyk => 
+			(let fun yymktext() = String.substring(!yyb,i0,i-i0)
+			     val yypos = i0+ !yygone
+			val _ = yylineno := CharVectorSlice.foldli
+				(fn (_,#"\n", n) => n+1 | (_,_, n) => n) (!yylineno) (CharVectorSlice.slice (!yyb,i0,SOME(i-i0)))
+			open UserDeclarations Internal.StartStates
+ in (yybufpos := i; case yyk of 
+
+			(* Application actions *)
+
+  10 => let val yytext=yymktext() in addStr yytext; continue() end
+| 13 => let val yytext=yymktext() in addStr yytext; continue() end
+| 15 => let val yytext=yymktext() in addStr yytext; continue() end
+| 19 => let val yytext=yymktext() in addStr yytext; continue() end
+| 23 => let val yytext=yymktext() in addStr yytext; continue() end
+| 25 => let val yytext=yymktext() in addStr yytext; continue() end
+| 3 => let val yytext=yymktext() in addStr yytext; YYBEGIN STAG; continue() end
+| 32 => let val yytext=yymktext() in case Elems.endTag file (yytext, !yylineno, !yylineno)
+	     of NONE => continue()
+	      | (SOME tag) => tag
+	    (* end case *) end
+| 37 => (YYBEGIN COM1; continue())
+| 40 => (YYBEGIN COM2; continue())
+| 42 => (continue())
+| 44 => (continue())
+| 47 => (YYBEGIN COM1; continue())
+| 49 => (YYBEGIN INITIAL; continue())
+| 5 => let val yytext=yymktext() in addStr yytext;
+	    YYBEGIN INITIAL;
+	    case Elems.startTag file (getStr(), !yylineno, !yylineno)
+	     of NONE => continue()
+	      | (SOME tag) => tag
+	    (* end case *) end
+| 51 => (continue())
+| 53 => (continue())
+| 55 => (errorFn("bad comment syntax", !yylineno, !yylineno+1);
+	    YYBEGIN INITIAL;
+	    continue())
+| 61 => (
+(** At some point, we should support &#SPACE; and &#TAB; **)
+	    continue())
+| 67 => let val yytext=yymktext() in T.CHAR_REF(yytext, !yylineno, !yylineno) end
+| 7 => (addStr " "; continue())
+| 72 => let val yytext=yymktext() in T.ENTITY_REF(yytext, !yylineno, !yylineno) end
+| 74 => (continue())
+| 76 => (continue())
+| 79 => let val yytext=yymktext() in T.PCDATA(yytext, !yylineno, !yylineno) end
+| 81 => let val yytext=yymktext() in errorFn(concat[
+		"bogus character #\"", Char.toString(String.sub(yytext, 0)),
+		"\" in PCDATA\n"
+	      ], !yylineno, !yylineno+1);
+	    continue() end
+| _ => raise Internal.LexerError
+
+		) end )
+
+	val {fin,trans} = Unsafe.Vector.sub(Internal.tab, s)
+	val NewAcceptingLeaves = fin::AcceptingLeaves
+	in if l = !yybl then
+	     if trans = #trans(Vector.sub(Internal.tab,0))
+	       then action(l,NewAcceptingLeaves
+) else	    let val newchars= if !yydone then "" else yyinput 1024
+	    in if (String.size newchars)=0
+		  then (yydone := true;
+		        if (l=i0) then UserDeclarations.eof yyarg
+		                  else action(l,NewAcceptingLeaves))
+		  else (if i0=l then yyb := newchars
+		     else yyb := String.substring(!yyb,i0,l-i0)^newchars;
+		     yygone := !yygone+i0;
+		     yybl := String.size (!yyb);
+		     scan (s,AcceptingLeaves,l-i0,0))
+	    end
+	  else let val NewChar = Char.ord(Unsafe.CharVector.sub(!yyb,l))
+		val NewState = Char.ord(Unsafe.CharVector.sub(trans,NewChar))
+		in if NewState=0 then action(l,NewAcceptingLeaves)
+		else scan(NewState,NewAcceptingLeaves,l+1,i0)
+	end
+	end
+(*
+	val start= if String.substring(!yyb,!yybufpos-1,1)="\n"
+then !yybegin+1 else !yybegin
+*)
+	in scan(!yybegin (* start *),nil,!yybufpos,!yybufpos)
+    end
+in continue end
+  in lex
+  end
+end
diff --git a/HTML/html-lib.mlb b/HTML/html-lib.mlb
new file mode 100644
index 0000000..fc014d3
--- /dev/null
+++ b/HTML/html-lib.mlb
@@ -0,0 +1,299 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l5 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb $(SML_LIB)/basis/unsafe.mlb
+    end
+  basis l46 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+  basis l35 =
+    bas
+      (* $/ml-yacc-lib.cm ====> *) $(SML_LIB)/mlyacc-lib/mlyacc-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l5
+   in
+      structure gs_0 = General
+   end
+   local
+      open l5
+   in
+      structure gs_1 = String
+   end
+   local
+      open l5
+   in
+      structure gs_2 = List
+   end
+   local
+      open l5
+   in
+      structure gs_3 = Char
+   end
+   local
+      html-sig.sml
+   in
+      signature gs_4 = HTML
+   end
+   local
+      structure Char = gs_3
+      structure General = gs_0
+      signature HTML = gs_4
+      structure List = gs_2
+      structure String = gs_1
+      html.sml
+   in
+      structure gs_5 = HTML
+   end
+   local
+      structure HTML = gs_5
+      make-html.sml
+   in
+      structure gs_6 = MakeHTML
+   end
+   local
+      structure HTML = gs_5
+      html-defaults.sml
+   in
+      structure gs_7 = HTMLDefaults
+   end
+   local
+      html-error-sig.sml
+   in
+      signature gs_8 = HTML_ERROR
+   end
+   local
+      open l35
+   in
+      functor gs_9 = Join
+      functor gs_10 = JoinWithArg
+   end
+   local
+      open l35
+   in
+      structure gs_11 = LrParser
+   end
+   local
+      open l5
+   in
+      structure gs_12 = TextIO
+   end
+   local
+      open l46
+   in
+      structure gs_13 = Format
+   end
+   local
+      structure Format = gs_13
+      structure HTML = gs_5
+      signature HTML_ERROR = gs_8
+      structure List = gs_2
+      check-html-fn.sml
+   in
+      functor gs_14 = CheckHTMLFn
+   end
+   local
+      open l5
+   in
+      structure gs_15 = Unsafe
+   end
+   local
+      open l5
+   in
+      structure gs_16 = CharVectorSlice
+   end
+   local
+      open l5
+   in
+      structure gs_17 = Vector
+   end
+   local
+      open l5
+   in
+      structure gs_18 = Substring
+   end
+   local
+      open l46
+   in
+      functor gs_19 = HashTableFn
+   end
+   local
+      open l46
+   in
+      structure gs_20 = HashString
+   end
+   local
+      html-attr-vals.sml
+   in
+      structure gs_21 = HTMLAttrVals
+   end
+   local
+      structure HTML = gs_5
+      structure HTMLAttrVals = gs_21
+      html-attrs-sig.sml
+   in
+      signature gs_22 = HTML_ATTRS
+   end
+   local
+      open l35
+   in
+      signature gs_23 = ARG_LEXER
+      signature gs_24 = ARG_PARSER
+      signature gs_25 = LEXER
+      signature gs_26 = LR_PARSER
+      signature gs_27 = LR_TABLE
+      signature gs_28 = PARSER
+      signature gs_29 = PARSER_DATA
+      signature gs_30 = STREAM
+      signature gs_31 = TOKEN
+   end
+   local
+      signature ARG_LEXER = gs_23
+      signature ARG_PARSER = gs_24
+      structure HTMLAttrVals = gs_21
+      signature LEXER = gs_25
+      signature LR_PARSER = gs_26
+      signature LR_TABLE = gs_27
+      signature PARSER = gs_28
+      signature PARSER_DATA = gs_29
+      signature STREAM = gs_30
+      signature TOKEN = gs_31
+      html-gram.sig
+   in
+      signature gs_32 = HTML_LRVALS
+      signature gs_33 = HTML_TOKENS
+   end
+   local
+      structure Char = gs_3
+      signature HTML_ATTRS = gs_22
+      signature HTML_ERROR = gs_8
+      signature HTML_LRVALS = gs_32
+      signature HTML_TOKENS = gs_33
+      structure HashString = gs_20
+      functor HashTableFn = gs_19
+      structure List = gs_2
+      structure String = gs_1
+      structure Substring = gs_18
+      html-elements-fn.sml
+   in
+      functor gs_34 = HTMLElementsFn
+   end
+   local
+      structure Char = gs_3
+      structure CharVectorSlice = gs_16
+      functor HTMLElementsFn = gs_34
+      signature HTML_ATTRS = gs_22
+      signature HTML_ERROR = gs_8
+      signature HTML_LRVALS = gs_32
+      signature HTML_TOKENS = gs_33
+      structure List = gs_2
+      structure String = gs_1
+      structure Unsafe = gs_15
+      structure Vector = gs_17
+      html-lex.sml
+   in
+      functor gs_35 = HTMLLexFn
+   end
+   local
+      open l5
+   in
+      structure gs_36 = Array
+   end
+   local
+      signature ARG_LEXER = gs_23
+      signature ARG_PARSER = gs_24
+      structure Array = gs_36
+      structure Char = gs_3
+      structure General = gs_0
+      structure HTML = gs_5
+      structure HTMLAttrVals = gs_21
+      signature HTML_ATTRS = gs_22
+      signature HTML_LRVALS = gs_32
+      signature HTML_TOKENS = gs_33
+      signature LEXER = gs_25
+      signature LR_PARSER = gs_26
+      signature LR_TABLE = gs_27
+      structure List = gs_2
+      signature PARSER = gs_28
+      signature PARSER_DATA = gs_29
+      signature STREAM = gs_30
+      structure String = gs_1
+      signature TOKEN = gs_31
+      html-gram.sml
+   in
+      functor gs_37 = HTMLLrValsFn
+   end
+   local
+      open l5
+   in
+      structure gs_38 = Int
+   end
+   local
+      structure Array = gs_36
+      structure Char = gs_3
+      structure HTML = gs_5
+      structure HTMLAttrVals = gs_21
+      signature HTML_ATTRS = gs_22
+      signature HTML_ERROR = gs_8
+      structure HashString = gs_20
+      functor HashTableFn = gs_19
+      structure Int = gs_38
+      structure List = gs_2
+      structure String = gs_1
+      html-attrs-fn.sml
+   in
+      functor gs_39 = HTMLAttrsFn
+   end
+   local
+      functor CheckHTMLFn = gs_14
+      structure HTML = gs_5
+      functor HTMLAttrsFn = gs_39
+      functor HTMLLexFn = gs_35
+      functor HTMLLrValsFn = gs_37
+      signature HTML_ERROR = gs_8
+      functor Join = gs_9
+      functor JoinWithArg = gs_10
+      structure LrParser = gs_11
+      structure TextIO = gs_12
+      html-parser-fn.sml
+   in
+      functor gs_40 = HTMLParserFn
+   end
+   local
+      open l46
+   in
+      structure gs_41 = ListFormat
+   end
+   local
+      structure Format = gs_13
+      structure HTML = gs_5
+      structure Int = gs_38
+      structure List = gs_2
+      structure ListFormat = gs_41
+      pr-html.sml
+   in
+      structure gs_42 = PrHTML
+   end
+in
+   signature HTML = gs_4
+   structure HTML = gs_5
+   structure HTMLDefaults = gs_7
+   functor HTMLParserFn = gs_40
+   signature HTML_ERROR = gs_8
+   structure MakeHTML = gs_6
+   structure PrHTML = gs_42
+end
+end
+
+end
diff --git a/HTML4/html4-attr.l.sml b/HTML4/html4-attr.l.sml
index a48df45..bf0dd3e 100644
--- a/HTML4/html4-attr.l.sml
+++ b/HTML4/html4-attr.l.sml
@@ -58,7 +58,7 @@ Vector.fromList []
         (* start position of token -- can be updated via skip() *)
 	  val yystartPos = ref (yygetPos())
 	(* get one char of input *)
-	  fun yygetc strm = (case UTF8.getu ULexBuffer.getc strm
+	  fun yygetc strm = (case ULexBuffer.getu strm
                 of (SOME (0w10, s')) => 
 		     (AntlrStreamPos.markNewLine yysm (ULexBuffer.getpos strm);
 		      SOME (0w10, s'))
diff --git a/HTML4/html4-lib.cm b/HTML4/html4-lib.cm
index 68cdc5a..bac8d74 100644
--- a/HTML4/html4-lib.cm
+++ b/HTML4/html4-lib.cm
@@ -15,11 +15,10 @@ Library
 is
     $/basis.cm
     $/smlnj-lib.cm
+    $/pp-lib.cm
     $/ml-lpt-lib.cm
 
-    (* XXX IMO, the following should not be required to be able to
-    "see" the PrettyPrint structure. *)
-    $smlnj/compiler/current.cm
+    pp-init.sml
 
     html4.g : ml-antlr
     html4.l : ml-ulex
diff --git a/HTML4/html4-lib.mlb b/HTML4/html4-lib.mlb
new file mode 100644
index 0000000..8a3e0a6
--- /dev/null
+++ b/HTML4/html4-lib.mlb
@@ -0,0 +1,282 @@
+
+ann
+  "nonexhaustiveMatch ignore" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l8 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+  basis l23 =
+    bas
+      (* $/pp-lib.cm ====> *) $(SML_LIB)/smlnj-lib/PP/pp-lib.mlb
+    end
+  basis l64 =
+    bas
+      (* $/ml-lpt-lib.cm ====> *) $(SML_LIB)/mllpt-lib/mllpt-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = String
+   end
+   local
+      open l8
+   in
+      structure gs_1 = Atom
+   end
+   local
+      structure Atom = gs_1
+      structure String = gs_0
+      html4-utils.sml
+   in
+      structure gs_2 = HTML4Utils
+   end
+   local
+      open l4
+   in
+      structure gs_3 = IntInf
+   end
+   local
+      open l4
+   in
+      structure gs_4 = List
+   end
+   local
+      open l23
+   in
+      functor gs_5 = PPStreamFn
+   end
+   local
+      open l23
+   in
+      structure gs_6 = StringToken
+   end
+   local
+      open l23
+   in
+      signature gs_7 = PP_STREAM
+   end
+   local
+      open l4
+   in
+      structure gs_8 = StringCvt
+   end
+   local
+      structure List = gs_4
+      functor PPStreamFn = gs_5
+      signature PP_STREAM = gs_7
+      structure String = gs_0
+      structure StringCvt = gs_8
+      structure StringToken = gs_6
+      pp-init.sml
+   in
+      signature gs_9 = PRETTYPRINT
+      structure gs_10 = PrettyPrint
+   end
+   local
+      structure Atom = gs_1
+      structure IntInf = gs_3
+      html4.sig
+   in
+      signature gs_11 = HTML4
+   end
+   local
+      structure Atom = gs_1
+      signature HTML4 = gs_11
+      structure IntInf = gs_3
+      html4.sml
+   in
+      structure gs_12 = HTML4
+   end
+   local
+      structure Atom = gs_1
+      structure HTML4 = gs_12
+      structure HTML4Utils = gs_2
+      structure IntInf = gs_3
+      signature PRETTYPRINT = gs_9
+      structure PrettyPrint = gs_10
+      structure String = gs_0
+      html4-printer.sml
+   in
+      structure gs_13 = HTML4Printer
+   end
+   local
+      open l8
+   in
+      signature gs_14 = ORD_MAP
+   end
+   local
+      open l8
+   in
+      functor gs_15 = RedBlackMapFn
+   end
+   local
+      open l4
+   in
+      structure gs_16 = Substring
+   end
+   local
+      open l4
+   in
+      structure gs_17 = Char
+   end
+   local
+      open l64
+   in
+      structure gs_18 = AntlrStreamPos
+   end
+   local
+      open l4
+   in
+      structure gs_19 = TextIO
+   end
+   local
+      open l64
+   in
+      functor gs_20 = AntlrEBNF
+   end
+   local
+      open l64
+   in
+      functor gs_21 = AntlrErrHandler
+   end
+   local
+      open l64
+   in
+      signature gs_22 = ANTLR_LEXER
+   end
+   local
+      signature ANTLR_LEXER = gs_22
+      functor AntlrEBNF = gs_20
+      functor AntlrErrHandler = gs_21
+      structure Atom = gs_1
+      structure HTML4Utils = gs_2
+      structure IntInf = gs_3
+      structure String = gs_0
+      html4.g.sml
+   in
+      functor gs_23 = HTML4ParseFn
+      structure gs_24 = HTML4Tokens
+   end
+   local
+      signature ANTLR_LEXER = gs_22
+      functor AntlrEBNF = gs_20
+      functor AntlrErrHandler = gs_21
+      structure Atom = gs_1
+      structure String = gs_0
+      html4-attr.g.sml
+   in
+      functor gs_25 = HTML4AttrParseFn
+      structure gs_26 = HTML4AttrTokens
+   end
+   local
+      open l4
+   in
+      structure gs_27 = Vector
+   end
+   local
+      open l64
+   in
+      structure gs_28 = ULexBuffer
+   end
+   local
+      open l64
+   in
+      structure gs_29 = UTF8
+   end
+   local
+      structure AntlrStreamPos = gs_18
+      structure Atom = gs_1
+      functor HTML4AttrParseFn = gs_25
+      structure HTML4AttrTokens = gs_26
+      structure String = gs_0
+      structure Substring = gs_16
+      structure TextIO = gs_19
+      structure ULexBuffer = gs_28
+      structure UTF8 = gs_29
+      structure Vector = gs_27
+      html4-attr.l.sml
+   in
+      structure gs_30 = HTML4AttrLexer
+   end
+   local
+      structure AntlrStreamPos = gs_18
+      structure Atom = gs_1
+      structure Char = gs_17
+      structure HTML4AttrLexer = gs_30
+      functor HTML4AttrParseFn = gs_25
+      structure HTML4AttrTokens = gs_26
+      functor HTML4ParseFn = gs_23
+      structure HTML4Tokens = gs_24
+      structure HTML4Utils = gs_2
+      structure IntInf = gs_3
+      signature ORD_MAP = gs_14
+      functor RedBlackMapFn = gs_15
+      structure String = gs_0
+      structure Substring = gs_16
+      structure TextIO = gs_19
+      html4-token-utils.sml
+   in
+      structure gs_31 = HTML4TokenUtils
+   end
+   local
+      open l4
+   in
+      structure gs_32 = Option
+   end
+   local
+      structure AntlrStreamPos = gs_18
+      structure Atom = gs_1
+      structure HTML4TokenUtils = gs_31
+      structure IntInf = gs_3
+      structure List = gs_4
+      structure String = gs_0
+      structure Substring = gs_16
+      structure TextIO = gs_19
+      structure ULexBuffer = gs_28
+      structure UTF8 = gs_29
+      structure Vector = gs_27
+      html4.l.sml
+   in
+      structure gs_33 = HTML4Lexer
+   end
+   local
+      structure AntlrStreamPos = gs_18
+      structure Atom = gs_1
+      structure Char = gs_17
+      structure HTML4 = gs_12
+      structure HTML4Lexer = gs_33
+      functor HTML4ParseFn = gs_23
+      structure HTML4TokenUtils = gs_31
+      structure HTML4Tokens = gs_24
+      structure HTML4Utils = gs_2
+      structure Option = gs_32
+      structure String = gs_0
+      structure TextIO = gs_19
+      html4-parser.sml
+   in
+      structure gs_34 = HTML4Parser
+   end
+in
+   signature HTML4 = gs_11
+   structure HTML4 = gs_12
+   structure HTML4Parser = gs_34
+   structure HTML4Printer = gs_13
+   structure HTML4TokenUtils = gs_31
+   structure HTML4Tokens = gs_24
+   structure HTML4Utils = gs_2
+end
+end
+
+end
diff --git a/HTML4/html4.l.sml b/HTML4/html4.l.sml
index 03c06f2..8f795e1 100644
--- a/HTML4/html4.l.sml
+++ b/HTML4/html4.l.sml
@@ -76,7 +76,7 @@ Vector.fromList []
         (* start position of token -- can be updated via skip() *)
 	  val yystartPos = ref (yygetPos())
 	(* get one char of input *)
-	  fun yygetc strm = (case UTF8.getu ULexBuffer.getc strm
+	  fun yygetc strm = (case ULexBuffer.getu strm
                 of (SOME (0w10, s')) => 
 		     (AntlrStreamPos.markNewLine yysm (ULexBuffer.getpos strm);
 		      SOME (0w10, s'))
diff --git a/HTML4/pp-init.sml b/HTML4/pp-init.sml
new file mode 100644
index 0000000..ca97b62
--- /dev/null
+++ b/HTML4/pp-init.sml
@@ -0,0 +1,67 @@
+ (* pp-init.sml
+ *
+ * COPYRIGHT (c) 2003 The SML/NJ Fellowship
+ *
+ * An implementation of SML/NJ's PP interface.
+ *   - This is an (almost) literal copy of the original code in
+ *     smlnj-lib/PP/examples/old-pp.sml
+ *)
+
+
+signature PRETTYPRINT =
+sig
+  include PP_STREAM
+  val with_pp : device -> (stream -> unit) -> unit
+  val pp_to_string : int -> (stream -> 'a -> unit) -> 'a -> string
+end
+
+structure PrettyPrint : PRETTYPRINT =
+struct
+
+  type ppconsumer = {
+      consumer : string -> unit,
+      linewidth : int,
+      flush : unit -> unit
+    }
+
+  structure Dev =
+  struct
+    type device = ppconsumer
+    type style = unit
+    fun sameStyle _ = true
+    fun pushStyle _ = ()
+    fun popStyle _ = ()
+    fun defaultStyle _ = ()
+    fun depth _ = NONE
+    fun lineWidth {consumer, linewidth, flush} = SOME linewidth
+    fun textWidth _ = NONE
+    fun space ({consumer, linewidth, flush}, n) =
+          consumer (StringCvt.padLeft #" " n "")
+    fun newline {consumer, linewidth, flush} = consumer "\n"
+    fun string ({consumer, linewidth, flush}, s) = consumer s
+    fun char ({consumer, linewidth, flush}, c) = consumer(str c)
+    fun flush {consumer, linewidth, flush} = flush()
+  end
+
+  structure PP = PPStreamFn
+      (structure Token = StringToken
+       structure Device = Dev)
+
+  open PP
+
+  fun with_pp device (f: PP.stream -> unit) =
+      let val ppstrm = PP.openStream device
+       in f ppstrm;
+          PP.closeStream ppstrm
+      end
+
+  fun pp_to_string wid ppFn obj =
+      let val l = ref ([] : string list)
+          fun attach s = l := s :: !l
+          val device = {consumer = attach, linewidth = wid, flush = fn()=>()}
+       in with_pp device
+            (fn ppStrm => ppFn ppStrm obj);
+          String.concat(List.rev(!l))
+      end
+
+end (* structure PrettyPrint *)
diff --git a/HashCons/hash-cons-lib.mlb b/HashCons/hash-cons-lib.mlb
new file mode 100644
index 0000000..2364e93
--- /dev/null
+++ b/HashCons/hash-cons-lib.mlb
@@ -0,0 +1,144 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l8 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l4 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = PrimeSizes
+   end
+   local
+      open l8
+   in
+      structure gs_1 = Array
+   end
+   local
+      open l8
+   in
+      structure gs_2 = Word
+   end
+   local
+      open l8
+   in
+      structure gs_3 = List
+   end
+   local
+      hash-cons-sig.sml
+   in
+      signature gs_4 = HASH_CONS
+   end
+   local
+      structure Array = gs_1
+      signature HASH_CONS = gs_4
+      structure List = gs_3
+      structure PrimeSizes = gs_0
+      structure Word = gs_2
+      hash-cons.sml
+   in
+      structure gs_5 = HashCons
+   end
+   local
+      structure HashCons = gs_5
+      hash-cons-set-sig.sml
+   in
+      signature gs_6 = HASH_CONS_SET
+   end
+   local
+      structure HashCons = gs_5
+      hash-cons-map-sig.sml
+   in
+      signature gs_7 = HASH_CONS_MAP
+   end
+   local
+      open l4
+   in
+      structure gs_8 = WordRedBlackMap
+   end
+   local
+      signature HASH_CONS_SET = gs_6
+      structure HashCons = gs_5
+      structure List = gs_3
+      structure WordRedBlackMap = gs_8
+      hash-cons-set.sml
+   in
+      structure gs_9 = HashConsSet
+   end
+   local
+      open l8
+   in
+      structure gs_10 = Option
+   end
+   local
+      signature HASH_CONS_MAP = gs_7
+      structure HashCons = gs_5
+      structure Option = gs_10
+      structure WordRedBlackMap = gs_8
+      hash-cons-map.sml
+   in
+      structure gs_11 = HashConsMap
+   end
+   local
+      open l4
+   in
+      structure gs_12 = HashString
+   end
+   local
+      open l4
+   in
+      signature gs_13 = HASH_KEY
+   end
+   local
+      signature HASH_KEY = gs_13
+      structure HashCons = gs_5
+      hash-cons-ground-fn.sml
+   in
+      functor gs_14 = HashConsGroundFn
+   end
+   local
+      functor HashConsGroundFn = gs_14
+      structure HashString = gs_12
+      hash-cons-string.sml
+   in
+      structure gs_15 = HashConsString
+   end
+   local
+      open l4
+   in
+      structure gs_16 = Atom
+   end
+   local
+      structure Atom = gs_16
+      functor HashConsGroundFn = gs_14
+      hash-cons-atom.sml
+   in
+      structure gs_17 = HashConsAtom
+   end
+in
+   signature HASH_CONS = gs_4
+   signature HASH_CONS_MAP = gs_7
+   signature HASH_CONS_SET = gs_6
+   structure HashCons = gs_5
+   structure HashConsAtom = gs_17
+   functor HashConsGroundFn = gs_14
+   structure HashConsMap = gs_11
+   structure HashConsSet = gs_9
+   structure HashConsString = gs_15
+end
+end
+
+end
diff --git a/INet/inet-lib.mlb b/INet/inet-lib.mlb
new file mode 100644
index 0000000..ad7f940
--- /dev/null
+++ b/INet/inet-lib.mlb
@@ -0,0 +1,144 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l31 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = StringCvt
+   end
+   local
+      open l4
+   in
+      structure gs_1 = Word8Array
+   end
+   local
+      open l4
+   in
+      structure gs_2 = Word8Vector
+   end
+   local
+      open l4
+   in
+      structure gs_3 = NetHostDB
+   end
+   local
+      open l4
+   in
+      structure gs_4 = Socket
+   end
+   local
+      open l4
+   in
+      structure gs_5 = INetSock
+   end
+   local
+      structure INetSock = gs_5
+      structure NetHostDB = gs_3
+      structure Socket = gs_4
+      structure StringCvt = gs_0
+      structure Word8Array = gs_1
+      structure Word8Vector = gs_2
+      sock-util-sig.sml
+   in
+      signature gs_6 = SOCK_UTIL
+   end
+   local
+      open l4
+   in
+      structure gs_7 = UnixSock
+   end
+   local
+      open l31
+   in
+      structure gs_8 = ParserComb
+   end
+   local
+      open l4
+   in
+      structure gs_9 = Char
+   end
+   local
+      open l4
+   in
+      structure gs_10 = Word8VectorSlice
+   end
+   local
+      open l4
+   in
+      structure gs_11 = Word8ArraySlice
+   end
+   local
+      open l4
+   in
+      structure gs_12 = NetServDB
+   end
+   local
+      open l4
+   in
+      structure gs_13 = Byte
+   end
+   local
+      open l4
+   in
+      structure gs_14 = Int
+   end
+   local
+      open l4
+   in
+      structure gs_15 = OS
+   end
+   local
+      structure Byte = gs_13
+      structure Char = gs_9
+      structure INetSock = gs_5
+      structure Int = gs_14
+      structure NetHostDB = gs_3
+      structure NetServDB = gs_12
+      structure OS = gs_15
+      structure ParserComb = gs_8
+      signature SOCK_UTIL = gs_6
+      structure Socket = gs_4
+      structure StringCvt = gs_0
+      structure Word8Array = gs_1
+      structure Word8ArraySlice = gs_11
+      structure Word8Vector = gs_2
+      structure Word8VectorSlice = gs_10
+      sock-util.sml
+   in
+      structure gs_16 = SockUtil
+   end
+   local
+      signature SOCK_UTIL = gs_6
+      structure SockUtil = gs_16
+      structure Socket = gs_4
+      structure UnixSock = gs_7
+      unix-sock-util.sml
+   in
+      signature gs_17 = UNIX_SOCK_UTIL
+      structure gs_18 = UnixSockUtil
+   end
+in
+   signature SOCK_UTIL = gs_6
+   structure SockUtil = gs_16
+   signature UNIX_SOCK_UTIL = gs_17
+   structure UnixSockUtil = gs_18
+end
+end
+
+end
diff --git a/JSON/json-lib.mlb b/JSON/json-lib.mlb
index 477d0bf..d2650b6 100644
--- a/JSON/json-lib.mlb
+++ b/JSON/json-lib.mlb
@@ -1,47 +1,176 @@
-(* json-lib.mlb
- *
- * COPYRIGHT (c) 2008 The Fellowship of SML/NJ (http://www.smlnj.org)
- * All rights reserved.
- *
- * An MLB file for the JSON library, so that it can be used by MLton programs.
- *
- * TODO:
- *	This is not complete, since MLton does not have the ml-lpt-lib yet.
- *)
-
-local
-
-  $(SML_LIB)/basis/basis.mlb
-  $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
-(* I don't know what the path to this library will be
-  ??/ml-lpt-lib/ml-lpt-lib.mlb
-*)
-
-  ann
-    "nonexhaustiveMatch warn" "redundantMatch warn"
-    "sequenceNonUnit ignore"
-    "warnUnused false" "forceUsed"
-  in
-
-    json-tokens.sml
-    json.lex.sml
-    json.sml
-    json-stream-parser.sml
-    json-parser.sml
-    json-stream-printer.sml
-    json-printer.sml
-
-  end
 
+ann
+  "nonexhaustiveMatch ignore" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
 in
 
-(* DOM-style API (tree based) *)
-  structure JSON
-  structure JSONParser
-  structure JSONPrinter
-
-(* SAX-style API (event based) *)
-  structure JSONStreamParser
-  structure JSONStreamPrinter
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l65 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+  basis l8 =
+    bas
+      (* $/ml-lpt-lib.cm ====> *) $(SML_LIB)/mllpt-lib/mllpt-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = IntInf
+   end
+   local
+      open l8
+   in
+      structure gs_1 = AntlrStreamPos
+   end
+   local
+      open l4
+   in
+      structure gs_2 = TextIO
+   end
+   local
+      open l4
+   in
+      structure gs_3 = String
+   end
+   local
+      open l8
+   in
+      structure gs_4 = UTF8
+   end
+   local
+      open l4
+   in
+      structure gs_5 = Real
+   end
+   local
+      open l4
+   in
+      structure gs_6 = List
+   end
+   local
+      structure IntInf = gs_0
+      structure List = gs_6
+      structure Real = gs_5
+      structure String = gs_3
+      structure UTF8 = gs_4
+      json-tokens.sml
+   in
+      structure gs_7 = JSONTokens
+   end
+   local
+      open l4
+   in
+      structure gs_8 = StringCvt
+   end
+   local
+      open l4
+   in
+      structure gs_9 = LargeReal
+   end
+   local
+      open l4
+   in
+      structure gs_10 = Substring
+   end
+   local
+      open l4
+   in
+      structure gs_11 = Vector
+   end
+   local
+      open l8
+   in
+      structure gs_12 = ULexBuffer
+   end
+   local
+      open l4
+   in
+      structure gs_13 = Word
+   end
+   local
+      structure AntlrStreamPos = gs_1
+      structure IntInf = gs_0
+      structure JSONTokens = gs_7
+      structure LargeReal = gs_9
+      structure List = gs_6
+      structure String = gs_3
+      structure StringCvt = gs_8
+      structure Substring = gs_10
+      structure TextIO = gs_2
+      structure ULexBuffer = gs_12
+      structure UTF8 = gs_4
+      structure Vector = gs_11
+      structure Word = gs_13
+      json.lex.sml
+   in
+      structure gs_14 = JSONLexer
+   end
+   local
+      structure AntlrStreamPos = gs_1
+      structure IntInf = gs_0
+      structure JSONLexer = gs_14
+      structure JSONTokens = gs_7
+      structure TextIO = gs_2
+      json-stream-parser.sml
+   in
+      structure gs_15 = JSONStreamParser
+   end
+   local
+      structure IntInf = gs_0
+      json.sml
+   in
+      structure gs_16 = JSON
+   end
+   local
+      structure AntlrStreamPos = gs_1
+      structure JSON = gs_16
+      structure JSONLexer = gs_14
+      structure JSONTokens = gs_7
+      structure List = gs_6
+      structure TextIO = gs_2
+      json-parser.sml
+   in
+      structure gs_17 = JSONParser
+   end
+   local
+      open l65
+   in
+      structure gs_18 = Format
+   end
+   local
+      structure Format = gs_18
+      structure IntInf = gs_0
+      structure String = gs_3
+      structure TextIO = gs_2
+      json-stream-printer.sml
+   in
+      structure gs_19 = JSONStreamPrinter
+   end
+   local
+      structure JSON = gs_16
+      structure JSONStreamPrinter = gs_19
+      structure List = gs_6
+      structure TextIO = gs_2
+      json-printer.sml
+   in
+      structure gs_20 = JSONPrinter
+   end
+in
+   structure JSON = gs_16
+   structure JSONParser = gs_17
+   structure JSONPrinter = gs_20
+   structure JSONStreamParser = gs_15
+   structure JSONStreamPrinter = gs_19
+end
+end
 
 end
diff --git a/JSON/json.lex.sml b/JSON/json.lex.sml
index 87e5f17..0e85457 100644
--- a/JSON/json.lex.sml
+++ b/JSON/json.lex.sml
@@ -70,7 +70,7 @@ Vector.fromList []
         (* start position of token -- can be updated via skip() *)
 	  val yystartPos = ref (yygetPos())
 	(* get one char of input *)
-	  fun yygetc strm = (case UTF8.getu ULexBuffer.getc strm
+	  fun yygetc strm = (case ULexBuffer.getu strm
                 of (SOME (0w10, s')) => 
 		     (AntlrStreamPos.markNewLine yysm (ULexBuffer.getpos strm);
 		      SOME (0w10, s'))
diff --git a/PP/pp-lib.mlb b/PP/pp-lib.mlb
new file mode 100644
index 0000000..5961278
--- /dev/null
+++ b/PP/pp-lib.mlb
@@ -0,0 +1,212 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l26 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+  basis l83 =
+    bas
+      (* $/html-lib.cm ====> *) $(SML_LIB)/smlnj-lib/HTML/html-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = TextIO
+   end
+   local
+      src/pp-stream-sig.sml
+   in
+      signature gs_1 = PP_STREAM
+   end
+   local
+      signature PP_STREAM = gs_1
+      structure TextIO = gs_0
+      src/pp-debug-fn.sml
+   in
+      functor gs_2 = PPDebugFn
+   end
+   local
+      src/pp-device-sig.sml
+   in
+      signature gs_3 = PP_DEVICE
+   end
+   local
+      open l4
+   in
+      structure gs_4 = StringCvt
+   end
+   local
+      signature PP_DEVICE = gs_3
+      structure StringCvt = gs_4
+      structure TextIO = gs_0
+      devices/simple-textio-dev.sml
+   in
+      structure gs_5 = SimpleTextIODev
+   end
+   local
+      open l26
+   in
+      structure gs_6 = Format
+   end
+   local
+      open l26
+   in
+      structure gs_7 = Queue
+   end
+   local
+      open l26
+   in
+      structure gs_8 = ListFormat
+   end
+   local
+      open l4
+   in
+      structure gs_9 = String
+   end
+   local
+      open l4
+   in
+      structure gs_10 = Option
+   end
+   local
+      open l4
+   in
+      structure gs_11 = Int
+   end
+   local
+      src/pp-token-sig.sml
+   in
+      signature gs_12 = PP_TOKEN
+   end
+   local
+      structure Format = gs_6
+      structure Int = gs_11
+      structure ListFormat = gs_8
+      structure Option = gs_10
+      signature PP_DEVICE = gs_3
+      signature PP_STREAM = gs_1
+      signature PP_TOKEN = gs_12
+      structure Queue = gs_7
+      structure String = gs_9
+      structure TextIO = gs_0
+      src/pp-stream-fn.sml
+   in
+      functor gs_13 = PPStreamFn
+   end
+   local
+      signature PP_STREAM = gs_1
+      src/pp-desc-sig.sml
+   in
+      signature gs_14 = PP_DESC
+   end
+   local
+      signature PP_DESC = gs_14
+      signature PP_STREAM = gs_1
+      src/pp-desc-fn.sml
+   in
+      functor gs_15 = PPDescFn
+   end
+   local
+      signature PP_TOKEN = gs_12
+      structure String = gs_9
+      devices/string-token.sml
+   in
+      structure gs_16 = StringToken
+   end
+   local
+      functor PPStreamFn = gs_13
+      signature PP_STREAM = gs_1
+      structure SimpleTextIODev = gs_5
+      structure StringToken = gs_16
+      structure TextIO = gs_0
+      devices/textio-pp.sml
+   in
+      structure gs_17 = TextIOPP
+   end
+   local
+      open l26
+   in
+      structure gs_18 = ANSITerm
+   end
+   local
+      open l4
+   in
+      structure gs_19 = TextPrimIO
+   end
+   local
+      open l4
+   in
+      structure gs_20 = OS
+   end
+   local
+      structure ANSITerm = gs_18
+      structure OS = gs_20
+      signature PP_DEVICE = gs_3
+      structure StringCvt = gs_4
+      structure TextIO = gs_0
+      structure TextPrimIO = gs_19
+      devices/ansi-term-dev.sml
+   in
+      structure gs_21 = ANSITermDev
+   end
+   local
+      open l4
+   in
+      structure gs_22 = List
+   end
+   local
+      open l83
+   in
+      structure gs_23 = HTML
+   end
+   local
+      structure HTML = gs_23
+      structure List = gs_22
+      signature PP_DEVICE = gs_3
+      structure String = gs_9
+      devices/html-dev.sml
+   in
+      structure gs_24 = HTMLDev
+   end
+   local
+      structure ANSITermDev = gs_21
+      functor PPStreamFn = gs_13
+      signature PP_STREAM = gs_1
+      signature PP_TOKEN = gs_12
+      structure String = gs_9
+      structure TextIO = gs_0
+      devices/ansi-term-pp.sml
+   in
+      structure gs_25 = ANSITermPP
+   end
+in
+   structure ANSITermDev = gs_21
+   structure ANSITermPP = gs_25
+   structure HTMLDev = gs_24
+   functor PPDebugFn = gs_2
+   functor PPDescFn = gs_15
+   functor PPStreamFn = gs_13
+   signature PP_DESC = gs_14
+   signature PP_DEVICE = gs_3
+   signature PP_STREAM = gs_1
+   signature PP_TOKEN = gs_12
+   structure SimpleTextIODev = gs_5
+   structure StringToken = gs_16
+   structure TextIOPP = gs_17
+end
+end
+
+end
diff --git a/README.mlton b/README.mlton
new file mode 100644
index 0000000..befffe1
--- /dev/null
+++ b/README.mlton
@@ -0,0 +1,27 @@
+The following changes were made to the SML/NJ Library, in addition to
+deriving the `.mlb` files from the `.cm` files:
+
+* `HTML/html-attrs-fn.sml` (modified): Rewrote use of or-patterns.
+* `HTML/html-elements-fn.sml` (modified): Rewrote use of or-patterns.
+* `HTML4/pp-init.sml` (added): Implements `structure PrettyPrint` using the SML/NJ PP Library.  This implementation is taken from the SML/NJ compiler source, since the SML/NJ HTML4 Library used the `structure PrettyPrint` provided by the SML/NJ compiler itself.
+* `Util/base64.sml` (modified): Rewrote use of `Unsafe.CharVector.create` and `Unsafe.CharVector.update`; MLton assumes that vectors are immutable.
+* `Util/bit-array.sml` (modified): The computation of the `maxLen` is given by:
++
+[source,sml]
+----
+val maxLen = 8*Word8Array.maxLen
+----
++
+This is fine in SML/NJ where `Word8Array.maxLen` is 16777215, but in MLton, `Word8Array.maxLen` is equal to `valOf(Int.maxInt)`, so the computation overflows. To accommodate both SML/NJ and MLton, the computation is replaced by
++
+[source,sml]
+----
+val maxLen = (8*Word8Array.maxLen) handle Overflow => Word8Array.maxLen
+----
+
+* `Util/engine.mlton.sml` (added, not exported): Implements `structure Engine`, providing time-limited, resumable computations using <:MLtonThread:>, <:MLtonSignal:>, and <:MLtonItimer:>.
+* `Util/graph-scc-fn.sml` (modified): Rewrote use of `where` structure specification.
+* `Util/redblack-map-fn.sml` (modified): Rewrote use of `where` structure specification.
+* `Util/redblack-set-fn.sml` (modified): Rewrote use of `where` structure specification.
+* `Util/time-limit.mlb` (added): Exports `structure TimeLimit`, which is _not_ exported by `smlnj-lib.mlb`.  Since MLton is very conservative in the presence of threads and signals, program performance may be adversely affected by unnecessarily including `structure TimeLimit`.
+* `Util/time-limit.mlton.sml` (added): Implements `structure TimeLimit` using `structure Engine`.  The SML/NJ implementation of `structure TimeLimit` uses SML/NJ's first-class continuations, signals, and interval timer.
diff --git a/Reactive/reactive-lib.mlb b/Reactive/reactive-lib.mlb
new file mode 100644
index 0000000..3f13994
--- /dev/null
+++ b/Reactive/reactive-lib.mlb
@@ -0,0 +1,71 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l14 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l4 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = Atom
+   end
+   local
+      structure Atom = gs_0
+      reactive-sig.sml
+   in
+      signature gs_1 = REACTIVE
+   end
+   local
+      open l4
+   in
+      structure gs_2 = AtomBinaryMap
+   end
+   local
+      open l14
+   in
+      structure gs_3 = List
+   end
+   local
+      structure Atom = gs_0
+      instruction.sml
+   in
+      structure gs_4 = Instruction
+   end
+   local
+      structure Atom = gs_0
+      structure Instruction = gs_4
+      structure List = gs_3
+      machine.sml
+   in
+      structure gs_5 = Machine
+   end
+   local
+      structure AtomBinaryMap = gs_2
+      structure Instruction = gs_4
+      structure List = gs_3
+      structure Machine = gs_5
+      signature REACTIVE = gs_1
+      reactive.sml
+   in
+      structure gs_6 = Reactive
+   end
+in
+   signature REACTIVE = gs_1
+   structure Reactive = gs_6
+end
+end
+
+end
diff --git a/RegExp/regexp-lib.mlb b/RegExp/regexp-lib.mlb
new file mode 100644
index 0000000..0dae724
--- /dev/null
+++ b/RegExp/regexp-lib.mlb
@@ -0,0 +1,235 @@
+
+ann
+  "nonexhaustiveMatch ignore" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l16 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = StringCvt
+   end
+   local
+      open l4
+   in
+      structure gs_1 = List
+   end
+   local
+      structure List = gs_1
+      Glue/match-tree.sml
+   in
+      signature gs_2 = MATCH_TREE
+      structure gs_3 = MatchTree
+   end
+   local
+      open l16
+   in
+      functor gs_4 = ListSetFn
+   end
+   local
+      open l4
+   in
+      structure gs_5 = Char
+   end
+   local
+      open l16
+   in
+      signature gs_6 = ORD_SET
+   end
+   local
+      signature ORD_SET = gs_6
+      FrontEnd/syntax-sig.sml
+   in
+      signature gs_7 = REGEXP_SYNTAX
+   end
+   local
+      structure Char = gs_5
+      structure List = gs_1
+      functor ListSetFn = gs_4
+      signature REGEXP_SYNTAX = gs_7
+      FrontEnd/syntax.sml
+   in
+      structure gs_8 = RegExpSyntax
+   end
+   local
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      structure RegExpSyntax = gs_8
+      structure StringCvt = gs_0
+      BackEnd/engine-sig.sml
+   in
+      signature gs_9 = REGEXP_ENGINE
+   end
+   local
+      open l4
+   in
+      structure gs_10 = Array
+   end
+   local
+      open l4
+   in
+      structure gs_11 = Vector
+   end
+   local
+      open l4
+   in
+      structure gs_12 = Int
+   end
+   local
+      structure Array = gs_10
+      structure Char = gs_5
+      structure Int = gs_12
+      structure List = gs_1
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      signature REGEXP_ENGINE = gs_9
+      structure RegExpSyntax = gs_8
+      structure StringCvt = gs_0
+      structure Vector = gs_11
+      BackEnd/thompson-engine.sml
+   in
+      structure gs_13 = ThompsonEngine
+   end
+   local
+      open l16
+   in
+      functor gs_14 = ListMapFn
+   end
+   local
+      open l4
+   in
+      structure gs_15 = Array2
+   end
+   local
+      open l4
+   in
+      structure gs_16 = TextIO
+   end
+   local
+      open l4
+   in
+      structure gs_17 = ListPair
+   end
+   local
+      structure Array = gs_10
+      structure Array2 = gs_15
+      structure Char = gs_5
+      structure Int = gs_12
+      structure List = gs_1
+      functor ListMapFn = gs_14
+      structure ListPair = gs_17
+      functor ListSetFn = gs_4
+      signature ORD_SET = gs_6
+      structure RegExpSyntax = gs_8
+      structure TextIO = gs_16
+      BackEnd/fsm.sml
+   in
+      signature gs_18 = DFA
+      structure gs_19 = Dfa
+      signature gs_20 = NFA
+      structure gs_21 = Nfa
+   end
+   local
+      signature DFA = gs_18
+      structure Dfa = gs_19
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      signature NFA = gs_20
+      structure Nfa = gs_21
+      signature REGEXP_ENGINE = gs_9
+      structure RegExpSyntax = gs_8
+      structure Vector = gs_11
+      BackEnd/dfa-engine.sml
+   in
+      structure gs_22 = DfaEngine
+   end
+   local
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      structure StringCvt = gs_0
+      Glue/regexp-sig.sml
+   in
+      signature gs_23 = REGEXP
+   end
+   local
+      structure RegExpSyntax = gs_8
+      structure StringCvt = gs_0
+      FrontEnd/parser-sig.sml
+   in
+      signature gs_24 = REGEXP_PARSER
+   end
+   local
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      signature REGEXP = gs_23
+      signature REGEXP_ENGINE = gs_9
+      signature REGEXP_PARSER = gs_24
+      structure RegExpSyntax = gs_8
+      structure StringCvt = gs_0
+      Glue/regexp-fn.sml
+   in
+      functor gs_25 = RegExpFn
+   end
+   local
+      open l4
+   in
+      structure gs_26 = Word8
+   end
+   local
+      structure Char = gs_5
+      structure Int = gs_12
+      structure List = gs_1
+      signature REGEXP_PARSER = gs_24
+      structure RegExpSyntax = gs_8
+      structure StringCvt = gs_0
+      structure Word8 = gs_26
+      FrontEnd/awk-syntax.sml
+   in
+      structure gs_27 = AwkSyntax
+   end
+   local
+      open l4
+   in
+      structure gs_28 = Option
+   end
+   local
+      structure List = gs_1
+      signature MATCH_TREE = gs_2
+      structure MatchTree = gs_3
+      structure Option = gs_28
+      signature REGEXP_ENGINE = gs_9
+      structure RegExpSyntax = gs_8
+      BackEnd/bt-engine.sml
+   in
+      structure gs_29 = BackTrackEngine
+   end
+in
+   structure AwkSyntax = gs_27
+   structure BackTrackEngine = gs_29
+   structure DfaEngine = gs_22
+   signature MATCH_TREE = gs_2
+   structure MatchTree = gs_3
+   signature REGEXP = gs_23
+   signature REGEXP_ENGINE = gs_9
+   signature REGEXP_PARSER = gs_24
+   signature REGEXP_SYNTAX = gs_7
+   functor RegExpFn = gs_25
+   structure RegExpSyntax = gs_8
+   structure ThompsonEngine = gs_13
+end
+end
+
+end
diff --git a/SExp/sexp-lib.mlb b/SExp/sexp-lib.mlb
index d7287e5..b56607e 100644
--- a/SExp/sexp-lib.mlb
+++ b/SExp/sexp-lib.mlb
@@ -1,51 +1,171 @@
-(* sexp-lib.mlb
- *
- * COPYRIGHT (c) 2011 The Fellowship of SML/NJ (http://www.smlnj.org)
- * All rights reserved.
- *
- * Author: Damon Wang (with modifications by John Reppy)
- *
- * An MLB file for the JSON library, so that it can be used by MLton programs.
- *
- * TODO:
- *	This is not complete, since MLton does not have the ml-lpt-lib yet.
- *)
-
-local
-
-  $(SML_LIB)/basis/basis.mlb
-  $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
-(* I don't know what the path to this library will be
-  ??/ml-lpt-lib/ml-lpt-lib.mlb
-*)
-
-  ann
-    "nonexhaustiveMatch warn" "redundantMatch warn"
-    "sequenceNonUnit ignore"
-    "warnUnused false" "forceUsed"
-  in
-
-    sexp-tokens.sml
-    sexp.lex.sml
-    sexp.sml
-(*    sexp-stream-parser.sml *)
-    sexp-parser.sml
-(*    sexp-stream-printer.sml *)
-    sexp-printer.sml
-
-  end
 
+ann
+  "nonexhaustiveMatch ignore" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
 in
 
-(* DOM-style API (tree based) *)
-  structure SExp
-  structure SExpParser
-  structure SExpPrinter
-
-(* SAX-style API (event based) *)
-(*
-  structure SExpStreamParser
-  structure SExpStreamPrinter
-*)
+local
+  basis l8 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+  basis l4 =
+    bas
+      (* $/smlnj-lib.cm ====> *) $(SML_LIB)/smlnj-lib/Util/smlnj-lib.mlb
+    end
+  basis l38 =
+    bas
+      (* $/ml-lpt-lib.cm ====> *) $(SML_LIB)/mllpt-lib/mllpt-lib.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = Format
+   end
+   local
+      open l8
+   in
+      structure gs_1 = TextIO
+   end
+   local
+      open l8
+   in
+      structure gs_2 = String
+   end
+   local
+      open l8
+   in
+      structure gs_3 = List
+   end
+   local
+      open l4
+   in
+      structure gs_4 = Atom
+   end
+   local
+      open l8
+   in
+      structure gs_5 = IntInf
+   end
+   local
+      open l8
+   in
+      structure gs_6 = ListPair
+   end
+   local
+      open l8
+   in
+      structure gs_7 = Real
+   end
+   local
+      structure Atom = gs_4
+      structure IntInf = gs_5
+      structure ListPair = gs_6
+      structure Real = gs_7
+      sexp.sml
+   in
+      structure gs_8 = SExp
+   end
+   local
+      structure Atom = gs_4
+      structure Format = gs_0
+      structure List = gs_3
+      structure SExp = gs_8
+      structure String = gs_2
+      structure TextIO = gs_1
+      sexp-printer.sml
+   in
+      structure gs_9 = SExpPrinter
+   end
+   local
+      open l38
+   in
+      structure gs_10 = AntlrStreamPos
+   end
+   local
+      open l38
+   in
+      structure gs_11 = UTF8
+   end
+   local
+      structure IntInf = gs_5
+      structure List = gs_3
+      structure Real = gs_7
+      structure String = gs_2
+      structure UTF8 = gs_11
+      sexp-tokens.sml
+   in
+      structure gs_12 = SExpTokens
+   end
+   local
+      open l8
+   in
+      structure gs_13 = StringCvt
+   end
+   local
+      open l8
+   in
+      structure gs_14 = LargeReal
+   end
+   local
+      open l8
+   in
+      structure gs_15 = Substring
+   end
+   local
+      open l8
+   in
+      structure gs_16 = Vector
+   end
+   local
+      open l38
+   in
+      structure gs_17 = ULexBuffer
+   end
+   local
+      open l8
+   in
+      structure gs_18 = Word
+   end
+   local
+      structure AntlrStreamPos = gs_10
+      structure IntInf = gs_5
+      structure LargeReal = gs_14
+      structure List = gs_3
+      structure SExpTokens = gs_12
+      structure String = gs_2
+      structure StringCvt = gs_13
+      structure Substring = gs_15
+      structure TextIO = gs_1
+      structure ULexBuffer = gs_17
+      structure UTF8 = gs_11
+      structure Vector = gs_16
+      structure Word = gs_18
+      sexp.lex.sml
+   in
+      structure gs_19 = SExpLexer
+   end
+   local
+      structure AntlrStreamPos = gs_10
+      structure Atom = gs_4
+      structure List = gs_3
+      structure SExp = gs_8
+      structure SExpLexer = gs_19
+      structure SExpTokens = gs_12
+      structure TextIO = gs_1
+      sexp-parser.sml
+   in
+      structure gs_20 = SExpParser
+   end
+in
+   structure SExp = gs_8
+   structure SExpParser = gs_20
+   structure SExpPrinter = gs_9
+end
+end
 
 end
diff --git a/SExp/sexp.lex.sml b/SExp/sexp.lex.sml
index 995ae5e..623beb8 100644
--- a/SExp/sexp.lex.sml
+++ b/SExp/sexp.lex.sml
@@ -70,7 +70,7 @@ Vector.fromList []
         (* start position of token -- can be updated via skip() *)
 	  val yystartPos = ref (yygetPos())
 	(* get one char of input *)
-	  fun yygetc strm = (case UTF8.getu ULexBuffer.getc strm
+	  fun yygetc strm = (case ULexBuffer.getu strm
                 of (SOME (0w10, s')) => 
 		     (AntlrStreamPos.markNewLine yysm (ULexBuffer.getpos strm);
 		      SOME (0w10, s'))
diff --git a/Unix/unix-lib.mlb b/Unix/unix-lib.mlb
new file mode 100644
index 0000000..ebceb6d
--- /dev/null
+++ b/Unix/unix-lib.mlb
@@ -0,0 +1,45 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = Substring
+   end
+   local
+      open l4
+   in
+      structure gs_1 = Posix
+   end
+   local
+      unix-env-sig.sml
+   in
+      signature gs_2 = UNIX_ENV
+   end
+   local
+      structure Posix = gs_1
+      structure Substring = gs_0
+      signature UNIX_ENV = gs_2
+      unix-env.sml
+   in
+      structure gs_3 = UnixEnv
+   end
+in
+   signature UNIX_ENV = gs_2
+   structure UnixEnv = gs_3
+end
+end
+
+end
diff --git a/Util/base64.sml b/Util/base64.sml
index 2432737..8e989c8 100644
--- a/Util/base64.sml
+++ b/Util/base64.sml
@@ -11,9 +11,11 @@
 structure Base64 : BASE64 =
   struct
 
+    structure CA = CharArray
     structure W8 = Word8
     structure W8V = Word8Vector
     structure W8A = Word8Array
+    structure UCA = Unsafe.CharArray
     structure UCV = Unsafe.CharVector
     structure UW8V = Unsafe.Word8Vector
 
@@ -59,16 +61,16 @@ structure Base64 : BASE64 =
     local
       fun encode64 (vec, start, len) = let
 	    val outLen = 4 * Int.quot(len + 2, 3)
-	    val outBuf = Unsafe.CharVector.create outLen
+	    val outBuf = UCA.create outLen
 	    val nTriples = Int.quot(len, 3)
 	    val extra = Int.rem(len, 3)
 	    fun insBuf (i, (c1, c2, c3, c4)) = let
 		  val idx = 4*i
 		  in
-		    UCV.update(outBuf, idx,   c1);
-		    UCV.update(outBuf, idx+1, c2);
-		    UCV.update(outBuf, idx+2, c3);
-		    UCV.update(outBuf, idx+3, c4)
+		    UCA.update(outBuf, idx,   c1);
+		    UCA.update(outBuf, idx+1, c2);
+		    UCA.update(outBuf, idx+2, c3);
+		    UCA.update(outBuf, idx+3, c4)
 		  end
 	    fun loop (i, idx) = if (i < nTriples)
 		  then (
@@ -81,7 +83,7 @@ structure Base64 : BASE64 =
 		    (* end case *))
 	    in
 	      loop (0, start);
-	      outBuf
+	      CA.vector outBuf
 	    end
     in
 
diff --git a/Util/bit-array.sml b/Util/bit-array.sml
index 8d962d8..01ee183 100644
--- a/Util/bit-array.sml
+++ b/Util/bit-array.sml
@@ -47,7 +47,9 @@ structure BitArray :> BIT_ARRAY =
          * We maintain the invariant that all bits >= nbits are 0.
          *)
           type elem = bool
-          val maxLen = 8*Word8Array.maxLen
+          val maxLen = (8*Word8Array.maxLen)
+	               handle Overflow => Word8Array.maxLen
+
           datatype vector = BA of {nbits : int, bits : W8A.array}
       
           fun array (0,init) = BA{nbits=0,bits=W8A.array(0,0w0)}
diff --git a/Util/engine.mlton.sml b/Util/engine.mlton.sml
new file mode 100644
index 0000000..deb0c42
--- /dev/null
+++ b/Util/engine.mlton.sml
@@ -0,0 +1,99 @@
+(* Copyright (C) 1999-2004 Henry Cejtin, Matthew Fluet, Suresh
+ *    Jagannathan, and Stephen Weeks.
+ *
+ * MLton is released under the GNU General Public License (GPL).
+ * Please see the file MLton-LICENSE for license information.
+ *)
+
+signature ENGINE =
+   sig
+      type 'a t
+
+      datatype 'a res =
+	 Done of 'a
+       | Raise of exn
+       | TimeOut of 'a t
+
+      val new: (unit -> 'a) -> 'a t
+      val repeat: {thunk: unit -> 'a,
+		   limit: Time.time,
+		   tries: int} -> 'a option
+      val run: 'a t * Time.time -> 'a res
+      val timeLimit: Time.time * (unit -> 'a) -> 'a option
+   end
+
+structure Engine: ENGINE =
+struct
+
+open MLton
+
+datatype 'a t = T of {return: 'a res Thread.t option ref,
+		      thread: Thread.Runnable.t}
+and 'a res =
+   Done of 'a
+ | Raise of exn
+ | TimeOut of 'a t
+
+val which = Itimer.Real
+val signal = Itimer.signal which
+
+fun done (return): unit =
+   (return := NONE
+    ; Itimer.set (which, {value = Time.zeroTime,
+			  interval = Time.zeroTime})
+    ; Signal.setHandler (signal, Signal.Handler.default))
+
+fun new (f: unit -> 'a): 'a t =
+   let
+      val return = ref NONE
+      val thread =
+	 Thread.new
+	 (fn () =>
+	  let
+	     val res = Done (f ()) handle e => Raise e
+	     val ret = valOf (!return)
+	     val _ = done return
+	  in
+	     Thread.switch (fn _ => Thread.prepare (ret, res))
+	  end)
+      val thread = Thread.prepare (thread, ())
+   in
+      T {return = return, thread = thread}
+   end
+
+fun run (T {return, thread}, time: Time.time): 'a res =
+   Thread.switch
+   (fn cur: 'a res Thread.t =>
+    let
+       val _ = return := SOME cur
+       fun handler (me: Thread.Runnable.t): Thread.Runnable.t =
+	  Thread.prepare
+	  (Thread.prepend (cur, fn () => (done return
+					  ; TimeOut (T {return = return,
+							thread = me}))),
+	   ())
+       val _ = Signal.setHandler (signal, Signal.Handler.handler handler)
+       val _ = Itimer.set (which, {value = time,
+				   interval = Time.zeroTime})
+    in
+       thread
+    end)
+
+fun timeLimit (t: Time.time, f: unit -> 'a): 'a option =
+   case run (new f, t) of
+      Done a => SOME a
+    | Raise e => raise e
+    | TimeOut _ => NONE
+
+fun repeat {thunk, limit, tries} =
+   let
+      fun loop (n: int) =
+	 if n <= 0
+	    then NONE
+	 else (case timeLimit (limit, thunk) of
+		  NONE => loop (n - 1)
+		| SOME a => SOME a)
+   in loop tries
+   end
+
+end
diff --git a/Util/graph-scc-fn.sml b/Util/graph-scc-fn.sml
index 0dc3b32..4ae2d01 100644
--- a/Util/graph-scc-fn.sml
+++ b/Util/graph-scc-fn.sml
@@ -8,7 +8,7 @@
  * author: Matthias Blume
  *) 
 
-functor GraphSCCFn (Nd: ORD_KEY) :> GRAPH_SCC where Nd = Nd =
+functor GraphSCCFn (Nd: ORD_KEY) :> GRAPH_SCC where type Nd.ord_key = Nd.ord_key =
   struct
     structure Nd = Nd
 
diff --git a/Util/real-order-stats.sml b/Util/real-order-stats.sml
index 9dc231c..98edf74 100644
--- a/Util/real-order-stats.sml
+++ b/Util/real-order-stats.sml
@@ -23,7 +23,7 @@ structure RealOrderStats : sig
 
 end = struct
 
-    infix 8 $  val op $ = Unsafe.Array.sub
+    infix 8 $$  val op $$ = Unsafe.Array.sub
     infix 3 <- fun (a, i) <- x = Unsafe.Array.update (a, i, x)
 
     (* initialize random number generator *)
@@ -36,12 +36,12 @@ end = struct
 	    fun x - y = Word.toIntX (Word.- (Word.fromInt x, Word.fromInt y))
 	    (* random partition: *)
 	    fun rp (p, r) =
-		let fun sw(i,j) = let val t=a$i in (a,i)<-a$j; (a,j)<-t end
+		let fun sw(i,j) = let val t=a$$i in (a,i)<-a$$j; (a,j)<-t end
 		    val q = Random.randRange (p, r) rand
-		    val qv = a$q
-		    val _ = if q<>p then ((a,q)<-a$p; (a,p)<-qv) else ()
-		    fun up i = if i>r orelse qv < a$i then i else up(i+1)
-		    fun dn i = if i>=p andalso qv < a$i then dn(i-1) else i
+		    val qv = a$$q
+		    val _ = if q<>p then ((a,q)<-a$$p; (a,p)<-qv) else ()
+		    fun up i = if i>r orelse qv < a$$i then i else up(i+1)
+		    fun dn i = if i>=p andalso qv < a$$i then dn(i-1) else i
 		    fun lp (i, j) =
 			let val (i, j) = (up i, dn j)
 			in if i>j then let val q' = i-1 in sw(p,q'); (q',qv) end
@@ -50,7 +50,7 @@ end = struct
 		in lp (p+1, r) end
 	    (* random select: *)
 	    fun rs (p, r) =
-		if p=r then a$r
+		if p=r then a$$r
 		else let val (q, qv) = rp (p, r)
 		     in if i=q then qv else if i<q then rs(p,q-1) else rs(q+1,r)
 		     end
@@ -64,8 +64,8 @@ end = struct
 	let val mid = p + len div 2
 	    val r = p + len - 1
 	    val m0 = select0 (a, p, r, mid)
-	    fun l(i,m) = if i>=mid then m else l(i+1, Real.max(a$i,m))
-	in if len mod 2 = 1 then m0 else (l(p+1,a$p) + m0) / 2.0
+	    fun l(i,m) = if i>=mid then m else l(i+1, Real.max(a$$i,m))
+	in if len mod 2 = 1 then m0 else (l(p+1,a$$p) + m0) / 2.0
 	end
 
     fun median a = median0 (a, 0, Array.length a)
diff --git a/Util/redblack-map-fn.sml b/Util/redblack-map-fn.sml
index 5c1af51..92284dc 100644
--- a/Util/redblack-map-fn.sml
+++ b/Util/redblack-map-fn.sml
@@ -23,7 +23,7 @@
  * its child will be a red leaf.
  *)
 
-functor RedBlackMapFn (K : ORD_KEY) :> ORD_MAP where Key = K =
+functor RedBlackMapFn (K : ORD_KEY) :> ORD_MAP where type Key.ord_key = K.ord_key =
   struct
 
     structure Key = K
diff --git a/Util/redblack-set-fn.sml b/Util/redblack-set-fn.sml
index acf007f..f5a1160 100644
--- a/Util/redblack-set-fn.sml
+++ b/Util/redblack-set-fn.sml
@@ -20,7 +20,7 @@
  * its child will be a red leaf.
  *)
 
-functor RedBlackSetFn (K : ORD_KEY) :> ORD_SET where Key = K =
+functor RedBlackSetFn (K : ORD_KEY) :> ORD_SET where type Key.ord_key = K.ord_key =
   struct
 
     structure Key = K
diff --git a/Util/smlnj-lib.mlb b/Util/smlnj-lib.mlb
new file mode 100644
index 0000000..a6e9873
--- /dev/null
+++ b/Util/smlnj-lib.mlb
@@ -0,0 +1,1166 @@
+
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit ignore"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  basis l4 =
+    bas
+      (* $/basis.cm ====> *) $(SML_LIB)/basis/basis.mlb $(SML_LIB)/basis/unsafe.mlb $(SML_LIB)/basis/sml-nj.mlb
+    end
+in
+local
+   $(SML_LIB)/basis/pervasive.mlb
+   local
+      open l4
+   in
+      structure gs_0 = List
+   end
+   local
+      ord-key-sig.sml
+   in
+      signature gs_1 = ORD_KEY
+   end
+   local
+      signature ORD_KEY = gs_1
+      ord-set-sig.sml
+   in
+      signature gs_2 = ORD_SET
+   end
+   local
+      open l4
+   in
+      structure gs_3 = Int
+   end
+   local
+      lib-base-sig.sml
+   in
+      signature gs_4 = LIB_BASE
+   end
+   local
+      structure Int = gs_3
+      signature LIB_BASE = gs_4
+      lib-base.sml
+   in
+      structure gs_5 = LibBase
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      signature ORD_SET = gs_2
+      list-set-fn.sml
+   in
+      functor gs_6 = ListSetFn
+   end
+   local
+      signature ORD_KEY = gs_1
+      ord-map-sig.sml
+   in
+      signature gs_7 = ORD_MAP
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      signature ORD_MAP = gs_7
+      list-map-fn.sml
+   in
+      functor gs_8 = ListMapFn
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_SET = gs_2
+      int-binary-set.sml
+   in
+      structure gs_9 = IntBinarySet
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      signature ORD_MAP = gs_7
+      int-binary-map.sml
+   in
+      structure gs_10 = IntBinaryMap
+   end
+   local
+      prime-sizes.sml
+   in
+      structure gs_11 = PrimeSizes
+   end
+   local
+      open l4
+   in
+      structure gs_12 = Array
+   end
+   local
+      open l4
+   in
+      structure gs_13 = ArraySlice
+   end
+   local
+      open l4
+   in
+      structure gs_14 = General
+   end
+   local
+      dynamic-array-sig.sml
+   in
+      signature gs_15 = DYNAMIC_ARRAY
+   end
+   local
+      structure Array = gs_12
+      structure ArraySlice = gs_13
+      signature DYNAMIC_ARRAY = gs_15
+      structure General = gs_14
+      structure Int = gs_3
+      dynamic-array.sml
+   in
+      structure gs_16 = DynamicArray
+   end
+   local
+      io-util-sig.sml
+   in
+      signature gs_17 = IO_UTIL
+   end
+   local
+      splaytree-sig.sml
+   in
+      signature gs_18 = SPLAY_TREE
+   end
+   local
+      signature SPLAY_TREE = gs_18
+      splaytree.sml
+   in
+      structure gs_19 = SplayTree
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      signature ORD_SET = gs_2
+      structure SplayTree = gs_19
+      splay-set-fn.sml
+   in
+      functor gs_20 = SplaySetFn
+   end
+   local
+      structure LibBase = gs_5
+      signature ORD_KEY = gs_1
+      signature ORD_MAP = gs_7
+      structure SplayTree = gs_19
+      splay-map-fn.sml
+   in
+      functor gs_21 = SplayMapFn
+   end
+   local
+      open l4
+   in
+      structure gs_22 = TextIO
+   end
+   local
+      structure Int = gs_3
+      structure List = gs_0
+      structure TextIO = gs_22
+      ansi-term.sml
+   in
+      structure gs_23 = ANSITerm
+   end
+   local
+      signature IO_UTIL = gs_17
+      structure TextIO = gs_22
+      io-util.sml
+   in
+      structure gs_24 = IOUtil
+   end
+   local
+      plist-sig.sml
+   in
+      signature gs_25 = PROP_LIST
+   end
+   local
+      open l4
+   in
+      structure gs_26 = Substring
+   end
+   local
+      open l4
+   in
+      structure gs_27 = StringCvt
+   end
+   local
+      open l4
+   in
+      structure gs_28 = String
+   end
+   local
+      open l4
+   in
+      structure gs_29 = Char
+   end
+   local
+      getopt-sig.sml
+   in
+      signature gs_30 = GET_OPT
+   end
+   local
+      structure Char = gs_29
+      signature GET_OPT = gs_30
+      structure Int = gs_3
+      structure List = gs_0
+      structure String = gs_28
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      getopt.sml
+   in
+      structure gs_31 = GetOpt
+   end
+   local
+      interval-domain-sig.sml
+   in
+      signature gs_32 = INTERVAL_DOMAIN
+   end
+   local
+      signature INTERVAL_DOMAIN = gs_32
+      interval-set-sig.sml
+   in
+      signature gs_33 = INTERVAL_SET
+   end
+   local
+      structure StringCvt = gs_27
+      parser-comb-sig.sml
+   in
+      signature gs_34 = PARSER_COMB
+   end
+   local
+      open l4
+   in
+      structure gs_35 = Word8
+   end
+   local
+      open l4
+   in
+      structure gs_36 = CharVector
+   end
+   local
+      open l4
+   in
+      structure gs_37 = LargeWord
+   end
+   local
+      open l4
+   in
+      structure gs_38 = LargeInt
+   end
+   local
+      open l4
+   in
+      structure gs_39 = Word
+   end
+   local
+      open l4
+   in
+      structure gs_40 = Real
+   end
+   local
+      open l4
+   in
+      structure gs_41 = LargeReal
+   end
+   local
+      atom-sig.sml
+   in
+      signature gs_42 = ATOM
+   end
+   local
+      open l4
+   in
+      structure gs_43 = Unsafe
+   end
+   local
+      structure Char = gs_29
+      structure Substring = gs_26
+      structure Unsafe = gs_43
+      structure Word = gs_39
+      hash-string.sml
+   in
+      structure gs_44 = HashString
+   end
+   local
+      signature ATOM = gs_42
+      structure Array = gs_12
+      structure HashString = gs_44
+      structure String = gs_28
+      structure Substring = gs_26
+      structure Word = gs_39
+      atom.sml
+   in
+      structure gs_45 = Atom
+   end
+   local
+      structure Atom = gs_45
+      structure Int = gs_3
+      structure LargeInt = gs_38
+      structure LargeReal = gs_41
+      structure LargeWord = gs_37
+      structure Real = gs_40
+      structure Word = gs_39
+      structure Word8 = gs_35
+      format-sig.sml
+   in
+      signature gs_46 = FORMAT
+   end
+   local
+      structure Int = gs_3
+      structure String = gs_28
+      structure StringCvt = gs_27
+      real-format.sml
+   in
+      structure gs_47 = RealFormat
+   end
+   local
+      structure Atom = gs_45
+      structure Char = gs_29
+      structure Int = gs_3
+      structure LargeInt = gs_38
+      structure LargeReal = gs_41
+      structure LargeWord = gs_37
+      structure Real = gs_40
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      structure Word = gs_39
+      structure Word8 = gs_35
+      fmt-fields.sml
+   in
+      structure gs_48 = FmtFields
+   end
+   local
+      structure Atom = gs_45
+      structure Char = gs_29
+      structure CharVector = gs_36
+      signature FORMAT = gs_46
+      structure FmtFields = gs_48
+      structure Int = gs_3
+      structure LargeInt = gs_38
+      structure LargeWord = gs_37
+      structure Real = gs_40
+      structure RealFormat = gs_47
+      structure String = gs_28
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      structure Word = gs_39
+      structure Word8 = gs_35
+      format.sml
+   in
+      structure gs_49 = Format
+   end
+   local
+      priority-sig.sml
+   in
+      signature gs_50 = PRIORITY
+   end
+   local
+      hash-key-sig.sml
+   in
+      signature gs_51 = HASH_KEY
+   end
+   local
+      signature HASH_KEY = gs_51
+      mono-hash-table-sig.sml
+   in
+      signature gs_52 = MONO_HASH_TABLE
+   end
+   local
+      structure Array = gs_12
+      structure Word = gs_39
+      hash-table-rep.sml
+   in
+      structure gs_53 = HashTableRep
+   end
+   local
+      structure Array = gs_12
+      structure HashTableRep = gs_53
+      signature MONO_HASH_TABLE = gs_52
+      structure Word = gs_39
+      int-hash-table.sml
+   in
+      structure gs_54 = IntHashTable
+   end
+   local
+      open l4
+   in
+      signature gs_55 = MONO_ARRAY
+   end
+   local
+      signature MONO_ARRAY = gs_55
+      bit-array-sig.sml
+   in
+      signature gs_56 = BIT_ARRAY
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      signature ORD_SET = gs_2
+      redblack-set-fn.sml
+   in
+      functor gs_57 = RedBlackSetFn
+   end
+   local
+      structure Atom = gs_45
+      functor RedBlackSetFn = gs_57
+      atom-redblack-set.sml
+   in
+      structure gs_58 = AtomRedBlackSet
+   end
+   local
+      structure AtomRedBlackSet = gs_58
+      atom-set.sml
+   in
+      structure gs_59 = AtomSet
+   end
+   local
+      structure LibBase = gs_5
+      signature ORD_KEY = gs_1
+      signature ORD_MAP = gs_7
+      redblack-map-fn.sml
+   in
+      functor gs_60 = RedBlackMapFn
+   end
+   local
+      structure Atom = gs_45
+      functor RedBlackMapFn = gs_60
+      atom-redblack-map.sml
+   in
+      structure gs_61 = AtomRedBlackMap
+   end
+   local
+      structure AtomRedBlackMap = gs_61
+      atom-map.sml
+   in
+      structure gs_62 = AtomMap
+   end
+   local
+      open l4
+   in
+      structure gs_63 = Word8Array
+   end
+   local
+      open l4
+   in
+      structure gs_64 = Word8Vector
+   end
+   local
+      open l4
+   in
+      structure gs_65 = CharArray
+   end
+   local
+      open l4
+   in
+      structure gs_66 = Word8VectorSlice
+   end
+   local
+      open l4
+   in
+      structure gs_67 = Word8ArraySlice
+   end
+   local
+      structure Word8Vector = gs_64
+      structure Word8VectorSlice = gs_66
+      base64-sig.sml
+   in
+      signature gs_68 = BASE64
+   end
+   local
+      signature BASE64 = gs_68
+      structure Char = gs_29
+      structure CharArray = gs_65
+      structure CharVector = gs_36
+      structure Int = gs_3
+      structure String = gs_28
+      structure Substring = gs_26
+      structure Unsafe = gs_43
+      structure Word = gs_39
+      structure Word8 = gs_35
+      structure Word8Array = gs_63
+      structure Word8ArraySlice = gs_67
+      structure Word8Vector = gs_64
+      structure Word8VectorSlice = gs_66
+      base64.sml
+   in
+      structure gs_69 = Base64
+   end
+   local
+      structure List = gs_0
+      signature PROP_LIST = gs_25
+      plist.sml
+   in
+      structure gs_70 = PropList
+   end
+   local
+      open l4
+   in
+      structure gs_71 = Vector
+   end
+   local
+      char-map-sig.sml
+   in
+      signature gs_72 = CHAR_MAP
+   end
+   local
+      structure Array = gs_12
+      signature CHAR_MAP = gs_72
+      structure Char = gs_29
+      structure String = gs_28
+      structure Vector = gs_71
+      char-map.sml
+   in
+      structure gs_73 = CharMap
+   end
+   local
+      list-xprod-sig.sml
+   in
+      signature gs_74 = LIST_XPROD
+   end
+   local
+      signature ORD_KEY = gs_1
+      graph-scc-sig.sml
+   in
+      signature gs_75 = GRAPH_SCC
+   end
+   local
+      signature GRAPH_SCC = gs_75
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      functor RedBlackMapFn = gs_60
+      graph-scc-fn.sml
+   in
+      functor gs_76 = GraphSCCFn
+   end
+   local
+      structure Array = gs_12
+      signature HASH_KEY = gs_51
+      structure HashTableRep = gs_53
+      signature MONO_HASH_TABLE = gs_52
+      structure Word = gs_39
+      hash-table-fn.sml
+   in
+      functor gs_77 = HashTableFn
+   end
+   local
+      structure Atom = gs_45
+      functor HashTableFn = gs_77
+      atom-table.sml
+   in
+      structure gs_78 = AtomTable
+   end
+   local
+      structure StringCvt = gs_27
+      list-format-sig.sml
+   in
+      signature gs_79 = LIST_FORMAT
+   end
+   local
+      signature LIST_FORMAT = gs_79
+      structure String = gs_28
+      structure StringCvt = gs_27
+      list-format.sml
+   in
+      structure gs_80 = ListFormat
+   end
+   local
+      open l4
+   in
+      signature gs_81 = MONO_VECTOR
+   end
+   local
+      signature MONO_VECTOR = gs_81
+      bit-vector-sig.sml
+   in
+      signature gs_82 = BIT_VECTOR
+   end
+   local
+      signature PARSER_COMB = gs_34
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      parser-comb.sml
+   in
+      structure gs_83 = ParserComb
+   end
+   local
+      signature HASH_KEY = gs_51
+      mono-hash2-table-sig.sml
+   in
+      signature gs_84 = MONO_HASH2_TABLE
+   end
+   local
+      signature INTERVAL_DOMAIN = gs_32
+      signature INTERVAL_SET = gs_33
+      structure List = gs_0
+      interval-set-fn.sml
+   in
+      functor gs_85 = IntervalSetFn
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_SET = gs_2
+      structure Word = gs_39
+      word-redblack-set.sml
+   in
+      structure gs_86 = WordRedBlackSet
+   end
+   local
+      structure LibBase = gs_5
+      signature ORD_MAP = gs_7
+      structure Word = gs_39
+      word-redblack-map.sml
+   in
+      structure gs_87 = WordRedBlackMap
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_SET = gs_2
+      int-list-set.sml
+   in
+      structure gs_88 = IntListSet
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_MAP = gs_7
+      int-list-map.sml
+   in
+      structure gs_89 = IntListMap
+   end
+   local
+      open l4
+   in
+      structure gs_90 = OS
+   end
+   local
+      path-util-sig.sml
+   in
+      signature gs_91 = PATH_UTIL
+   end
+   local
+      structure OS = gs_90
+      signature PATH_UTIL = gs_91
+      path-util.sml
+   in
+      structure gs_92 = PathUtil
+   end
+   local
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_KEY = gs_1
+      signature ORD_SET = gs_2
+      binary-set-fn.sml
+   in
+      functor gs_93 = BinarySetFn
+   end
+   local
+      structure LibBase = gs_5
+      signature ORD_KEY = gs_1
+      signature ORD_MAP = gs_7
+      binary-map-fn.sml
+   in
+      functor gs_94 = BinaryMapFn
+   end
+   local
+      open l4
+   in
+      structure gs_95 = Math
+   end
+   local
+      open l4
+   in
+      structure gs_96 = PackWord32Big
+   end
+   local
+      open l4
+   in
+      structure gs_97 = Word31
+   end
+   local
+      open l4
+   in
+      structure gs_98 = Byte
+   end
+   local
+      random-sig.sml
+   in
+      signature gs_99 = RANDOM
+   end
+   local
+      structure Array = gs_12
+      structure Byte = gs_98
+      structure LargeWord = gs_37
+      structure LibBase = gs_5
+      structure PackWord32Big = gs_96
+      signature RANDOM = gs_99
+      structure Word31 = gs_97
+      structure Word8Array = gs_63
+      structure Word8Vector = gs_64
+      random.sml
+   in
+      structure gs_100 = Random
+   end
+   local
+      structure Array = gs_12
+      structure ArraySlice = gs_13
+      structure Random = gs_100
+      structure Real = gs_40
+      structure Unsafe = gs_43
+      structure Word = gs_39
+      real-order-stats.sml
+   in
+      structure gs_101 = RealOrderStats
+   end
+   local
+      structure Array = gs_12
+      structure ArraySlice = gs_13
+      structure Math = gs_95
+      structure RealOrderStats = gs_101
+      structure Unsafe = gs_43
+      univariate-stats.sml
+   in
+      structure gs_102 = UnivariateStats
+   end
+   local
+      signature BIT_ARRAY = gs_56
+      structure Byte = gs_98
+      structure Int = gs_3
+      structure LibBase = gs_5
+      structure List = gs_0
+      structure Word = gs_39
+      structure Word8 = gs_35
+      structure Word8Array = gs_63
+      structure Word8Vector = gs_64
+      bit-array.sml
+   in
+      structure gs_103 = BitArray
+   end
+   local
+      structure Array = gs_12
+      signature MONO_ARRAY = gs_55
+      structure Vector = gs_71
+      mono-array-fn.sml
+   in
+      functor gs_104 = MonoArrayFn
+   end
+   local
+      signature MONO_ARRAY = gs_55
+      bsearch-fn.sml
+   in
+      functor gs_105 = BSearchFn
+   end
+   local
+      mono-dynamic-array-sig.sml
+   in
+      signature gs_106 = MONO_DYNAMIC_ARRAY
+   end
+   local
+      open l4
+   in
+      structure gs_107 = Bool
+   end
+   local
+      structure StringCvt = gs_27
+      format-comb-sig.sml
+   in
+      signature gs_108 = FORMAT_COMB
+   end
+   local
+      structure Bool = gs_107
+      structure Char = gs_29
+      signature FORMAT_COMB = gs_108
+      structure Int = gs_3
+      structure List = gs_0
+      structure Real = gs_40
+      structure String = gs_28
+      structure StringCvt = gs_27
+      format-comb.sml
+   in
+      structure gs_109 = FormatComb
+   end
+   local
+      queue-sig.sml
+   in
+      signature gs_110 = QUEUE
+   end
+   local
+      fifo-sig.sml
+   in
+      signature gs_111 = FIFO
+   end
+   local
+      signature FIFO = gs_111
+      structure List = gs_0
+      fifo.sml
+   in
+      structure gs_112 = Fifo
+   end
+   local
+      structure Fifo = gs_112
+      signature QUEUE = gs_110
+      queue.sml
+   in
+      structure gs_113 = Queue
+   end
+   local
+      structure Array = gs_12
+      signature HASH_KEY = gs_51
+      structure HashTableRep = gs_53
+      signature MONO_HASH2_TABLE = gs_84
+      structure Word = gs_39
+      hash2-table-fn.sml
+   in
+      functor gs_114 = Hash2TableFn
+   end
+   local
+      structure Array = gs_12
+      structure HashTableRep = gs_53
+      signature MONO_HASH_TABLE = gs_52
+      structure Word = gs_39
+      word-hash-table.sml
+   in
+      structure gs_115 = WordHashTable
+   end
+   local
+      structure Atom = gs_45
+      structure AtomTable = gs_78
+      structure List = gs_0
+      keyword-fn.sml
+   in
+      functor gs_116 = KeywordFn
+   end
+   local
+      mono-priorityq-sig.sml
+   in
+      signature gs_117 = MONO_PRIORITYQ
+   end
+   local
+      structure List = gs_0
+      signature MONO_PRIORITYQ = gs_117
+      signature PRIORITY = gs_50
+      left-priorityq-fn.sml
+   in
+      functor gs_118 = LeftPriorityQFn
+   end
+   local
+      hash-table-sig.sml
+   in
+      signature gs_119 = HASH_TABLE
+   end
+   local
+      structure Array = gs_12
+      signature HASH_TABLE = gs_119
+      structure HashTableRep = gs_53
+      structure Word = gs_39
+      hash-table.sml
+   in
+      structure gs_120 = HashTable
+   end
+   local
+      structure Array = gs_12
+      signature HASH_KEY = gs_51
+      structure List = gs_0
+      structure Word = gs_39
+      hash-set-fn.sml
+   in
+      signature gs_121 = HASH_SET
+      functor gs_122 = HashSetFn
+   end
+   local
+      structure General = gs_14
+      structure Int = gs_3
+      signature MONO_ARRAY = gs_55
+      signature MONO_DYNAMIC_ARRAY = gs_106
+      dynamic-array-fn.sml
+   in
+      functor gs_123 = DynamicArrayFn
+   end
+   local
+      signature MONO_ARRAY = gs_55
+      mono-array-sort-sig.sml
+   in
+      signature gs_124 = MONO_ARRAY_SORT
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      structure List = gs_0
+      signature ORD_SET = gs_2
+      int-redblack-set.sml
+   in
+      structure gs_125 = IntRedBlackSet
+   end
+   local
+      structure Int = gs_3
+      structure LibBase = gs_5
+      signature ORD_MAP = gs_7
+      int-redblack-map.sml
+   in
+      structure gs_126 = IntRedBlackMap
+   end
+   local
+      array-sort-sig.sml
+   in
+      signature gs_127 = ARRAY_SORT
+   end
+   local
+      signature ARRAY_SORT = gs_127
+      structure Array = gs_12
+      structure Int = gs_3
+      structure Unsafe = gs_43
+      array-qsort.sml
+   in
+      structure gs_128 = ArrayQSort
+   end
+   local
+      uref-sig.sml
+   in
+      signature gs_129 = UREF
+   end
+   local
+      signature UREF = gs_129
+      simple-uref.sml
+   in
+      structure gs_130 = SimpleURef
+   end
+   local
+      listsort-sig.sml
+   in
+      signature gs_131 = LIST_SORT
+   end
+   local
+      signature LIST_SORT = gs_131
+      structure LibBase = gs_5
+      list-mergesort.sml
+   in
+      structure gs_132 = ListMergeSort
+   end
+   local
+      structure Int = gs_3
+      signature MONO_ARRAY = gs_55
+      signature MONO_ARRAY_SORT = gs_124
+      array-qsort-fn.sml
+   in
+      functor gs_133 = ArrayQSortFn
+   end
+   local
+      structure Atom = gs_45
+      functor BinarySetFn = gs_93
+      atom-binary-set.sml
+   in
+      structure gs_134 = AtomBinarySet
+   end
+   local
+      structure Atom = gs_45
+      functor BinaryMapFn = gs_94
+      atom-binary-map.sml
+   in
+      structure gs_135 = AtomBinaryMap
+   end
+   local
+      structure StringCvt = gs_27
+      utf8-sig.sml
+   in
+      signature gs_136 = UTF8
+   end
+   local
+      structure Char = gs_29
+      structure String = gs_28
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      signature UTF8 = gs_136
+      structure Word = gs_39
+      utf8.sml
+   in
+      structure gs_137 = UTF8
+   end
+   local
+      signature UREF = gs_129
+      uref.sml
+   in
+      structure gs_138 = URef
+   end
+   local
+      structure Atom = gs_45
+      structure Int = gs_3
+      structure LargeInt = gs_38
+      structure LargeReal = gs_41
+      structure LargeWord = gs_37
+      structure Real = gs_40
+      structure StringCvt = gs_27
+      structure Word = gs_39
+      structure Word8 = gs_35
+      scan-sig.sml
+   in
+      signature gs_139 = SCAN
+   end
+   local
+      structure Bool = gs_107
+      structure Char = gs_29
+      structure FmtFields = gs_48
+      structure Int = gs_3
+      structure LargeInt = gs_38
+      structure LargeReal = gs_41
+      signature SCAN = gs_139
+      structure StringCvt = gs_27
+      structure Substring = gs_26
+      structure Word8Array = gs_63
+      scan.sml
+   in
+      structure gs_140 = Scan
+   end
+   local
+      open l4
+   in
+      structure gs_141 = Int32
+   end
+   local
+      structure Word31 = gs_97
+      rand-sig.sml
+   in
+      signature gs_142 = RAND
+   end
+   local
+      structure Int32 = gs_141
+      structure LibBase = gs_5
+      signature RAND = gs_142
+      structure Real = gs_40
+      structure Word31 = gs_97
+      rand.sml
+   in
+      structure gs_143 = Rand
+   end
+   local
+      signature LIST_XPROD = gs_74
+      list-xprod.sml
+   in
+      structure gs_144 = ListXProd
+   end
+in
+   structure ANSITerm = gs_23
+   signature ARRAY_SORT = gs_127
+   signature ATOM = gs_42
+   structure ArrayQSort = gs_128
+   functor ArrayQSortFn = gs_133
+   structure Atom = gs_45
+   structure AtomBinaryMap = gs_135
+   structure AtomBinarySet = gs_134
+   structure AtomMap = gs_62
+   structure AtomRedBlackMap = gs_61
+   structure AtomRedBlackSet = gs_58
+   structure AtomSet = gs_59
+   structure AtomTable = gs_78
+   signature BASE64 = gs_68
+   signature BIT_ARRAY = gs_56
+   signature BIT_VECTOR = gs_82
+   functor BSearchFn = gs_105
+   structure Base64 = gs_69
+   functor BinaryMapFn = gs_94
+   functor BinarySetFn = gs_93
+   structure BitArray = gs_103
+   signature CHAR_MAP = gs_72
+   structure CharMap = gs_73
+   signature DYNAMIC_ARRAY = gs_15
+   structure DynamicArray = gs_16
+   functor DynamicArrayFn = gs_123
+   signature FIFO = gs_111
+   signature FORMAT = gs_46
+   signature FORMAT_COMB = gs_108
+   structure Fifo = gs_112
+   structure Format = gs_49
+   structure FormatComb = gs_109
+   signature GET_OPT = gs_30
+   signature GRAPH_SCC = gs_75
+   structure GetOpt = gs_31
+   functor GraphSCCFn = gs_76
+   signature HASH_KEY = gs_51
+   signature HASH_SET = gs_121
+   signature HASH_TABLE = gs_119
+   functor Hash2TableFn = gs_114
+   functor HashSetFn = gs_122
+   structure HashString = gs_44
+   structure HashTable = gs_120
+   functor HashTableFn = gs_77
+   signature INTERVAL_DOMAIN = gs_32
+   signature INTERVAL_SET = gs_33
+   structure IOUtil = gs_24
+   signature IO_UTIL = gs_17
+   structure IntBinaryMap = gs_10
+   structure IntBinarySet = gs_9
+   structure IntHashTable = gs_54
+   structure IntListMap = gs_89
+   structure IntListSet = gs_88
+   structure IntRedBlackMap = gs_126
+   structure IntRedBlackSet = gs_125
+   functor IntervalSetFn = gs_85
+   functor KeywordFn = gs_116
+   signature LIB_BASE = gs_4
+   signature LIST_FORMAT = gs_79
+   signature LIST_SORT = gs_131
+   signature LIST_XPROD = gs_74
+   functor LeftPriorityQFn = gs_118
+   structure LibBase = gs_5
+   structure ListFormat = gs_80
+   functor ListMapFn = gs_8
+   structure ListMergeSort = gs_132
+   functor ListSetFn = gs_6
+   structure ListXProd = gs_144
+   signature MONO_ARRAY_SORT = gs_124
+   signature MONO_DYNAMIC_ARRAY = gs_106
+   signature MONO_HASH2_TABLE = gs_84
+   signature MONO_HASH_TABLE = gs_52
+   signature MONO_PRIORITYQ = gs_117
+   functor MonoArrayFn = gs_104
+   signature ORD_KEY = gs_1
+   signature ORD_MAP = gs_7
+   signature ORD_SET = gs_2
+   signature PARSER_COMB = gs_34
+   signature PATH_UTIL = gs_91
+   signature PRIORITY = gs_50
+   signature PROP_LIST = gs_25
+   structure ParserComb = gs_83
+   structure PathUtil = gs_92
+   structure PrimeSizes = gs_11
+   structure PropList = gs_70
+   signature QUEUE = gs_110
+   structure Queue = gs_113
+   signature RAND = gs_142
+   signature RANDOM = gs_99
+   structure Rand = gs_143
+   structure Random = gs_100
+   structure RealOrderStats = gs_101
+   functor RedBlackMapFn = gs_60
+   functor RedBlackSetFn = gs_57
+   signature SCAN = gs_139
+   signature SPLAY_TREE = gs_18
+   structure Scan = gs_140
+   structure SimpleURef = gs_130
+   functor SplayMapFn = gs_21
+   functor SplaySetFn = gs_20
+   structure SplayTree = gs_19
+   signature UREF = gs_129
+   structure URef = gs_138
+   signature UTF8 = gs_136
+   structure UTF8 = gs_137
+   structure UnivariateStats = gs_102
+   structure WordHashTable = gs_115
+   structure WordRedBlackMap = gs_87
+   structure WordRedBlackSet = gs_86
+end
+end
+
+end
diff --git a/Util/time-limit.mlb b/Util/time-limit.mlb
new file mode 100644
index 0000000..c4ca078
--- /dev/null
+++ b/Util/time-limit.mlb
@@ -0,0 +1,16 @@
+ann
+  "nonexhaustiveMatch warn" "redundantMatch warn"
+  "sequenceNonUnit warn"
+  "warnUnused false" "forceUsed"
+in
+
+local
+  $(SML_LIB)/basis/basis.mlb
+  $(SML_LIB)/basis/mlton.mlb
+  engine.mlton.sml
+  time-limit.mlton.sml
+in
+  structure TimeLimit = TimeLimit
+end
+
+end
diff --git a/Util/time-limit.mlton.sml b/Util/time-limit.mlton.sml
new file mode 100644
index 0000000..0f585b7
--- /dev/null
+++ b/Util/time-limit.mlton.sml
@@ -0,0 +1,24 @@
+(* time-limit.mlton.sml
+ *
+ * Copyright (C) 1999-2004 Henry Cejtin, Matthew Fluet, Suresh
+ *    Jagannathan, and Stephen Weeks.
+ *
+ * MLton is released under the GNU General Public License (GPL).
+ * Please see the file MLton-LICENSE for license information.
+ *
+ *)
+
+structure TimeLimit:
+sig
+   exception TimeOut
+   val timeLimit : Time.time -> ('a -> 'b) -> 'a -> 'b
+end =
+struct
+   exception TimeOut
+
+   fun timeLimit t f x =
+      case Engine.run (Engine.new (fn () => f x), t) of
+	 Engine.Done res => res
+       | Engine.Raise exn => raise exn
+       | Engine.TimeOut _ => raise TimeOut
+end
diff --git a/smlnj-lib.mlb b/smlnj-lib.mlb
new file mode 100644
index 0000000..846951a
--- /dev/null
+++ b/smlnj-lib.mlb
@@ -0,0 +1,16 @@
+local
+   Controls/controls-lib.mlb
+   HTML/html-lib.mlb
+   HTML4/html4-lib.mlb
+   HashCons/hash-cons-lib.mlb
+   INet/inet-lib.mlb
+   JSON/json-lib.mlb
+   PP/pp-lib.mlb
+   Reactive/reactive-lib.mlb
+   RegExp/regexp-lib.mlb
+   SExp/sexp-lib.mlb
+   Unix/unix-lib.mlb
+   Util/smlnj-lib.mlb
+   Util/time-limit.mlb
+in
+end
